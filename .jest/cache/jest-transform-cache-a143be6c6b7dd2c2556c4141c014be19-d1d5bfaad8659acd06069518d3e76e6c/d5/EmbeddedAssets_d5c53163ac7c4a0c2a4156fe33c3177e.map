{"version":3,"sources":["../src/EmbeddedAssets.ts"],"names":[],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;;;AAGA,IAAM,aAAa,GAAG,IAAI,GAAJ,CAAQ,UAAU,CAAC,aAAX,IAA4B,EAApC,CAAtB;AAGA,IAAM,WAAW,GAAG,oCAApB;;AAMM,SAAU,mBAAV,CAA8B,IAA9B,EAA4C,IAA5C,EAA+D;AAAA;;AACnE,MAAM,cAAc,GAAM,IAAN,UAAc,IAAd,WAAc,IAAd,GAAsB,EAAtB,CAApB;;AACA,MAAI,CAAC,WAAW,CAAC,cAAZ,CAA2B,cAA3B,CAAD,IAA+C,CAAC,OAApD,EAA6D;AAG3D,QAAM,SAAS,cAAY,IAAZ,IAAmB,IAAI,SAAO,IAAP,GAAgB,EAAvC,CAAf;;AACA,QAAI,uBAAU,YAAV,KAA2B,YAA3B,IAA2C,CAAC,aAAa,CAAC,GAAd,CAAkB,SAAlB,CAAhD,EAA8E;AAC5E,aAAO,IAAP;AACD;;AACD,gBAAU,UAAU,CAAC,eAArB,GAAuC,SAAvC;AACD;;AACD,kCAAO,WAAW,CAAC,cAAD,CAAlB,oCAAsC,IAAtC;AACD","sourcesContent":["import Constants from 'expo-constants';\nimport * as FileSystem from 'expo-file-system';\n\nimport { getLocalAssets } from './PlatformUtils';\n\n// Fast lookup check if assets are available in the local bundle in managed apps\nconst bundledAssets = new Set(FileSystem.bundledAssets || []);\n\n// localAssets are provided by the expo-updates module\nconst localAssets = getLocalAssets();\n\n/**\n * Returns the local URI of an embedded asset from its hash and type, or null if the asset is not\n * included in the app bundle.\n */\nexport function getEmbeddedAssetUri(hash: string, type: string | null): string | null {\n  const localAssetsKey = `${hash}.${type ?? ''}`;\n  if (!localAssets.hasOwnProperty(localAssetsKey) && !__DEV__) {\n    // check legacy location in case we're in Expo client/managed workflow\n    // TODO(eric): remove this once bundledAssets is no longer exported from FileSystem\n    const assetName = `asset_${hash}${type ? `.${type}` : ''}`;\n    if (Constants.appOwnership !== 'standalone' || !bundledAssets.has(assetName)) {\n      return null;\n    }\n    return `${FileSystem.bundleDirectory}${assetName}`;\n  }\n  return localAssets[localAssetsKey] ?? null;\n}\n"],"sourceRoot":""}