94d7425ce84f117166b104082ef6abc5
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true });

exports.default = exports.ListAccordionGroupContext = void 0;

var React = _interopRequireWildcard(require("react"));

function _getRequireWildcardCache() {if (typeof WeakMap !== "function") return null;var cache = new WeakMap();_getRequireWildcardCache = function _getRequireWildcardCache() {return cache;};return cache;}

function _interopRequireWildcard(obj) {if (obj && obj.__esModule) {return obj;}if (obj === null || typeof obj !== "object" && typeof obj !== "function") {return { default: obj };}var cache = _getRequireWildcardCache();if (cache && cache.has(obj)) {return cache.get(obj);}var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {if (Object.prototype.hasOwnProperty.call(obj, key)) {var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}newObj.default = obj;if (cache) {cache.set(obj, newObj);}return newObj;}

var ListAccordionGroupContext = React.createContext(null);






































exports.ListAccordionGroupContext = ListAccordionGroupContext;

var ListAccordionGroup = function ListAccordionGroup(_ref)



{var expandedIdProp = _ref.expandedId,onAccordionPress = _ref.onAccordionPress,children = _ref.children;
  var _React$useState = React.useState(undefined),_React$useState2 = require("@babel/runtime/helpers/slicedToArray")(_React$useState, 2),expandedId = _React$useState2[0],setExpandedId = _React$useState2[1];

  var onAccordionPressDefault = function onAccordionPressDefault(newExpandedId) {
    setExpandedId(function (currentExpandedId) {return currentExpandedId === newExpandedId ? undefined : newExpandedId;});
  };

  return React.createElement(ListAccordionGroupContext.Provider, {
    value: {
      expandedId: expandedIdProp || expandedId,

      onAccordionPress: onAccordionPress || onAccordionPressDefault } },

  children);
};

ListAccordionGroup.displayName = 'List.AccordionGroup';
var _default = ListAccordionGroup;
exports.default = _default;