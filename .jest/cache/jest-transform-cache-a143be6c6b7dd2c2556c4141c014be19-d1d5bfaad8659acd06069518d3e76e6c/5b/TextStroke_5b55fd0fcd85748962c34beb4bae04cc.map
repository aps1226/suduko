{"version":3,"sources":["C:\\Users\\ashee\\Documents\\Javascript\\React\\React Native\\suduko\\components\\TextStroke.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { Children, cloneElement, isValidElement } from \"react\";\r\n\r\ntype Props = {\r\n  children: any,\r\n  color: string,\r\n  stroke: number\r\n}\r\nconst styles = StyleSheet.create({\r\n  outline: {\r\n    position: 'absolute'\r\n  },\r\n});\r\n\r\nexport default function TextStroke(props:Props){\r\n  const createClones = (w: number, h: number, color?: string) => {\r\n    const { children } = props;\r\n    return Children.map(children, child => {\r\n      if (isValidElement(child)) {\r\n        const currentProps = child.props as any;\r\n        const currentStyle = currentProps ? (currentProps.style || {}) : {};\r\n\r\n        const newProps = {\r\n          ...currentProps,\r\n          style: {\r\n            ...currentStyle,\r\n            textShadowOffset: {\r\n              width: w,\r\n              height: h\r\n            },\r\n            textShadowColor: color,\r\n            textShadowRadius: 1\r\n          }\r\n        }\r\n        return cloneElement(child, newProps)\r\n      }\r\n      return child;\r\n    });\r\n  }\r\n\r\n  const {color, stroke, children} = props;\r\n  const strokeW = stroke;\r\n  const top = createClones(0, -strokeW * 1.2, color);\r\n  const topLeft = createClones(-strokeW, -strokeW, color);\r\n  const topRight = createClones(strokeW, -strokeW, color);\r\n  const right = createClones(strokeW, 0, color);\r\n  const bottom = createClones(0, strokeW, color);\r\n  const bottomLeft = createClones(-strokeW, strokeW, color);\r\n  const bottomRight = createClones(strokeW, strokeW, color);\r\n  const left = createClones(-strokeW * 1.2, 0, color);\r\n\r\n  return (\r\n    <View>\r\n      <View style={ styles.outline }>{ left }</View>\r\n      <View style={ styles.outline }>{ right }</View>\r\n      <View style={ styles.outline }>{ bottom }</View>\r\n      <View style={ styles.outline }>{ top }</View>\r\n      <View style={ styles.outline }>{ topLeft }</View>\r\n      <View style={ styles.outline }>{ topRight }</View>\r\n      <View style={ styles.outline }>{ bottomLeft }</View>\r\n      { bottomRight }\r\n    </View>\r\n  );\r\n  }\r\n"]}