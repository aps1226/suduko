1a4e74c6f4356a886126d89ec65ba400
"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");

var _utils = require("../utils");var _jsxFileName = "C:\\Users\\ashee\\Documents\\Javascript\\React\\React Native\\suduko\\node_modules\\react-native-confetti-cannon\\src\\components\\confetti.js";function _getRequireWildcardCache(nodeInterop) {if (typeof WeakMap !== "function") return null;var cacheBabelInterop = new WeakMap();var cacheNodeInterop = new WeakMap();return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {return nodeInterop ? cacheNodeInterop : cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj, nodeInterop) {if (!nodeInterop && obj && obj.__esModule) {return obj;}if (obj === null || typeof obj !== "object" && typeof obj !== "function") {return { default: obj };}var cache = _getRequireWildcardCache(nodeInterop);if (cache && cache.has(obj)) {return cache.get(obj);}var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}newObj.default = obj;if (cache) {cache.set(obj, newObj);}return newObj;}function _createSuper(Derived) {var hasNativeReflectConstruct = _isNativeReflectConstruct();return function _createSuperInternal() {var Super = (0, _getPrototypeOf2.default)(Derived),result;if (hasNativeReflectConstruct) {var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return (0, _possibleConstructorReturn2.default)(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === "undefined" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === "function") return true;try {Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));return true;} catch (e) {return false;}}var


















Confetti = function (_React$PureComponent) {(0, _inherits2.default)(Confetti, _React$PureComponent);var _super = _createSuper(Confetti);function Confetti() {var _this;(0, _classCallCheck2.default)(this, Confetti);for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {args[_key] = arguments[_key];}_this = _super.call.apply(_super, [this].concat(args));_this.

    width = (0, _utils.randomValue)(8, 16);_this.
    height = (0, _utils.randomValue)(6, 12);_this.
    isRounded = Math.round((0, _utils.randomValue)(0, 1)) === 1;return _this;}(0, _createClass2.default)(Confetti, [{ key: "render", value:

    function render() {
      var _this$props = this.props,containerTransform = _this$props.containerTransform,transform = _this$props.transform,opacity = _this$props.opacity,color = _this$props.color;
      var width = this.width,height = this.height,isRounded = this.isRounded;
      var containerStyle = { transform: containerTransform };
      var style = { width: width, height: height, backgroundColor: color, transform: transform, opacity: opacity };

      return (
        React.createElement(_reactNative.Animated.View, {
          pointerEvents: "none",
          renderToHardwareTextureAndroid: true,
          style: [styles.confetti, containerStyle], __self: this, __self: this, __source: { fileName: _jsxFileName, lineNumber: 38, columnNumber: 7 } },
        React.createElement(_reactNative.Animated.View, { style: [isRounded && styles.rounded, style], __self: this, __self: this, __source: { fileName: _jsxFileName, lineNumber: 42, columnNumber: 9 } })));


    } }]);return Confetti;}(React.PureComponent);


var styles = _reactNative.StyleSheet.create({
  confetti: {
    position: 'absolute',
    left: 0,
    bottom: 0 },

  rounded: {
    borderRadius: 100 } });var _default =



Confetti;exports.default = _default;