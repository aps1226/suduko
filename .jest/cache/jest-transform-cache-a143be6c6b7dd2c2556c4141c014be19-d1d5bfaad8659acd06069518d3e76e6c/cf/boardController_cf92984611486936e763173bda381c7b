e17bdf307c76fd88673129cd418947ed
/* istanbul ignore next */
function cov_21q9389883() {
  var path = "C:\\Users\\ashee\\Documents\\Javascript\\React\\React Native\\suduko\\src\\state\\boardController.ts";
  var hash = "8bec129ff9689a1ec0969a46658a66327e0a08d3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\ashee\\Documents\\Javascript\\React\\React Native\\suduko\\src\\state\\boardController.ts",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 29
        },
        end: {
          line: 1,
          column: 84
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "2": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 26
        }
      },
      "3": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 26
        }
      },
      "4": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 38
        }
      },
      "5": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 38
        }
      },
      "6": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 32
        }
      },
      "7": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 30
        }
      },
      "8": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 34
        }
      },
      "9": {
        start: {
          line: 14,
          column: 26
        },
        end: {
          line: 14,
          column: 101
        }
      },
      "10": {
        start: {
          line: 17,
          column: 21
        },
        end: {
          line: 17,
          column: 33
        }
      },
      "11": {
        start: {
          line: 20,
          column: 2
        },
        end: {
          line: 26,
          column: 3
        }
      },
      "12": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 59
        }
      },
      "13": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 19
        }
      },
      "14": {
        start: {
          line: 23,
          column: 15
        },
        end: {
          line: 23,
          column: 56
        }
      },
      "15": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 34
        }
      },
      "16": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 33
        }
      },
      "17": {
        start: {
          line: 28,
          column: 2
        },
        end: {
          line: 28,
          column: 15
        }
      },
      "18": {
        start: {
          line: 32,
          column: 2
        },
        end: {
          line: 39,
          column: 3
        }
      },
      "19": {
        start: {
          line: 32,
          column: 15
        },
        end: {
          line: 32,
          column: 16
        }
      },
      "20": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 55
        }
      },
      "21": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 43
        }
      },
      "22": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "23": {
        start: {
          line: 37,
          column: 6
        },
        end: {
          line: 37,
          column: 19
        }
      },
      "24": {
        start: {
          line: 41,
          column: 2
        },
        end: {
          line: 41,
          column: 14
        }
      },
      "25": {
        start: {
          line: 45,
          column: 2
        },
        end: {
          line: 65,
          column: 3
        }
      },
      "26": {
        start: {
          line: 45,
          column: 15
        },
        end: {
          line: 45,
          column: 16
        }
      },
      "27": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 64,
          column: 5
        }
      },
      "28": {
        start: {
          line: 46,
          column: 17
        },
        end: {
          line: 46,
          column: 18
        }
      },
      "29": {
        start: {
          line: 47,
          column: 6
        },
        end: {
          line: 63,
          column: 7
        }
      },
      "30": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "31": {
        start: {
          line: 48,
          column: 21
        },
        end: {
          line: 48,
          column: 22
        }
      },
      "32": {
        start: {
          line: 49,
          column: 10
        },
        end: {
          line: 59,
          column: 11
        }
      },
      "33": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 27
        }
      },
      "34": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 58,
          column: 13
        }
      },
      "35": {
        start: {
          line: 53,
          column: 14
        },
        end: {
          line: 53,
          column: 40
        }
      },
      "36": {
        start: {
          line: 55,
          column: 14
        },
        end: {
          line: 55,
          column: 41
        }
      },
      "37": {
        start: {
          line: 57,
          column: 14
        },
        end: {
          line: 57,
          column: 32
        }
      },
      "38": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 20
        }
      },
      "39": {
        start: {
          line: 67,
          column: 2
        },
        end: {
          line: 67,
          column: 14
        }
      },
      "40": {
        start: {
          line: 71,
          column: 2
        },
        end: {
          line: 96,
          column: 3
        }
      },
      "41": {
        start: {
          line: 71,
          column: 15
        },
        end: {
          line: 71,
          column: 16
        }
      },
      "42": {
        start: {
          line: 72,
          column: 14
        },
        end: {
          line: 72,
          column: 23
        }
      },
      "43": {
        start: {
          line: 73,
          column: 14
        },
        end: {
          line: 73,
          column: 23
        }
      },
      "44": {
        start: {
          line: 74,
          column: 14
        },
        end: {
          line: 74,
          column: 23
        }
      },
      "45": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 95,
          column: 5
        }
      },
      "46": {
        start: {
          line: 76,
          column: 17
        },
        end: {
          line: 76,
          column: 18
        }
      },
      "47": {
        start: {
          line: 77,
          column: 17
        },
        end: {
          line: 77,
          column: 28
        }
      },
      "48": {
        start: {
          line: 78,
          column: 17
        },
        end: {
          line: 78,
          column: 28
        }
      },
      "49": {
        start: {
          line: 79,
          column: 17
        },
        end: {
          line: 79,
          column: 86
        }
      },
      "50": {
        start: {
          line: 81,
          column: 6
        },
        end: {
          line: 84,
          column: 7
        }
      },
      "51": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 40
        }
      },
      "52": {
        start: {
          line: 82,
          column: 27
        },
        end: {
          line: 82,
          column: 40
        }
      },
      "53": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 22
        }
      },
      "54": {
        start: {
          line: 86,
          column: 6
        },
        end: {
          line: 89,
          column: 7
        }
      },
      "55": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 40
        }
      },
      "56": {
        start: {
          line: 87,
          column: 27
        },
        end: {
          line: 87,
          column: 40
        }
      },
      "57": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 22
        }
      },
      "58": {
        start: {
          line: 91,
          column: 6
        },
        end: {
          line: 94,
          column: 7
        }
      },
      "59": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 40
        }
      },
      "60": {
        start: {
          line: 92,
          column: 27
        },
        end: {
          line: 92,
          column: 40
        }
      },
      "61": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 22
        }
      },
      "62": {
        start: {
          line: 98,
          column: 2
        },
        end: {
          line: 98,
          column: 14
        }
      },
      "63": {
        start: {
          line: 104,
          column: 2
        },
        end: {
          line: 122,
          column: 3
        }
      },
      "64": {
        start: {
          line: 104,
          column: 15
        },
        end: {
          line: 104,
          column: 16
        }
      },
      "65": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 121,
          column: 5
        }
      },
      "66": {
        start: {
          line: 105,
          column: 17
        },
        end: {
          line: 105,
          column: 18
        }
      },
      "67": {
        start: {
          line: 106,
          column: 6
        },
        end: {
          line: 120,
          column: 7
        }
      },
      "68": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "69": {
        start: {
          line: 107,
          column: 21
        },
        end: {
          line: 107,
          column: 22
        }
      },
      "70": {
        start: {
          line: 108,
          column: 10
        },
        end: {
          line: 116,
          column: 11
        }
      },
      "71": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 27
        }
      },
      "72": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 115,
          column: 13
        }
      },
      "73": {
        start: {
          line: 112,
          column: 14
        },
        end: {
          line: 112,
          column: 26
        }
      },
      "74": {
        start: {
          line: 114,
          column: 14
        },
        end: {
          line: 114,
          column: 32
        }
      },
      "75": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 21
        }
      },
      "76": {
        start: {
          line: 124,
          column: 2
        },
        end: {
          line: 124,
          column: 14
        }
      },
      "77": {
        start: {
          line: 128,
          column: 14
        },
        end: {
          line: 128,
          column: 44
        }
      },
      "78": {
        start: {
          line: 130,
          column: 2
        },
        end: {
          line: 146,
          column: 3
        }
      },
      "79": {
        start: {
          line: 132,
          column: 6
        },
        end: {
          line: 132,
          column: 57
        }
      },
      "80": {
        start: {
          line: 133,
          column: 6
        },
        end: {
          line: 133,
          column: 12
        }
      },
      "81": {
        start: {
          line: 136,
          column: 6
        },
        end: {
          line: 136,
          column: 57
        }
      },
      "82": {
        start: {
          line: 137,
          column: 6
        },
        end: {
          line: 137,
          column: 12
        }
      },
      "83": {
        start: {
          line: 140,
          column: 6
        },
        end: {
          line: 140,
          column: 56
        }
      },
      "84": {
        start: {
          line: 141,
          column: 6
        },
        end: {
          line: 141,
          column: 12
        }
      },
      "85": {
        start: {
          line: 144,
          column: 6
        },
        end: {
          line: 144,
          column: 17
        }
      },
      "86": {
        start: {
          line: 145,
          column: 6
        },
        end: {
          line: 145,
          column: 12
        }
      },
      "87": {
        start: {
          line: 148,
          column: 2
        },
        end: {
          line: 160,
          column: 3
        }
      },
      "88": {
        start: {
          line: 148,
          column: 15
        },
        end: {
          line: 148,
          column: 16
        }
      },
      "89": {
        start: {
          line: 149,
          column: 14
        },
        end: {
          line: 149,
          column: 43
        }
      },
      "90": {
        start: {
          line: 150,
          column: 14
        },
        end: {
          line: 150,
          column: 43
        }
      },
      "91": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 154,
          column: 5
        }
      },
      "92": {
        start: {
          line: 153,
          column: 6
        },
        end: {
          line: 153,
          column: 79
        }
      },
      "93": {
        start: {
          line: 156,
          column: 22
        },
        end: {
          line: 158,
          column: 6
        }
      },
      "94": {
        start: {
          line: 157,
          column: 6
        },
        end: {
          line: 157,
          column: 51
        }
      },
      "95": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 159,
          column: 30
        }
      },
      "96": {
        start: {
          line: 162,
          column: 2
        },
        end: {
          line: 162,
          column: 18
        }
      },
      "97": {
        start: {
          line: 166,
          column: 2
        },
        end: {
          line: 168,
          column: 3
        }
      },
      "98": {
        start: {
          line: 166,
          column: 15
        },
        end: {
          line: 166,
          column: 16
        }
      },
      "99": {
        start: {
          line: 167,
          column: 4
        },
        end: {
          line: 167,
          column: 46
        }
      },
      "100": {
        start: {
          line: 167,
          column: 33
        },
        end: {
          line: 167,
          column: 46
        }
      },
      "101": {
        start: {
          line: 170,
          column: 2
        },
        end: {
          line: 170,
          column: 14
        }
      }
    },
    fnMap: {
      "0": {
        name: "shuffle",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 16
          }
        },
        loc: {
          start: {
            line: 16,
            column: 24
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 16
      },
      "1": {
        name: "isValid",
        decl: {
          start: {
            line: 31,
            column: 9
          },
          end: {
            line: 31,
            column: 16
          }
        },
        loc: {
          start: {
            line: 31,
            column: 37
          },
          end: {
            line: 42,
            column: 1
          }
        },
        line: 31
      },
      "2": {
        name: "generateBoard",
        decl: {
          start: {
            line: 44,
            column: 9
          },
          end: {
            line: 44,
            column: 22
          }
        },
        loc: {
          start: {
            line: 44,
            column: 29
          },
          end: {
            line: 68,
            column: 1
          }
        },
        line: 44
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 52,
            column: 42
          },
          end: {
            line: 52,
            column: 43
          }
        },
        loc: {
          start: {
            line: 52,
            column: 57
          },
          end: {
            line: 54,
            column: 13
          }
        },
        line: 52
      },
      "4": {
        name: "isValidSudoku",
        decl: {
          start: {
            line: 70,
            column: 9
          },
          end: {
            line: 70,
            column: 22
          }
        },
        loc: {
          start: {
            line: 70,
            column: 30
          },
          end: {
            line: 99,
            column: 1
          }
        },
        line: 70
      },
      "5": {
        name: "isSolvable",
        decl: {
          start: {
            line: 103,
            column: 9
          },
          end: {
            line: 103,
            column: 19
          }
        },
        loc: {
          start: {
            line: 103,
            column: 26
          },
          end: {
            line: 125,
            column: 1
          }
        },
        line: 103
      },
      "6": {
        name: "initBoard",
        decl: {
          start: {
            line: 127,
            column: 9
          },
          end: {
            line: 127,
            column: 18
          }
        },
        loc: {
          start: {
            line: 127,
            column: 41
          },
          end: {
            line: 163,
            column: 1
          }
        },
        line: 127
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 156,
            column: 35
          },
          end: {
            line: 156,
            column: 36
          }
        },
        loc: {
          start: {
            line: 156,
            column: 50
          },
          end: {
            line: 158,
            column: 5
          }
        },
        line: 156
      },
      "8": {
        name: "isCompleted",
        decl: {
          start: {
            line: 165,
            column: 9
          },
          end: {
            line: 165,
            column: 20
          }
        },
        loc: {
          start: {
            line: 165,
            column: 28
          },
          end: {
            line: 171,
            column: 1
          }
        },
        line: 165
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        }, {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        }],
        line: 36
      },
      "1": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 26
          }
        }, {
          start: {
            line: 36,
            column: 30
          },
          end: {
            line: 36,
            column: 48
          }
        }, {
          start: {
            line: 36,
            column: 52
          },
          end: {
            line: 36,
            column: 68
          }
        }],
        line: 36
      },
      "2": {
        loc: {
          start: {
            line: 47,
            column: 6
          },
          end: {
            line: 63,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 6
          },
          end: {
            line: 63,
            column: 7
          }
        }, {
          start: {
            line: 47,
            column: 6
          },
          end: {
            line: 63,
            column: 7
          }
        }],
        line: 47
      },
      "3": {
        loc: {
          start: {
            line: 49,
            column: 10
          },
          end: {
            line: 59,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 10
          },
          end: {
            line: 59,
            column: 11
          }
        }, {
          start: {
            line: 49,
            column: 10
          },
          end: {
            line: 59,
            column: 11
          }
        }],
        line: 49
      },
      "4": {
        loc: {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        }, {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        }],
        line: 52
      },
      "5": {
        loc: {
          start: {
            line: 81,
            column: 6
          },
          end: {
            line: 84,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 6
          },
          end: {
            line: 84,
            column: 7
          }
        }, {
          start: {
            line: 81,
            column: 6
          },
          end: {
            line: 84,
            column: 7
          }
        }],
        line: 81
      },
      "6": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 82,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 82,
            column: 40
          }
        }, {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 82,
            column: 40
          }
        }],
        line: 82
      },
      "7": {
        loc: {
          start: {
            line: 86,
            column: 6
          },
          end: {
            line: 89,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 6
          },
          end: {
            line: 89,
            column: 7
          }
        }, {
          start: {
            line: 86,
            column: 6
          },
          end: {
            line: 89,
            column: 7
          }
        }],
        line: 86
      },
      "8": {
        loc: {
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 87,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 87,
            column: 40
          }
        }, {
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 87,
            column: 40
          }
        }],
        line: 87
      },
      "9": {
        loc: {
          start: {
            line: 91,
            column: 6
          },
          end: {
            line: 94,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 6
          },
          end: {
            line: 94,
            column: 7
          }
        }, {
          start: {
            line: 91,
            column: 6
          },
          end: {
            line: 94,
            column: 7
          }
        }],
        line: 91
      },
      "10": {
        loc: {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 92,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 92,
            column: 40
          }
        }, {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 92,
            column: 40
          }
        }],
        line: 92
      },
      "11": {
        loc: {
          start: {
            line: 106,
            column: 6
          },
          end: {
            line: 120,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 6
          },
          end: {
            line: 120,
            column: 7
          }
        }, {
          start: {
            line: 106,
            column: 6
          },
          end: {
            line: 120,
            column: 7
          }
        }],
        line: 106
      },
      "12": {
        loc: {
          start: {
            line: 108,
            column: 10
          },
          end: {
            line: 116,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 10
          },
          end: {
            line: 116,
            column: 11
          }
        }, {
          start: {
            line: 108,
            column: 10
          },
          end: {
            line: 116,
            column: 11
          }
        }],
        line: 108
      },
      "13": {
        loc: {
          start: {
            line: 111,
            column: 12
          },
          end: {
            line: 115,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 12
          },
          end: {
            line: 115,
            column: 13
          }
        }, {
          start: {
            line: 111,
            column: 12
          },
          end: {
            line: 115,
            column: 13
          }
        }],
        line: 111
      },
      "14": {
        loc: {
          start: {
            line: 130,
            column: 2
          },
          end: {
            line: 146,
            column: 3
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 131,
            column: 4
          },
          end: {
            line: 133,
            column: 12
          }
        }, {
          start: {
            line: 135,
            column: 4
          },
          end: {
            line: 137,
            column: 12
          }
        }, {
          start: {
            line: 139,
            column: 4
          },
          end: {
            line: 141,
            column: 12
          }
        }, {
          start: {
            line: 143,
            column: 4
          },
          end: {
            line: 145,
            column: 12
          }
        }],
        line: 130
      },
      "15": {
        loc: {
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 167,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 167,
            column: 46
          }
        }, {
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 167,
            column: 46
          }
        }],
        line: 167
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0, 0, 0],
      "15": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\ashee\\Documents\\Javascript\\React\\React Native\\suduko\\src\\state\\boardController.ts"],
      names: [],
      mappings: "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",
      sourcesContent: ["//Function shuffles array.\r\nexport function shuffle(array: number[]):number[] {\r\n  var currentIndex:number = array.length,  randomIndex:number;\r\n  // While there remain elements to shuffle...\r\n  while (0 !== currentIndex) {\r\n    // Pick a remaining element...\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n    // And swap it with the current element.\r\n    [array[currentIndex], array[randomIndex]] = [\r\n      array[randomIndex], array[currentIndex]];\r\n  }\r\n  return array;\r\n}\r\n\r\n//Helper function for generateBoard function to determine if respective row and column are valid inputs.\r\nexport function isValid(board:(number|null)[][], row:number, col:number, k:number) {\r\n  //Determine if the current value k exists with in the respective positions:\r\n    //row\r\n    //column\r\n    //sub-box\r\n  //If it does, the entry is not valid.\r\n  for (let i = 0; i < 9; i++) {\r\n      const m = 3 * Math.floor(row / 3) + Math.floor(i / 3);\r\n      const n = 3 * Math.floor(col / 3) + i % 3;\r\n      if (board[row][i] == k || board[i][col] == k || board[m][n] == k) {\r\n        return false;\r\n      }\r\n  }\r\n  return true;\r\n}\r\n\r\n//Function to generate game board.\r\nexport function generateBoard(data:(number|null)[][]):(number|null)[][] {\r\n  //Iterate through each row of board.\r\n  for (let i = 0; i < 9; i++) {\r\n    //Iterate through column of respective row.\r\n    for (let j = 0; j < 9; j++) {\r\n      //If current value needs an entry.\r\n      if (data[i][j] === null) {\r\n        //Iterate through possible values.\r\n        for (let k = 1; k <= 9; k++) {\r\n          //Determine if current value if valid for the board\r\n          //at the current position.\r\n          if (isValid(data, i, j, k)) {\r\n            data[i][j] = k;\r\n            //If the value is valid, recurse with the given value\r\n            //entered on the board.\r\n            if (!generateBoard(data).some(row => row.includes(null))) {\r\n              return generateBoard(data);\r\n            //If false is returned, iterate to the next value.\r\n            } else {\r\n              data[i][j] = null;\r\n            }\r\n          }\r\n        }\r\n        return data;\r\n      }\r\n    }\r\n  }\r\n  return data;\r\n}\r\n\r\n//Function determines if the current game board is valid.\r\nexport function isValidSudoku(board:(number|null)[][]):boolean {\r\n  for (let i = 0; i < 9; i++) {\r\n    let row = new Set(),\r\n        col = new Set(),\r\n        box = new Set();\r\n\r\n    for (let j = 0; j < 9; j++) {\r\n      let _row = board[i][j];\r\n      let _col = board[j][i];\r\n      let _box = board[3*Math.floor(i/3)+Math.floor(j/3)][3*(i%3)+(j%3)]\r\n      \r\n      if (_row !== null) {\r\n        if (row.has(_row)) return false;\r\n        row.add(_row);\r\n      }\r\n      if (_col !== null) {\r\n        if (col.has(_col)) return false;\r\n        col.add(_col);\r\n      }\r\n      \r\n      if (_box !== null) {\r\n        if (box.has(_box)) return false;\r\n        box.add(_box);\r\n      } \r\n    }\r\n  }\r\n  return true\r\n};\r\n\r\n//Function determines if the current game board is solvable.\r\nexport function isSolvable(data:(number|null)[][]):boolean {\r\n  //Iterate through each row of board.\r\n  for (let i = 0; i < 9; i++) {\r\n    //Iterate through column of respective row.\r\n    for (let j = 0; j < 9; j++) {\r\n      //If current value needs an entry.\r\n      if (data[i][j] == null) {\r\n        //Iterate through possible values.\r\n        for (let k = 1; k <= 9; k++) {\r\n          //Determine if current value if valid for the board\r\n          //at the current position.\r\n          if (isValid(data, i, j, k)) {\r\n            data[i][j] = k;\r\n            //If the value is valid, recurse with the given value\r\n            //entered on the board.\r\n            if (isSolvable(data)) {\r\n              return true;\r\n            //If false is returned, iterate to the next value.\r\n            } else {\r\n              data[i][j] = null;\r\n            }\r\n          }\r\n        }\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n//Function initializes game board based on difficulty input.\r\nexport function initBoard(curBoard: (number|null)[][], difficulty:number):(number|null)[][]{\r\n  let blank:number = Math.floor(37 * Math.random());\r\n  switch(difficulty){\r\n    //Easy selection.\r\n    case 0:\r\n      //Board should be initialized with (37, 46) non-null values.\r\n      blank = 81 - (37 + Math.floor(10 * Math.random()));\r\n      break;\r\n    //Medium selection.\r\n    case 1:\r\n      //Board should be initialized with (27, 36) non-null values.\r\n      blank = 81 - (27 + Math.floor(10 * Math.random()));\r\n      break;\r\n    //Hard selection.\r\n    case 2:\r\n      //Board should be initialized with (19, 26) non-null values.\r\n      blank = 81 - (19 + Math.floor(7 * Math.random()));\r\n      break;\r\n    //Extreme selection.\r\n    case 3:\r\n      //Board should be initialized with 18 non-null values.\r\n      blank = 63;\r\n      break;\r\n  }\r\n\r\n  for(let i = 0; i < blank; i++){\r\n    let row:number = Math.floor(9*Math.random());\r\n    let col:number = Math.floor(9*Math.random());\r\n    while(!curBoard[row][col]) row = Math.floor(9*Math.random()),col = Math.floor(9*Math.random());\r\n    const clonedBoard = curBoard.map(arr => [...arr])\r\n    // while(!isSolvable(clonedBoard)){\r\n    //   clonedBoard[row][col] = curBoard[row][col];\r\n    //   row = Math.floor(9*Math.random());\r\n    //   col = Math.floor(9*Math.random());\r\n    //   while(!curBoard[row][col]) row = Math.floor(9*Math.random()),col = Math.floor(9*Math.random());\r\n    //   clonedBoard[row][col] = null;\r\n    // }\r\n    curBoard[row][col] = null;\r\n  }\r\n  return curBoard;\r\n}\r\n\r\n//Function determines if the board has been solved.\r\nexport function isCompleted(board:(number|null)[][]):boolean{\r\n  for(let i = 0; i < board.length; i++){\r\n    if(board[i].includes(null)) return false;\r\n  }\r\n  return true;\r\n}"]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8bec129ff9689a1ec0969a46658a66327e0a08d3"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_21q9389883 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_21q9389883();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_21q9389883().s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_21q9389883().s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_21q9389883().s[2]++;
exports.shuffle = shuffle;

/* istanbul ignore next */
cov_21q9389883().s[3]++;
exports.isValid = isValid;

/* istanbul ignore next */
cov_21q9389883().s[4]++;
exports.generateBoard = generateBoard;

/* istanbul ignore next */
cov_21q9389883().s[5]++;
exports.isValidSudoku = isValidSudoku;

/* istanbul ignore next */
cov_21q9389883().s[6]++;
exports.isSolvable = isSolvable;

/* istanbul ignore next */
cov_21q9389883().s[7]++;
exports.initBoard = initBoard;

/* istanbul ignore next */
cov_21q9389883().s[8]++;
exports.isCompleted = isCompleted;

var _toConsumableArray2 =
/* istanbul ignore next */
(cov_21q9389883().s[9]++, _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray")));

function shuffle(array) {
  /* istanbul ignore next */
  cov_21q9389883().f[0]++;
  var currentIndex =
  /* istanbul ignore next */
  (cov_21q9389883().s[10]++, array.length),
      randomIndex;

  /* istanbul ignore next */
  cov_21q9389883().s[11]++;

  while (0 !== currentIndex) {
    /* istanbul ignore next */
    cov_21q9389883().s[12]++;
    randomIndex = Math.floor(Math.random() * currentIndex);

    /* istanbul ignore next */
    cov_21q9389883().s[13]++;
    currentIndex--;

    var _ref =
    /* istanbul ignore next */
    (cov_21q9389883().s[14]++, [array[randomIndex], array[currentIndex]]);

    /* istanbul ignore next */
    cov_21q9389883().s[15]++;
    array[currentIndex] = _ref[0];

    /* istanbul ignore next */
    cov_21q9389883().s[16]++;
    array[randomIndex] = _ref[1];
  }

  /* istanbul ignore next */
  cov_21q9389883().s[17]++;
  return array;
}

function isValid(board, row, col, k) {
  /* istanbul ignore next */
  cov_21q9389883().f[1]++;
  cov_21q9389883().s[18]++;

  for (var i =
  /* istanbul ignore next */
  (cov_21q9389883().s[19]++, 0); i < 9; i++) {
    var m =
    /* istanbul ignore next */
    (cov_21q9389883().s[20]++, 3 * Math.floor(row / 3) + Math.floor(i / 3));
    var n =
    /* istanbul ignore next */
    (cov_21q9389883().s[21]++, 3 * Math.floor(col / 3) + i % 3);

    /* istanbul ignore next */
    cov_21q9389883().s[22]++;

    if (
    /* istanbul ignore next */
    (cov_21q9389883().b[1][0]++, board[row][i] == k) ||
    /* istanbul ignore next */
    (cov_21q9389883().b[1][1]++, board[i][col] == k) ||
    /* istanbul ignore next */
    (cov_21q9389883().b[1][2]++, board[m][n] == k)) {
      /* istanbul ignore next */
      cov_21q9389883().b[0][0]++;
      cov_21q9389883().s[23]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_21q9389883().b[0][1]++;
    }
  }

  /* istanbul ignore next */
  cov_21q9389883().s[24]++;
  return true;
}

function generateBoard(data) {
  /* istanbul ignore next */
  cov_21q9389883().f[2]++;
  cov_21q9389883().s[25]++;

  for (var i =
  /* istanbul ignore next */
  (cov_21q9389883().s[26]++, 0); i < 9; i++) {
    /* istanbul ignore next */
    cov_21q9389883().s[27]++;

    for (var j =
    /* istanbul ignore next */
    (cov_21q9389883().s[28]++, 0); j < 9; j++) {
      /* istanbul ignore next */
      cov_21q9389883().s[29]++;

      if (data[i][j] === null) {
        /* istanbul ignore next */
        cov_21q9389883().b[2][0]++;
        cov_21q9389883().s[30]++;

        for (var k =
        /* istanbul ignore next */
        (cov_21q9389883().s[31]++, 1); k <= 9; k++) {
          /* istanbul ignore next */
          cov_21q9389883().s[32]++;

          if (isValid(data, i, j, k)) {
            /* istanbul ignore next */
            cov_21q9389883().b[3][0]++;
            cov_21q9389883().s[33]++;
            data[i][j] = k;

            /* istanbul ignore next */
            cov_21q9389883().s[34]++;

            if (!generateBoard(data).some(function (row) {
              /* istanbul ignore next */
              cov_21q9389883().f[3]++;
              cov_21q9389883().s[35]++;
              return row.includes(null);
            })) {
              /* istanbul ignore next */
              cov_21q9389883().b[4][0]++;
              cov_21q9389883().s[36]++;
              return generateBoard(data);
            } else {
              /* istanbul ignore next */
              cov_21q9389883().b[4][1]++;
              cov_21q9389883().s[37]++;
              data[i][j] = null;
            }
          } else
          /* istanbul ignore next */
          {
            cov_21q9389883().b[3][1]++;
          }
        }

        /* istanbul ignore next */
        cov_21q9389883().s[38]++;
        return data;
      } else
      /* istanbul ignore next */
      {
        cov_21q9389883().b[2][1]++;
      }
    }
  }

  /* istanbul ignore next */
  cov_21q9389883().s[39]++;
  return data;
}

function isValidSudoku(board) {
  /* istanbul ignore next */
  cov_21q9389883().f[4]++;
  cov_21q9389883().s[40]++;

  for (var i =
  /* istanbul ignore next */
  (cov_21q9389883().s[41]++, 0); i < 9; i++) {
    var row =
    /* istanbul ignore next */
    (cov_21q9389883().s[42]++, new Set()),
        col =
    /* istanbul ignore next */
    (cov_21q9389883().s[43]++, new Set()),
        box =
    /* istanbul ignore next */
    (cov_21q9389883().s[44]++, new Set());

    /* istanbul ignore next */
    cov_21q9389883().s[45]++;

    for (var j =
    /* istanbul ignore next */
    (cov_21q9389883().s[46]++, 0); j < 9; j++) {
      var _row =
      /* istanbul ignore next */
      (cov_21q9389883().s[47]++, board[i][j]);

      var _col =
      /* istanbul ignore next */
      (cov_21q9389883().s[48]++, board[j][i]);

      var _box =
      /* istanbul ignore next */
      (cov_21q9389883().s[49]++, board[3 * Math.floor(i / 3) + Math.floor(j / 3)][3 * (i % 3) + j % 3]);

      /* istanbul ignore next */
      cov_21q9389883().s[50]++;

      if (_row !== null) {
        /* istanbul ignore next */
        cov_21q9389883().b[5][0]++;
        cov_21q9389883().s[51]++;

        if (row.has(_row)) {
          /* istanbul ignore next */
          cov_21q9389883().b[6][0]++;
          cov_21q9389883().s[52]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_21q9389883().b[6][1]++;
        }

        cov_21q9389883().s[53]++;
        row.add(_row);
      } else
      /* istanbul ignore next */
      {
        cov_21q9389883().b[5][1]++;
      }

      cov_21q9389883().s[54]++;

      if (_col !== null) {
        /* istanbul ignore next */
        cov_21q9389883().b[7][0]++;
        cov_21q9389883().s[55]++;

        if (col.has(_col)) {
          /* istanbul ignore next */
          cov_21q9389883().b[8][0]++;
          cov_21q9389883().s[56]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_21q9389883().b[8][1]++;
        }

        cov_21q9389883().s[57]++;
        col.add(_col);
      } else
      /* istanbul ignore next */
      {
        cov_21q9389883().b[7][1]++;
      }

      cov_21q9389883().s[58]++;

      if (_box !== null) {
        /* istanbul ignore next */
        cov_21q9389883().b[9][0]++;
        cov_21q9389883().s[59]++;

        if (box.has(_box)) {
          /* istanbul ignore next */
          cov_21q9389883().b[10][0]++;
          cov_21q9389883().s[60]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_21q9389883().b[10][1]++;
        }

        cov_21q9389883().s[61]++;
        box.add(_box);
      } else
      /* istanbul ignore next */
      {
        cov_21q9389883().b[9][1]++;
      }
    }
  }

  /* istanbul ignore next */
  cov_21q9389883().s[62]++;
  return true;
}

;

function isSolvable(data) {
  /* istanbul ignore next */
  cov_21q9389883().f[5]++;
  cov_21q9389883().s[63]++;

  for (var i =
  /* istanbul ignore next */
  (cov_21q9389883().s[64]++, 0); i < 9; i++) {
    /* istanbul ignore next */
    cov_21q9389883().s[65]++;

    for (var j =
    /* istanbul ignore next */
    (cov_21q9389883().s[66]++, 0); j < 9; j++) {
      /* istanbul ignore next */
      cov_21q9389883().s[67]++;

      if (data[i][j] == null) {
        /* istanbul ignore next */
        cov_21q9389883().b[11][0]++;
        cov_21q9389883().s[68]++;

        for (var k =
        /* istanbul ignore next */
        (cov_21q9389883().s[69]++, 1); k <= 9; k++) {
          /* istanbul ignore next */
          cov_21q9389883().s[70]++;

          if (isValid(data, i, j, k)) {
            /* istanbul ignore next */
            cov_21q9389883().b[12][0]++;
            cov_21q9389883().s[71]++;
            data[i][j] = k;

            /* istanbul ignore next */
            cov_21q9389883().s[72]++;

            if (isSolvable(data)) {
              /* istanbul ignore next */
              cov_21q9389883().b[13][0]++;
              cov_21q9389883().s[73]++;
              return true;
            } else {
              /* istanbul ignore next */
              cov_21q9389883().b[13][1]++;
              cov_21q9389883().s[74]++;
              data[i][j] = null;
            }
          } else
          /* istanbul ignore next */
          {
            cov_21q9389883().b[12][1]++;
          }
        }

        /* istanbul ignore next */
        cov_21q9389883().s[75]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_21q9389883().b[11][1]++;
      }
    }
  }

  /* istanbul ignore next */
  cov_21q9389883().s[76]++;
  return true;
}

function initBoard(curBoard, difficulty) {
  /* istanbul ignore next */
  cov_21q9389883().f[6]++;
  var blank =
  /* istanbul ignore next */
  (cov_21q9389883().s[77]++, Math.floor(37 * Math.random()));

  /* istanbul ignore next */
  cov_21q9389883().s[78]++;

  switch (difficulty) {
    case 0:
      /* istanbul ignore next */
      cov_21q9389883().b[14][0]++;
      cov_21q9389883().s[79]++;
      blank = 81 - (37 + Math.floor(10 * Math.random()));

      /* istanbul ignore next */
      cov_21q9389883().s[80]++;
      break;

    case 1:
      /* istanbul ignore next */
      cov_21q9389883().b[14][1]++;
      cov_21q9389883().s[81]++;
      blank = 81 - (27 + Math.floor(10 * Math.random()));

      /* istanbul ignore next */
      cov_21q9389883().s[82]++;
      break;

    case 2:
      /* istanbul ignore next */
      cov_21q9389883().b[14][2]++;
      cov_21q9389883().s[83]++;
      blank = 81 - (19 + Math.floor(7 * Math.random()));

      /* istanbul ignore next */
      cov_21q9389883().s[84]++;
      break;

    case 3:
      /* istanbul ignore next */
      cov_21q9389883().b[14][3]++;
      cov_21q9389883().s[85]++;
      blank = 63;

      /* istanbul ignore next */
      cov_21q9389883().s[86]++;
      break;
  }

  /* istanbul ignore next */
  cov_21q9389883().s[87]++;

  for (var i =
  /* istanbul ignore next */
  (cov_21q9389883().s[88]++, 0); i < blank; i++) {
    var row =
    /* istanbul ignore next */
    (cov_21q9389883().s[89]++, Math.floor(9 * Math.random()));
    var col =
    /* istanbul ignore next */
    (cov_21q9389883().s[90]++, Math.floor(9 * Math.random()));

    /* istanbul ignore next */
    cov_21q9389883().s[91]++;

    while (!curBoard[row][col]) {
      /* istanbul ignore next */
      cov_21q9389883().s[92]++;
      row = Math.floor(9 * Math.random()), col = Math.floor(9 * Math.random());
    }

    var clonedBoard =
    /* istanbul ignore next */
    (cov_21q9389883().s[93]++, curBoard.map(function (arr) {
      /* istanbul ignore next */
      cov_21q9389883().f[7]++;
      cov_21q9389883().s[94]++;
      return (0, _toConsumableArray2.default)(arr);
    }));

    /* istanbul ignore next */
    cov_21q9389883().s[95]++;
    curBoard[row][col] = null;
  }

  /* istanbul ignore next */
  cov_21q9389883().s[96]++;
  return curBoard;
}

function isCompleted(board) {
  /* istanbul ignore next */
  cov_21q9389883().f[8]++;
  cov_21q9389883().s[97]++;

  for (var i =
  /* istanbul ignore next */
  (cov_21q9389883().s[98]++, 0); i < board.length; i++) {
    /* istanbul ignore next */
    cov_21q9389883().s[99]++;

    if (board[i].includes(null)) {
      /* istanbul ignore next */
      cov_21q9389883().b[15][0]++;
      cov_21q9389883().s[100]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_21q9389883().b[15][1]++;
    }
  }

  /* istanbul ignore next */
  cov_21q9389883().s[101]++;
  return true;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,