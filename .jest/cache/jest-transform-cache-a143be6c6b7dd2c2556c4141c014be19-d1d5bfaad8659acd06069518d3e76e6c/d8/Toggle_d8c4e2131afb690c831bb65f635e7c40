f712072ade01abbe9df8b76a9f4d52ca
/* istanbul ignore next */
function cov_1qwkihq976() {
  var path = "C:\\Users\\ashee\\Documents\\Javascript\\React\\React Native\\suduko\\components\\Toggle.tsx";
  var hash = "c90b70a127dc5645fd4c39d143796f7802b28610";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\ashee\\Documents\\Javascript\\React\\React Native\\suduko\\components\\Toggle.tsx",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 29
        },
        end: {
          line: 1,
          column: 84
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "2": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 25
        }
      },
      "3": {
        start: {
          line: 8,
          column: 22
        },
        end: {
          line: 8,
          column: 93
        }
      },
      "4": {
        start: {
          line: 10,
          column: 13
        },
        end: {
          line: 10,
          column: 53
        }
      },
      "5": {
        start: {
          line: 12,
          column: 24
        },
        end: {
          line: 12,
          column: 53
        }
      },
      "6": {
        start: {
          line: 14,
          column: 18
        },
        end: {
          line: 14,
          column: 40
        }
      },
      "7": {
        start: {
          line: 16,
          column: 13
        },
        end: {
          line: 16,
          column: 29
        }
      },
      "8": {
        start: {
          line: 18,
          column: 21
        },
        end: {
          line: 18,
          column: 75
        }
      },
      "9": {
        start: {
          line: 20,
          column: 49
        },
        end: {
          line: 20,
          column: 96
        }
      },
      "10": {
        start: {
          line: 20,
          column: 84
        },
        end: {
          line: 20,
          column: 96
        }
      },
      "11": {
        start: {
          line: 20,
          column: 121
        },
        end: {
          line: 20,
          column: 134
        }
      },
      "12": {
        start: {
          line: 20,
          column: 159
        },
        end: {
          line: 20,
          column: 172
        }
      },
      "13": {
        start: {
          line: 20,
          column: 174
        },
        end: {
          line: 20,
          column: 333
        }
      },
      "14": {
        start: {
          line: 20,
          column: 258
        },
        end: {
          line: 20,
          column: 316
        }
      },
      "15": {
        start: {
          line: 22,
          column: 53
        },
        end: {
          line: 22,
          column: 111
        }
      },
      "16": {
        start: {
          line: 22,
          column: 98
        },
        end: {
          line: 22,
          column: 109
        }
      },
      "17": {
        start: {
          line: 22,
          column: 112
        },
        end: {
          line: 22,
          column: 214
        }
      },
      "18": {
        start: {
          line: 22,
          column: 188
        },
        end: {
          line: 22,
          column: 212
        }
      },
      "19": {
        start: {
          line: 22,
          column: 227
        },
        end: {
          line: 22,
          column: 264
        }
      },
      "20": {
        start: {
          line: 22,
          column: 266
        },
        end: {
          line: 22,
          column: 321
        }
      },
      "21": {
        start: {
          line: 22,
          column: 297
        },
        end: {
          line: 22,
          column: 319
        }
      },
      "22": {
        start: {
          line: 22,
          column: 335
        },
        end: {
          line: 22,
          column: 337
        }
      },
      "23": {
        start: {
          line: 22,
          column: 367
        },
        end: {
          line: 22,
          column: 423
        }
      },
      "24": {
        start: {
          line: 22,
          column: 425
        },
        end: {
          line: 22,
          column: 726
        }
      },
      "25": {
        start: {
          line: 22,
          column: 448
        },
        end: {
          line: 22,
          column: 724
        }
      },
      "26": {
        start: {
          line: 22,
          column: 534
        },
        end: {
          line: 22,
          column: 606
        }
      },
      "27": {
        start: {
          line: 22,
          column: 608
        },
        end: {
          line: 22,
          column: 722
        }
      },
      "28": {
        start: {
          line: 22,
          column: 646
        },
        end: {
          line: 22,
          column: 687
        }
      },
      "29": {
        start: {
          line: 22,
          column: 697
        },
        end: {
          line: 22,
          column: 720
        }
      },
      "30": {
        start: {
          line: 22,
          column: 727
        },
        end: {
          line: 22,
          column: 748
        }
      },
      "31": {
        start: {
          line: 22,
          column: 749
        },
        end: {
          line: 22,
          column: 787
        }
      },
      "32": {
        start: {
          line: 22,
          column: 762
        },
        end: {
          line: 22,
          column: 785
        }
      },
      "33": {
        start: {
          line: 22,
          column: 788
        },
        end: {
          line: 22,
          column: 802
        }
      },
      "34": {
        start: {
          line: 25,
          column: 21
        },
        end: {
          line: 27,
          column: 4
        }
      },
      "35": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 17
        }
      },
      "36": {
        start: {
          line: 28,
          column: 18
        },
        end: {
          line: 28,
          column: 40
        }
      },
      "37": {
        start: {
          line: 30,
          column: 17
        },
        end: {
          line: 30,
          column: 47
        }
      },
      "38": {
        start: {
          line: 32,
          column: 28
        },
        end: {
          line: 32,
          column: 84
        }
      },
      "39": {
        start: {
          line: 33,
          column: 21
        },
        end: {
          line: 33,
          column: 53
        }
      },
      "40": {
        start: {
          line: 35,
          column: 24
        },
        end: {
          line: 35,
          column: 58
        }
      },
      "41": {
        start: {
          line: 36,
          column: 25
        },
        end: {
          line: 36,
          column: 73
        }
      },
      "42": {
        start: {
          line: 37,
          column: 19
        },
        end: {
          line: 37,
          column: 38
        }
      },
      "43": {
        start: {
          line: 38,
          column: 22
        },
        end: {
          line: 38,
          column: 41
        }
      },
      "44": {
        start: {
          line: 40,
          column: 23
        },
        end: {
          line: 43,
          column: 3
        }
      },
      "45": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 31
        }
      },
      "46": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 42,
          column: 29
        }
      },
      "47": {
        start: {
          line: 45,
          column: 2
        },
        end: {
          line: 50,
          column: 5
        }
      }
    },
    fnMap: {
      "0": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 20,
            column: 9
          },
          end: {
            line: 20,
            column: 33
          }
        },
        loc: {
          start: {
            line: 20,
            column: 47
          },
          end: {
            line: 20,
            column: 335
          }
        },
        line: 20
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 20,
            column: 218
          },
          end: {
            line: 20,
            column: 242
          }
        },
        loc: {
          start: {
            line: 20,
            column: 256
          },
          end: {
            line: 20,
            column: 318
          }
        },
        line: 20
      },
      "2": {
        name: "_interopRequireWildcard",
        decl: {
          start: {
            line: 22,
            column: 9
          },
          end: {
            line: 22,
            column: 32
          }
        },
        loc: {
          start: {
            line: 22,
            column: 51
          },
          end: {
            line: 22,
            column: 804
          }
        },
        line: 22
      },
      "3": {
        name: "Toggle",
        decl: {
          start: {
            line: 24,
            column: 9
          },
          end: {
            line: 24,
            column: 15
          }
        },
        loc: {
          start: {
            line: 24,
            column: 18
          },
          end: {
            line: 51,
            column: 1
          }
        },
        line: 24
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 25,
            column: 50
          },
          end: {
            line: 25,
            column: 51
          }
        },
        loc: {
          start: {
            line: 25,
            column: 67
          },
          end: {
            line: 27,
            column: 3
          }
        },
        line: 25
      },
      "5": {
        name: "onToggleSwitch",
        decl: {
          start: {
            line: 40,
            column: 32
          },
          end: {
            line: 40,
            column: 46
          }
        },
        loc: {
          start: {
            line: 40,
            column: 49
          },
          end: {
            line: 43,
            column: 3
          }
        },
        line: 40
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 20,
            column: 49
          },
          end: {
            line: 20,
            column: 96
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 49
          },
          end: {
            line: 20,
            column: 96
          }
        }, {
          start: {
            line: 20,
            column: 49
          },
          end: {
            line: 20,
            column: 96
          }
        }],
        line: 20
      },
      "1": {
        loc: {
          start: {
            line: 20,
            column: 265
          },
          end: {
            line: 20,
            column: 315
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 20,
            column: 279
          },
          end: {
            line: 20,
            column: 295
          }
        }, {
          start: {
            line: 20,
            column: 298
          },
          end: {
            line: 20,
            column: 315
          }
        }],
        line: 20
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 53
          },
          end: {
            line: 22,
            column: 111
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 53
          },
          end: {
            line: 22,
            column: 111
          }
        }, {
          start: {
            line: 22,
            column: 53
          },
          end: {
            line: 22,
            column: 111
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 22,
            column: 57
          },
          end: {
            line: 22,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 57
          },
          end: {
            line: 22,
            column: 69
          }
        }, {
          start: {
            line: 22,
            column: 73
          },
          end: {
            line: 22,
            column: 76
          }
        }, {
          start: {
            line: 22,
            column: 80
          },
          end: {
            line: 22,
            column: 94
          }
        }],
        line: 22
      },
      "4": {
        loc: {
          start: {
            line: 22,
            column: 112
          },
          end: {
            line: 22,
            column: 214
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 112
          },
          end: {
            line: 22,
            column: 214
          }
        }, {
          start: {
            line: 22,
            column: 112
          },
          end: {
            line: 22,
            column: 214
          }
        }],
        line: 22
      },
      "5": {
        loc: {
          start: {
            line: 22,
            column: 116
          },
          end: {
            line: 22,
            column: 184
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 116
          },
          end: {
            line: 22,
            column: 128
          }
        }, {
          start: {
            line: 22,
            column: 132
          },
          end: {
            line: 22,
            column: 155
          }
        }, {
          start: {
            line: 22,
            column: 159
          },
          end: {
            line: 22,
            column: 184
          }
        }],
        line: 22
      },
      "6": {
        loc: {
          start: {
            line: 22,
            column: 266
          },
          end: {
            line: 22,
            column: 321
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 266
          },
          end: {
            line: 22,
            column: 321
          }
        }, {
          start: {
            line: 22,
            column: 266
          },
          end: {
            line: 22,
            column: 321
          }
        }],
        line: 22
      },
      "7": {
        loc: {
          start: {
            line: 22,
            column: 270
          },
          end: {
            line: 22,
            column: 293
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 270
          },
          end: {
            line: 22,
            column: 275
          }
        }, {
          start: {
            line: 22,
            column: 279
          },
          end: {
            line: 22,
            column: 293
          }
        }],
        line: 22
      },
      "8": {
        loc: {
          start: {
            line: 22,
            column: 367
          },
          end: {
            line: 22,
            column: 423
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 367
          },
          end: {
            line: 22,
            column: 388
          }
        }, {
          start: {
            line: 22,
            column: 392
          },
          end: {
            line: 22,
            column: 423
          }
        }],
        line: 22
      },
      "9": {
        loc: {
          start: {
            line: 22,
            column: 448
          },
          end: {
            line: 22,
            column: 724
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 448
          },
          end: {
            line: 22,
            column: 724
          }
        }, {
          start: {
            line: 22,
            column: 448
          },
          end: {
            line: 22,
            column: 724
          }
        }],
        line: 22
      },
      "10": {
        loc: {
          start: {
            line: 22,
            column: 452
          },
          end: {
            line: 22,
            column: 519
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 452
          },
          end: {
            line: 22,
            column: 469
          }
        }, {
          start: {
            line: 22,
            column: 473
          },
          end: {
            line: 22,
            column: 519
          }
        }],
        line: 22
      },
      "11": {
        loc: {
          start: {
            line: 22,
            column: 534
          },
          end: {
            line: 22,
            column: 606
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 22,
            column: 558
          },
          end: {
            line: 22,
            column: 599
          }
        }, {
          start: {
            line: 22,
            column: 602
          },
          end: {
            line: 22,
            column: 606
          }
        }],
        line: 22
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 608
          },
          end: {
            line: 22,
            column: 722
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 608
          },
          end: {
            line: 22,
            column: 722
          }
        }, {
          start: {
            line: 22,
            column: 608
          },
          end: {
            line: 22,
            column: 722
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 22,
            column: 612
          },
          end: {
            line: 22,
            column: 642
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 612
          },
          end: {
            line: 22,
            column: 616
          }
        }, {
          start: {
            line: 22,
            column: 621
          },
          end: {
            line: 22,
            column: 629
          }
        }, {
          start: {
            line: 22,
            column: 633
          },
          end: {
            line: 22,
            column: 641
          }
        }],
        line: 22
      },
      "14": {
        loc: {
          start: {
            line: 22,
            column: 749
          },
          end: {
            line: 22,
            column: 787
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 749
          },
          end: {
            line: 22,
            column: 787
          }
        }, {
          start: {
            line: 22,
            column: 749
          },
          end: {
            line: 22,
            column: 787
          }
        }],
        line: 22
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\ashee\\Documents\\Javascript\\React\\React Native\\suduko\\components\\Toggle.tsx"],
      names: [],
      mappings: ";;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AAEA;;;;;;AACc,SAAU,MAAV,GAAgB;AAE5B,qBAAoB,6BAAY,UAAC,KAAD;AAAA,WAAqB,KAArB;AAAA,GAAZ,CAApB;AAAA,MAAO,SAAP,gBAAO,SAAP;;AAEA,MAAM,QAAQ,GAAG,8BAAjB;;AAEA,4BAAwB,+BAAmB,cAAnB,EAAkC,QAAlC,CAAxB;AAAA,MAAQ,YAAR,uBAAQ,YAAR;;AAGA,wBAAoC,eAAM,QAAN,CAAe,SAAf,CAApC;AAAA;AAAA,MAAO,UAAP;AAAA,MAAmB,aAAnB;;AAEA,MAAM,cAAc,GAAG,SAAjB,cAAiB,GAAK;AAC1B,IAAA,aAAa,CAAC,CAAC,UAAF,CAAb;AACA,IAAA,YAAY,CAAC,CAAC,SAAF,CAAZ;AACD,GAHD;;AAKA,SACE,eAAA,aAAA,CAAC,wBAAD,EAAO;AACL,IAAA,KAAK,EAAC,SADD;AAEL,IAAA,KAAK,EAAE,CAAC,UAFH;AAGL,IAAA,aAAa,EAAE,cAHV;AAIL,IAAA,MAAM,EAAG;AAJJ,GAAP,CADF;AAQD;;AAAA",
      sourcesContent: ["import React from \"react\";\r\nimport { StyleSheet, Text, View } from \"react-native\";\r\nimport { Switch } from 'react-native-paper';\r\nimport { useSelector, useDispatch } from \"react-redux\"; \r\nimport { bindActionCreators } from \"redux\";\r\nimport {RootState} from '../src/state/reducers/index';\r\nimport * as actionCreators from '../src/state/index'; \r\nexport default function Toggle(){\r\n  //Redux state.\r\n  const {entryMode} = useSelector((state:RootState) => state);\r\n  //Redux dispatcher.\r\n  const dispatch = useDispatch();\r\n  //Redux action to set entryMode.\r\n  const { setEntryMode} = bindActionCreators(actionCreators,dispatch);\r\n  //React hook to set toggle state. \r\n  //(*needed for react-native-paper component).\r\n  const [isSwitchOn, setIsSwitchOn] = React.useState(entryMode);\r\n  //Set entry mode to toggle state.\r\n  const onToggleSwitch = () =>{\r\n    setIsSwitchOn(!isSwitchOn);\r\n    setEntryMode(!entryMode);\r\n  }\r\n\r\n  return (\r\n    <Switch \r\n      color='#3297FD'\r\n      value={!isSwitchOn} \r\n      onValueChange={onToggleSwitch} \r\n      testID = 'entryModeToggle'\r\n    />\r\n  );\r\n};\r\n\r\n  "]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c90b70a127dc5645fd4c39d143796f7802b28610"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1qwkihq976 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1qwkihq976();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_1qwkihq976().s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_1qwkihq976().s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_1qwkihq976().s[2]++;
exports.default = Toggle;

var _slicedToArray2 =
/* istanbul ignore next */
(cov_1qwkihq976().s[3]++, _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray")));

var _react =
/* istanbul ignore next */
(cov_1qwkihq976().s[4]++, _interopRequireDefault(require("react")));

var _reactNativePaper =
/* istanbul ignore next */
(cov_1qwkihq976().s[5]++, require("react-native-paper"));

var _reactRedux =
/* istanbul ignore next */
(cov_1qwkihq976().s[6]++, require("react-redux"));

var _redux =
/* istanbul ignore next */
(cov_1qwkihq976().s[7]++, require("redux"));

var actionCreators =
/* istanbul ignore next */
(cov_1qwkihq976().s[8]++, _interopRequireWildcard(require("../src/state/index")));

function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1qwkihq976().f[0]++;
  cov_1qwkihq976().s[9]++;

  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1qwkihq976().b[0][0]++;
    cov_1qwkihq976().s[10]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1qwkihq976().b[0][1]++;
  }

  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1qwkihq976().s[11]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1qwkihq976().s[12]++, new WeakMap());

  /* istanbul ignore next */
  cov_1qwkihq976().s[13]++;
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    /* istanbul ignore next */
    cov_1qwkihq976().f[1]++;
    cov_1qwkihq976().s[14]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1qwkihq976().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1qwkihq976().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}

function _interopRequireWildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1qwkihq976().f[2]++;
  cov_1qwkihq976().s[15]++;

  if (
  /* istanbul ignore next */
  (cov_1qwkihq976().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1qwkihq976().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1qwkihq976().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1qwkihq976().b[2][0]++;
    cov_1qwkihq976().s[16]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1qwkihq976().b[2][1]++;
  }

  cov_1qwkihq976().s[17]++;

  if (
  /* istanbul ignore next */
  (cov_1qwkihq976().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1qwkihq976().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1qwkihq976().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1qwkihq976().b[4][0]++;
    cov_1qwkihq976().s[18]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1qwkihq976().b[4][1]++;
  }

  var cache =
  /* istanbul ignore next */
  (cov_1qwkihq976().s[19]++, _getRequireWildcardCache(nodeInterop));

  /* istanbul ignore next */
  cov_1qwkihq976().s[20]++;

  if (
  /* istanbul ignore next */
  (cov_1qwkihq976().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1qwkihq976().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1qwkihq976().b[6][0]++;
    cov_1qwkihq976().s[21]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1qwkihq976().b[6][1]++;
  }

  var newObj =
  /* istanbul ignore next */
  (cov_1qwkihq976().s[22]++, {});
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1qwkihq976().s[23]++,
  /* istanbul ignore next */
  (cov_1qwkihq976().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1qwkihq976().b[8][1]++, Object.getOwnPropertyDescriptor));

  /* istanbul ignore next */
  cov_1qwkihq976().s[24]++;

  for (var key in obj) {
    /* istanbul ignore next */
    cov_1qwkihq976().s[25]++;

    if (
    /* istanbul ignore next */
    (cov_1qwkihq976().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1qwkihq976().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1qwkihq976().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1qwkihq976().s[26]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1qwkihq976().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1qwkihq976().b[11][1]++, null));

      /* istanbul ignore next */
      cov_1qwkihq976().s[27]++;

      if (
      /* istanbul ignore next */
      (cov_1qwkihq976().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1qwkihq976().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1qwkihq976().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1qwkihq976().b[12][0]++;
        cov_1qwkihq976().s[28]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1qwkihq976().b[12][1]++;
        cov_1qwkihq976().s[29]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1qwkihq976().b[9][1]++;
    }
  }

  /* istanbul ignore next */
  cov_1qwkihq976().s[30]++;
  newObj.default = obj;

  /* istanbul ignore next */
  cov_1qwkihq976().s[31]++;

  if (cache) {
    /* istanbul ignore next */
    cov_1qwkihq976().b[14][0]++;
    cov_1qwkihq976().s[32]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1qwkihq976().b[14][1]++;
  }

  cov_1qwkihq976().s[33]++;
  return newObj;
}

function Toggle() {
  /* istanbul ignore next */
  cov_1qwkihq976().f[3]++;

  var _useSelector =
  /* istanbul ignore next */
  (cov_1qwkihq976().s[34]++, (0, _reactRedux.useSelector)(function (state) {
    /* istanbul ignore next */
    cov_1qwkihq976().f[4]++;
    cov_1qwkihq976().s[35]++;
    return state;
  })),
      entryMode =
  /* istanbul ignore next */
  (cov_1qwkihq976().s[36]++, _useSelector.entryMode);

  var dispatch =
  /* istanbul ignore next */
  (cov_1qwkihq976().s[37]++, (0, _reactRedux.useDispatch)());

  var _bindActionCreators =
  /* istanbul ignore next */
  (cov_1qwkihq976().s[38]++, (0, _redux.bindActionCreators)(actionCreators, dispatch)),
      setEntryMode =
  /* istanbul ignore next */
  (cov_1qwkihq976().s[39]++, _bindActionCreators.setEntryMode);

  var _React$useState =
  /* istanbul ignore next */
  (cov_1qwkihq976().s[40]++, _react.default.useState(entryMode)),
      _React$useState2 =
  /* istanbul ignore next */
  (cov_1qwkihq976().s[41]++, (0, _slicedToArray2.default)(_React$useState, 2)),
      isSwitchOn =
  /* istanbul ignore next */
  (cov_1qwkihq976().s[42]++, _React$useState2[0]),
      setIsSwitchOn =
  /* istanbul ignore next */
  (cov_1qwkihq976().s[43]++, _React$useState2[1]);

  /* istanbul ignore next */
  cov_1qwkihq976().s[44]++;

  var onToggleSwitch = function onToggleSwitch() {
    /* istanbul ignore next */
    cov_1qwkihq976().f[5]++;
    cov_1qwkihq976().s[45]++;
    setIsSwitchOn(!isSwitchOn);

    /* istanbul ignore next */
    cov_1qwkihq976().s[46]++;
    setEntryMode(!entryMode);
  };

  /* istanbul ignore next */
  cov_1qwkihq976().s[47]++;
  return _react.default.createElement(_reactNativePaper.Switch, {
    color: '#3297FD',
    value: !isSwitchOn,
    onValueChange: onToggleSwitch,
    testID: 'entryModeToggle'
  });
}

;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYXNoZWVcXERvY3VtZW50c1xcSmF2YXNjcmlwdFxcUmVhY3RcXFJlYWN0IE5hdGl2ZVxcc3VkdWtvXFxjb21wb25lbnRzXFxUb2dnbGUudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBSUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFKQSxJQUFBLE1BQUE7QUFBQTtBQUFBLDBCQUFBLHNCQUFBLENBQUEsT0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBLENBQUE7O0FBRUEsSUFBQSxpQkFBQTtBQUFBO0FBQUEsMEJBQUEsT0FBQSxDQUFBLG9CQUFBLENBQUEsQ0FBQTs7QUFDQSxJQUFBLFdBQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSxhQUFBLENBQUEsQ0FBQTs7QUFDQSxJQUFBLE1BQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQTs7QUFFQSxJQUFBLGNBQUE7QUFBQTtBQUFBLDBCQUFBLHVCQUFBLENBQUEsT0FBQSxDQUFBLG9CQUFBLENBQUEsQ0FBQSxDQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDYyxTQUFBLE1BQUEsR0FBZ0I7QUFBQTtBQUFBOztBQUU1QixNQUFBLFlBQUE7QUFBQTtBQUFBLDZCQUFvQixDQUFBLEdBQUEsV0FBQSxDQUFBLFdBQUEsRUFBWSxVQUFBLEtBQUEsRUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLFdBQUEsS0FBQTtBQUFoQyxHQUFvQixDQUFwQixDQUFBO0FBQUEsTUFBTyxTQUFQO0FBQUE7QUFBQSw2QkFBQSxZQUFBLENBQUEsU0FBQSxDQUFBOztBQUVBLE1BQU0sUUFBUTtBQUFBO0FBQUEsNkJBQUcsQ0FBQSxHQUFBLFdBQUEsQ0FBakIsV0FBaUIsR0FBSCxDQUFkOztBQUVBLE1BQUEsbUJBQUE7QUFBQTtBQUFBLDZCQUF3QixDQUFBLEdBQUEsTUFBQSxDQUFBLGtCQUFBLEVBQUEsY0FBQSxFQUF4QixRQUF3QixDQUF4QixDQUFBO0FBQUEsTUFBUSxZQUFSO0FBQUE7QUFBQSw2QkFBQSxtQkFBQSxDQUFBLFlBQUEsQ0FBQTs7QUFHQSxNQUFBLGVBQUE7QUFBQTtBQUFBLDZCQUFvQyxNQUFBLENBQUEsT0FBQSxDQUFBLFFBQUEsQ0FBcEMsU0FBb0MsQ0FBcEMsQ0FBQTtBQUFBLE1BQUEsZ0JBQUE7QUFBQTtBQUFBLDZCQUFBLENBQUEsR0FBQSxlQUFBLENBQUEsT0FBQSxFQUFBLGVBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQTtBQUFBLE1BQU8sVUFBUDtBQUFBO0FBQUEsNkJBQUEsZ0JBQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTtBQUFBLE1BQW1CLGFBQW5CO0FBQUE7QUFBQSw2QkFBQSxnQkFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBOztBQVQ0QjtBQUFBOztBQVc1QixNQUFNLGNBQWMsR0FBRyxTQUFqQixjQUFpQixHQUFLO0FBQUE7QUFBQTtBQUFBO0FBQzFCLElBQUEsYUFBYSxDQUFDLENBQWQsVUFBYSxDQUFiOztBQUQwQjtBQUFBO0FBRTFCLElBQUEsWUFBWSxDQUFDLENBQWIsU0FBWSxDQUFaO0FBRkYsR0FBQTs7QUFYNEI7QUFBQTtBQWdCNUIsU0FDRSxNQUFBLENBQUEsT0FBQSxDQUFBLGFBQUEsQ0FBQyxpQkFBQSxDQUFELE1BQUEsRUFBTztBQUNMLElBQUEsS0FBSyxFQURBLFNBQUE7QUFFTCxJQUFBLEtBQUssRUFBRSxDQUZGLFVBQUE7QUFHTCxJQUFBLGFBQWEsRUFIUixjQUFBO0FBSUwsSUFBQSxNQUFNLEVBQUc7QUFKSixHQUFQLENBREY7QUFRRDs7QUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgU3R5bGVTaGVldCwgVGV4dCwgVmlldyB9IGZyb20gXCJyZWFjdC1uYXRpdmVcIjtcclxuaW1wb3J0IHsgU3dpdGNoIH0gZnJvbSAncmVhY3QtbmF0aXZlLXBhcGVyJztcclxuaW1wb3J0IHsgdXNlU2VsZWN0b3IsIHVzZURpc3BhdGNoIH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7IFxyXG5pbXBvcnQgeyBiaW5kQWN0aW9uQ3JlYXRvcnMgfSBmcm9tIFwicmVkdXhcIjtcclxuaW1wb3J0IHtSb290U3RhdGV9IGZyb20gJy4uL3NyYy9zdGF0ZS9yZWR1Y2Vycy9pbmRleCc7XHJcbmltcG9ydCAqIGFzIGFjdGlvbkNyZWF0b3JzIGZyb20gJy4uL3NyYy9zdGF0ZS9pbmRleCc7IFxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBUb2dnbGUoKXtcclxuICAvL1JlZHV4IHN0YXRlLlxyXG4gIGNvbnN0IHtlbnRyeU1vZGV9ID0gdXNlU2VsZWN0b3IoKHN0YXRlOlJvb3RTdGF0ZSkgPT4gc3RhdGUpO1xyXG4gIC8vUmVkdXggZGlzcGF0Y2hlci5cclxuICBjb25zdCBkaXNwYXRjaCA9IHVzZURpc3BhdGNoKCk7XHJcbiAgLy9SZWR1eCBhY3Rpb24gdG8gc2V0IGVudHJ5TW9kZS5cclxuICBjb25zdCB7IHNldEVudHJ5TW9kZX0gPSBiaW5kQWN0aW9uQ3JlYXRvcnMoYWN0aW9uQ3JlYXRvcnMsZGlzcGF0Y2gpO1xyXG4gIC8vUmVhY3QgaG9vayB0byBzZXQgdG9nZ2xlIHN0YXRlLiBcclxuICAvLygqbmVlZGVkIGZvciByZWFjdC1uYXRpdmUtcGFwZXIgY29tcG9uZW50KS5cclxuICBjb25zdCBbaXNTd2l0Y2hPbiwgc2V0SXNTd2l0Y2hPbl0gPSBSZWFjdC51c2VTdGF0ZShlbnRyeU1vZGUpO1xyXG4gIC8vU2V0IGVudHJ5IG1vZGUgdG8gdG9nZ2xlIHN0YXRlLlxyXG4gIGNvbnN0IG9uVG9nZ2xlU3dpdGNoID0gKCkgPT57XHJcbiAgICBzZXRJc1N3aXRjaE9uKCFpc1N3aXRjaE9uKTtcclxuICAgIHNldEVudHJ5TW9kZSghZW50cnlNb2RlKTtcclxuICB9XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8U3dpdGNoIFxyXG4gICAgICBjb2xvcj0nIzMyOTdGRCdcclxuICAgICAgdmFsdWU9eyFpc1N3aXRjaE9ufSBcclxuICAgICAgb25WYWx1ZUNoYW5nZT17b25Ub2dnbGVTd2l0Y2h9IFxyXG4gICAgICB0ZXN0SUQgPSAnZW50cnlNb2RlVG9nZ2xlJ1xyXG4gICAgLz5cclxuICApO1xyXG59O1xyXG5cclxuICAiXX0=