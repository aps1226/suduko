{"version":3,"sources":["codegenNativeCommands.js"],"names":["codegenNativeCommands","options","commandObj","supportedCommands","forEach","command","ref","args"],"mappings":"AAUA;;;;;;;AAEA;;AAMA,SAASA,qBAAT,CAAyCC,OAAzC,EAAwE;AACtE,MAAMC,UAAU,GAAG,EAAnB;AAEAD,EAAAA,OAAO,CAACE,iBAAR,CAA0BC,OAA1B,CAAkC,UAAAC,OAAO,EAAI;AAC3CH,IAAAA,UAAU,CAACG,OAAD,CAAV,GAAsB,UAACC,GAAD,EAAkB;AAAA,wCAATC,IAAS;AAATA,QAAAA,IAAS;AAAA;;AACtC,wCAAgBD,GAAhB,EAAqBD,OAArB,EAA8BE,IAA9B;AACD,KAFD;AAGD,GAJD;AAMA,SAASL,UAAT;AACD;;eAEcF,qB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nimport {dispatchCommand} from '../../Libraries/Renderer/shims/ReactNative';\n\ntype Options<T = string> = $ReadOnly<{|\n  supportedCommands: $ReadOnlyArray<T>,\n|}>;\n\nfunction codegenNativeCommands<T: {...}>(options: Options<$Keys<T>>): T {\n  const commandObj = {};\n\n  options.supportedCommands.forEach(command => {\n    commandObj[command] = (ref, ...args) => {\n      dispatchCommand(ref, command, args);\n    };\n  });\n\n  return ((commandObj: any): T);\n}\n\nexport default codegenNativeCommands;\n"]}