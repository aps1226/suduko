f6f977e8a68b13c79e677f2235f2aa44
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fontFamilyNeedsScoping = fontFamilyNeedsScoping;
exports.getAssetForSource = getAssetForSource;
exports.loadSingleFontAsync = loadSingleFontAsync;
exports.getNativeFontName = getNativeFontName;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _core = require("@unimodules/core");

var _expoAsset = require("expo-asset");

var _expoConstants = _interopRequireDefault(require("expo-constants"));

var _reactNative = require("react-native");

var _ExpoFontLoader = _interopRequireDefault(require("./ExpoFontLoader"));

var isInClient = _expoConstants.default.appOwnership === 'expo';
var isInIOSStandalone = _expoConstants.default.appOwnership === 'standalone' && _reactNative.Platform.OS === 'ios';

function fontFamilyNeedsScoping(name) {
  return (isInClient || isInIOSStandalone) && !_expoConstants.default.systemFonts.includes(name) && name !== 'System' && !name.includes(_expoConstants.default.sessionId);
}

function getAssetForSource(source) {
  if (source instanceof _expoAsset.Asset) {
    return source;
  }

  if (typeof source === 'string') {
    return _expoAsset.Asset.fromURI(source);
  } else if (typeof source === 'number') {
    return _expoAsset.Asset.fromModule(source);
  } else if (typeof source === 'object' && typeof source.uri !== 'undefined') {
    return getAssetForSource(source.uri);
  }

  return source;
}

function loadSingleFontAsync(name, input) {
  var asset;
  return _regenerator.default.async(function loadSingleFontAsync$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          asset = input;

          if (asset.downloadAsync) {
            _context.next = 3;
            break;
          }

          throw new _core.CodedError("ERR_FONT_SOURCE", '`loadSingleFontAsync` expected resource of type `Asset` from expo-asset on native');

        case 3:
          _context.next = 5;
          return _regenerator.default.awrap(asset.downloadAsync());

        case 5:
          if (asset.downloaded) {
            _context.next = 7;
            break;
          }

          throw new _core.CodedError("ERR_DOWNLOAD", "Failed to download asset for font \"" + name + "\"");

        case 7:
          _context.next = 9;
          return _regenerator.default.awrap(_ExpoFontLoader.default.loadAsync(getNativeFontName(name), asset.localUri));

        case 9:
        case "end":
          return _context.stop();
      }
    }
  }, null, null, null, Promise);
}

function getNativeFontName(name) {
  if (fontFamilyNeedsScoping(name)) {
    return _expoConstants.default.sessionId + "-" + name;
  } else {
    return name;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9Gb250TG9hZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUVBOztBQUdBLElBQU0sVUFBVSxHQUFHLHVCQUFVLFlBQVYsS0FBMkIsTUFBOUM7QUFDQSxJQUFNLGlCQUFpQixHQUFHLHVCQUFVLFlBQVYsS0FBMkIsWUFBM0IsSUFBMkMsc0JBQVMsRUFBVCxLQUFnQixLQUFyRjs7QUFFTSxTQUFVLHNCQUFWLENBQWlDLElBQWpDLEVBQTZDO0FBQ2pELFNBQ0UsQ0FBQyxVQUFVLElBQUksaUJBQWYsS0FDQSxDQUFDLHVCQUFVLFdBQVYsQ0FBc0IsUUFBdEIsQ0FBK0IsSUFBL0IsQ0FERCxJQUVBLElBQUksS0FBSyxRQUZULElBR0EsQ0FBQyxJQUFJLENBQUMsUUFBTCxDQUFjLHVCQUFVLFNBQXhCLENBSkg7QUFNRDs7QUFFSyxTQUFVLGlCQUFWLENBQTRCLE1BQTVCLEVBQThDO0FBQ2xELE1BQUksTUFBTSxZQUFZLGdCQUF0QixFQUE2QjtBQUMzQixXQUFPLE1BQVA7QUFDRDs7QUFFRCxNQUFJLE9BQU8sTUFBUCxLQUFrQixRQUF0QixFQUFnQztBQUM5QixXQUFPLGlCQUFNLE9BQU4sQ0FBYyxNQUFkLENBQVA7QUFDRCxHQUZELE1BRU8sSUFBSSxPQUFPLE1BQVAsS0FBa0IsUUFBdEIsRUFBZ0M7QUFDckMsV0FBTyxpQkFBTSxVQUFOLENBQWlCLE1BQWpCLENBQVA7QUFDRCxHQUZNLE1BRUEsSUFBSSxPQUFPLE1BQVAsS0FBa0IsUUFBbEIsSUFBOEIsT0FBTyxNQUFNLENBQUMsR0FBZCxLQUFzQixXQUF4RCxFQUFxRTtBQUMxRSxXQUFPLGlCQUFpQixDQUFDLE1BQU0sQ0FBQyxHQUFSLENBQXhCO0FBQ0Q7O0FBS0QsU0FBTyxNQUFQO0FBQ0Q7O0FBRU0sU0FBZSxtQkFBZixDQUNMLElBREssRUFFTCxLQUZLO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUlDLFVBQUEsS0FKRCxHQUlTLEtBSlQ7O0FBQUEsY0FLQSxLQUFLLENBQUMsYUFMTjtBQUFBO0FBQUE7QUFBQTs7QUFBQSxnQkFNRyxJQUFJLGdCQUFKLG9CQUVKLG1GQUZJLENBTkg7O0FBQUE7QUFBQTtBQUFBLDRDQVlDLEtBQUssQ0FBQyxhQUFOLEVBWkQ7O0FBQUE7QUFBQSxjQWFBLEtBQUssQ0FBQyxVQWJOO0FBQUE7QUFBQTtBQUFBOztBQUFBLGdCQWNHLElBQUksZ0JBQUosMERBQXFFLElBQXJFLFFBZEg7O0FBQUE7QUFBQTtBQUFBLDRDQWdCQyx3QkFBZSxTQUFmLENBQXlCLGlCQUFpQixDQUFDLElBQUQsQ0FBMUMsRUFBa0QsS0FBSyxDQUFDLFFBQXhELENBaEJEOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQW1CRCxTQUFVLGlCQUFWLENBQTRCLElBQTVCLEVBQXdDO0FBQzVDLE1BQUksc0JBQXNCLENBQUMsSUFBRCxDQUExQixFQUFrQztBQUNoQyxXQUFVLHVCQUFVLFNBQXBCLFNBQWlDLElBQWpDO0FBQ0QsR0FGRCxNQUVPO0FBQ0wsV0FBTyxJQUFQO0FBQ0Q7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvZGVkRXJyb3IgfSBmcm9tICdAdW5pbW9kdWxlcy9jb3JlJztcbmltcG9ydCB7IEFzc2V0IH0gZnJvbSAnZXhwby1hc3NldCc7XG5pbXBvcnQgQ29uc3RhbnRzIGZyb20gJ2V4cG8tY29uc3RhbnRzJztcbmltcG9ydCB7IFBsYXRmb3JtIH0gZnJvbSAncmVhY3QtbmF0aXZlJztcblxuaW1wb3J0IEV4cG9Gb250TG9hZGVyIGZyb20gJy4vRXhwb0ZvbnRMb2FkZXInO1xuaW1wb3J0IHsgRm9udFJlc291cmNlLCBGb250U291cmNlIH0gZnJvbSAnLi9Gb250LnR5cGVzJztcblxuY29uc3QgaXNJbkNsaWVudCA9IENvbnN0YW50cy5hcHBPd25lcnNoaXAgPT09ICdleHBvJztcbmNvbnN0IGlzSW5JT1NTdGFuZGFsb25lID0gQ29uc3RhbnRzLmFwcE93bmVyc2hpcCA9PT0gJ3N0YW5kYWxvbmUnICYmIFBsYXRmb3JtLk9TID09PSAnaW9zJztcblxuZXhwb3J0IGZ1bmN0aW9uIGZvbnRGYW1pbHlOZWVkc1Njb3BpbmcobmFtZTogc3RyaW5nKTogYm9vbGVhbiB7XG4gIHJldHVybiAoXG4gICAgKGlzSW5DbGllbnQgfHwgaXNJbklPU1N0YW5kYWxvbmUpICYmXG4gICAgIUNvbnN0YW50cy5zeXN0ZW1Gb250cy5pbmNsdWRlcyhuYW1lKSAmJlxuICAgIG5hbWUgIT09ICdTeXN0ZW0nICYmXG4gICAgIW5hbWUuaW5jbHVkZXMoQ29uc3RhbnRzLnNlc3Npb25JZClcbiAgKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEFzc2V0Rm9yU291cmNlKHNvdXJjZTogRm9udFNvdXJjZSk6IEFzc2V0IHwgRm9udFJlc291cmNlIHtcbiAgaWYgKHNvdXJjZSBpbnN0YW5jZW9mIEFzc2V0KSB7XG4gICAgcmV0dXJuIHNvdXJjZTtcbiAgfVxuXG4gIGlmICh0eXBlb2Ygc291cmNlID09PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBBc3NldC5mcm9tVVJJKHNvdXJjZSk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIHNvdXJjZSA9PT0gJ251bWJlcicpIHtcbiAgICByZXR1cm4gQXNzZXQuZnJvbU1vZHVsZShzb3VyY2UpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBzb3VyY2UgPT09ICdvYmplY3QnICYmIHR5cGVvZiBzb3VyY2UudXJpICE9PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybiBnZXRBc3NldEZvclNvdXJjZShzb3VyY2UudXJpKTtcbiAgfVxuXG4gIC8vIEB0cy1pZ25vcmUgRXJyb3I6IFR5cGUgJ3N0cmluZycgaXMgbm90IGFzc2lnbmFibGUgdG8gdHlwZSAnQXNzZXQnXG4gIC8vIFdlIGNhbid0IGhhdmUgYSBzdHJpbmcgaGVyZSwgd2Ugd291bGQgaGF2ZSB0aHJvd24gYW4gZXJyb3IgaWYgIWlzV2ViXG4gIC8vIG9yIHJldHVybmVkIEFzc2V0LmZyb21Nb2R1bGUgaWYgaXNXZWIuXG4gIHJldHVybiBzb3VyY2U7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBsb2FkU2luZ2xlRm9udEFzeW5jKFxuICBuYW1lOiBzdHJpbmcsXG4gIGlucHV0OiBBc3NldCB8IEZvbnRSZXNvdXJjZVxuKTogUHJvbWlzZTx2b2lkPiB7XG4gIGNvbnN0IGFzc2V0ID0gaW5wdXQgYXMgQXNzZXQ7XG4gIGlmICghYXNzZXQuZG93bmxvYWRBc3luYykge1xuICAgIHRocm93IG5ldyBDb2RlZEVycm9yKFxuICAgICAgYEVSUl9GT05UX1NPVVJDRWAsXG4gICAgICAnYGxvYWRTaW5nbGVGb250QXN5bmNgIGV4cGVjdGVkIHJlc291cmNlIG9mIHR5cGUgYEFzc2V0YCBmcm9tIGV4cG8tYXNzZXQgb24gbmF0aXZlJ1xuICAgICk7XG4gIH1cblxuICBhd2FpdCBhc3NldC5kb3dubG9hZEFzeW5jKCk7XG4gIGlmICghYXNzZXQuZG93bmxvYWRlZCkge1xuICAgIHRocm93IG5ldyBDb2RlZEVycm9yKGBFUlJfRE9XTkxPQURgLCBgRmFpbGVkIHRvIGRvd25sb2FkIGFzc2V0IGZvciBmb250IFwiJHtuYW1lfVwiYCk7XG4gIH1cbiAgYXdhaXQgRXhwb0ZvbnRMb2FkZXIubG9hZEFzeW5jKGdldE5hdGl2ZUZvbnROYW1lKG5hbWUpLCBhc3NldC5sb2NhbFVyaSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXROYXRpdmVGb250TmFtZShuYW1lOiBzdHJpbmcpOiBzdHJpbmcge1xuICBpZiAoZm9udEZhbWlseU5lZWRzU2NvcGluZyhuYW1lKSkge1xuICAgIHJldHVybiBgJHtDb25zdGFudHMuc2Vzc2lvbklkfS0ke25hbWV9YDtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gbmFtZTtcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==