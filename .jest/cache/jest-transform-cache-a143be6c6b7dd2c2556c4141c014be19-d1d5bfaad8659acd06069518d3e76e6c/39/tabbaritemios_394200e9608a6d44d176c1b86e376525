a41b325fc967f2ea9561b8cca0743597
"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports, "__esModule", { value: true });exports.default = createTabBarItemIOSComponent;var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _lodash = _interopRequireDefault(require("lodash.isequal"));
var _lodash2 = _interopRequireDefault(require("lodash.pick"));
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));var _jsxFileName = "C:\\Users\\ashee\\Documents\\Javascript\\React\\React Native\\suduko\\node_modules\\@expo\\vector-icons\\build\\vendor\\react-native-vector-icons\\lib\\tab-bar-item-ios.js";function _getRequireWildcardCache(nodeInterop) {if (typeof WeakMap !== "function") return null;var cacheBabelInterop = new WeakMap();var cacheNodeInterop = new WeakMap();return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {return nodeInterop ? cacheNodeInterop : cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj, nodeInterop) {if (!nodeInterop && obj && obj.__esModule) {return obj;}if (obj === null || typeof obj !== "object" && typeof obj !== "function") {return { default: obj };}var cache = _getRequireWildcardCache(nodeInterop);if (cache && cache.has(obj)) {return cache.get(obj);}var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}newObj.default = obj;if (cache) {cache.set(obj, newObj);}return newObj;}function _createSuper(Derived) {var hasNativeReflectConstruct = _isNativeReflectConstruct();return function _createSuperInternal() {var Super = (0, _getPrototypeOf2.default)(Derived),result;if (hasNativeReflectConstruct) {var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return (0, _possibleConstructorReturn2.default)(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === "undefined" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === "function") return true;try {Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));return true;} catch (e) {return false;}}
var TabBarIOS = {
  Item: function Item() {} };


var ICON_PROP_NAMES = ["iconName", "iconSize", "iconColor"];
var SELECTED_ICON_PROP_NAMES = [].concat(
ICON_PROP_NAMES, [
"selectedIconName",
"selectedIconColor"]);


var arePropsEqual = function arePropsEqual(keys) {return function (prevProps, nextProps) {return (
      (0, _lodash.default)((0, _lodash2.default)(prevProps, keys), (0, _lodash2.default)(nextProps, keys)));};};

var areIconPropsEqual = arePropsEqual(ICON_PROP_NAMES);
var areSelectedIconPropsEqual = arePropsEqual(SELECTED_ICON_PROP_NAMES);

function createTabBarItemIOSComponent(
IconNamePropType,
getImageSource)
{var _class, _temp;
  return _temp = _class = function (_PureComponent) {(0, _inherits2.default)(TabBarItemIOS, _PureComponent);var _super = _createSuper(TabBarItemIOS);function TabBarItemIOS() {var _this;(0, _classCallCheck2.default)(this, TabBarItemIOS);for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {args[_key] = arguments[_key];}_this = _super.call.apply(_super, [this].concat(args));_this.




      state = {
        icon: undefined,
        selectedIcon: undefined };return _this;}(0, _createClass2.default)(TabBarItemIOS, [{ key: "componentDidMount", value:


      function componentDidMount() {
        this.updateIconSource();
        this.updateSelectedIconSource();
      } }, { key: "componentDidUpdate", value:

      function componentDidUpdate(prevProps) {
        if (!areIconPropsEqual(prevProps, this.props)) {
          this.updateIconSource();
        }
        if (!areSelectedIconPropsEqual(prevProps, this.props)) {
          this.updateSelectedIconSource();
        }
      } }, { key: "updateIconSource", value:

      function updateIconSource() {var _this$props, iconName, iconSize, iconColor, icon;return _regenerator.default.async(function updateIconSource$(_context) {while (1) {switch (_context.prev = _context.next) {case 0:_this$props =
                this.props, iconName = _this$props.iconName, iconSize = _this$props.iconSize, iconColor = _this$props.iconColor;if (!
                iconName) {_context.next = 8;break;}_context.next = 4;return _regenerator.default.awrap(
                getImageSource(iconName, iconSize, iconColor));case 4:icon = _context.sent;
                this.setState({ icon: icon });_context.next = 9;break;case 8:

                if (this.state.icon) {
                  this.setState({ icon: undefined });
                }case 9:case "end":return _context.stop();}}}, null, this, null, Promise);} }, { key: "updateSelectedIconSource", value:


      function updateSelectedIconSource() {var _this$props2, iconName, iconColor, iconSize, selectedIconName, selectedIconColor, selectedIcon;return _regenerator.default.async(function updateSelectedIconSource$(_context2) {while (1) {switch (_context2.prev = _context2.next) {case 0:_this$props2 =






                this.props, iconName = _this$props2.iconName, iconColor = _this$props2.iconColor, iconSize = _this$props2.iconSize, selectedIconName = _this$props2.selectedIconName, selectedIconColor = _this$props2.selectedIconColor;if (!(
                selectedIconName || selectedIconColor)) {_context2.next = 8;break;}_context2.next = 4;return _regenerator.default.awrap(
                getImageSource(
                selectedIconName || iconName,
                iconSize,
                selectedIconColor || iconColor));case 4:selectedIcon = _context2.sent;

                this.setState({ selectedIcon: selectedIcon });_context2.next = 9;break;case 8:

                if (this.state.selectedIcon) {
                  this.setState({ selectedIcon: undefined });
                }case 9:case "end":return _context2.stop();}}}, null, this, null, Promise);} }, { key: "render", value:


      function render() {
        return _react.default.createElement(TabBarIOS.Item, (0, _extends2.default)({}, this.state, this.props, { __self: this, __self: this, __source: { fileName: _jsxFileName, lineNumber: 84, columnNumber: 14 } }));
      } }]);return TabBarItemIOS;}(_react.PureComponent), _class.defaultProps = { iconSize: 30 }, _temp;

}