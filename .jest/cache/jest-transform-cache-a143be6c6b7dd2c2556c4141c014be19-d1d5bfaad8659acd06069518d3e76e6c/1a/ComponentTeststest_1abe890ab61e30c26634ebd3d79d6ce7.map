{"version":3,"sources":["C:\\Users\\ashee\\Documents\\Javascript\\React\\React Native\\suduko\\src\\__tests__\\ComponentTests.test.tsx"],"names":[],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAGA;;AAMA;;AACA;;;;;;AAIA,IAAM,OAAO,GAAG,mCAAhB;AACA,IAAM,IAAI,eAAV;AACA,IAAM,KAAK,GAA0B;AACjC,EAAA,OAAO,EAAE,KADwB;AAEjC,EAAA,IAAI,EAAJ,IAFiC;AAGjC,EAAA,GAAG,EAAE,IAAI,CAAC,OAAL,CAAa,KAAb,EAAoB,GAApB,CAH4B;AAIjC,EAAA,MAAM,EAAE;AAAE,IAAA,EAAE,EAAE;AAAN;AAJyB,CAArC;AAMA,IAAM,QAAQ,GAAG,6BAAe,KAAK,CAAC,GAArB,CAAjB;;AAGA,SAAS,eAAT,CACE,SADF,EAGgE;AAAA,iFAAF,EAAE;AAAA,MAA7D,YAA6D,QAA7D,YAA6D;AAAA,wBAAhD,KAAgD;AAAA,MAAhD,KAAgD,2BAAxC,wBAAY,cAAZ,EAAqB,YAArB,CAAwC;;AAE9D,yCACK,yBAAO,eAAA,aAAA,CAAC,oBAAD,EAAS;AAAC,IAAA,KAAK,EAAI;AAAV,GAAT,EAA2B,SAA3B,CAAP,CADL;AAEE,IAAA,KAAK,EAAL;AAFF;AAID;;AAGD,QAAQ,CAAC,gBAAD,EAAmB,YAAK;AAE9B,MAAM,SAAS,GAAa,EAA5B;AAEA,MAAI,aAAJ;AACA,EAAA,UAAU,CAAC,YAAK;AACd,IAAA,aAAa,GAAG,eAAe,CAC7B,eAAA,aAAA,CAAC,aAAD,EAAK;AACH,MAAA,OAAO,EAAE,OADN;AAEH,MAAA,QAAQ,EAAE,QAFP;AAGH,MAAA,KAAK,EAAE;AAHJ,KAAL,CAD6B,EAM7B;AACE,MAAA,YAAY,EAAC;AADf,KAN6B,CAA/B;AAUD,GAXS,CAAV;AAaA,EAAA,EAAE,CAAC,0BAAD,EAA6B,YAAK;AAClC,IAAA,MAAM,CAAC,aAAa,CAAC,MAAd,EAAD,CAAN,CAA+B,eAA/B;AACD,GAFC,CAAF;AAIA,EAAA,EAAE,uEAAuE,YAAK;AAC5E,yBAAsB,aAAtB;AAAA,QAAO,WAAP,kBAAO,WAAP;AACA,QAAM,aAAa,GAAG,WAAW,CAAC,eAAD,CAAjC;AACA,IAAA,MAAM,CAAC,OAAO,CAAC,MAAT,CAAN,CAAuB,IAAvB,CAA4B,CAA5B;;AACA,2BAAU,KAAV,CAAgB,aAAhB;;AACA,IAAA,MAAM,CAAC,OAAO,CAAC,MAAT,CAAN,CAAuB,IAAvB,CAA4B,CAA5B;AACA,IAAA,MAAM,CAAC,OAAO,CAAC,QAAR,CAAiB,QAAlB,CAAN,CAAkC,IAAlC,CAAuC,sBAAvC;AACD,GAPC,CAAF;AASA,EAAA,EAAE,sFAAsF,YAAK;AAC3F,0BAAsB,aAAtB;AAAA,QAAO,WAAP,mBAAO,WAAP;AACA,QAAM,cAAc,GAAG,WAAW,CAAC,gBAAD,CAAlC;AACA,IAAA,MAAM,CAAC,OAAO,CAAC,MAAT,CAAN,CAAuB,IAAvB,CAA4B,CAA5B;;AACA,2BAAU,KAAV,CAAgB,cAAhB;;AACA,IAAA,MAAM,CAAC,OAAO,CAAC,MAAT,CAAN,CAAuB,IAAvB,CAA4B,CAA5B;AACA,IAAA,MAAM,CAAC,OAAO,CAAC,QAAR,CAAiB,QAAlB,CAAN,CAAkC,IAAlC,CAAuC,sBAAvC;AACD,GAPC,CAAF;AASA,EAAA,EAAE,oEAAoE,YAAK;AACzE,0BAAsB,aAAtB;AAAA,QAAO,WAAP,mBAAO,WAAP;AACA,QAAM,cAAc,GAAG,WAAW,CAAC,gBAAD,CAAlC;AACA,QAAM,aAAa,GAAG,WAAW,CAAC,eAAD,CAAjC;AACA,IAAA,MAAM,CAAC,aAAa,CAAC,KAAd,CAAoB,OAArB,CAAN,CAAoC,SAApC;;AACA,2BAAU,KAAV,CAAgB,cAAhB;;AACA,IAAA,MAAM,CAAC,aAAa,CAAC,KAAd,CAAoB,OAArB,CAAN,CAAoC,UAApC;AAEA,QAAM,aAAa,GAAG,WAAW,CAAC,eAAD,CAAjC;AACA,QAAM,YAAY,GAAG,WAAW,CAAC,cAAD,CAAhC;AACA,IAAA,MAAM,CAAC,YAAY,CAAC,KAAb,CAAmB,OAApB,CAAN,CAAmC,SAAnC;;AACA,2BAAU,KAAV,CAAgB,aAAhB;;AACA,IAAA,MAAM,CAAC,YAAY,CAAC,KAAb,CAAmB,OAApB,CAAN,CAAmC,SAAnC;AACD,GAbC,CAAF;AAeA,EAAA,EAAE,gDAAgD,YAAI;AACpD,0BAAsB,aAAtB;AAAA,QAAO,WAAP,mBAAO,WAAP;AACA,QAAM,cAAc,GAAG,WAAW,CAAC,gBAAD,CAAlC;AACA,QAAM,aAAa,GAAG,WAAW,CAAC,eAAD,CAAjC;AACA,IAAA,MAAM,CAAC,aAAa,CAAC,KAAd,CAAoB,OAArB,CAAN,CAAoC,SAApC;;AACA,2BAAU,KAAV,CAAgB,cAAhB;;AACA,IAAA,MAAM,CAAC,aAAa,CAAC,KAAd,CAAoB,OAArB,CAAN,CAAoC,UAApC;AACA,QAAM,iBAAiB,GAAG,WAAW,CAAC,mBAAD,CAArC;;AACA,2BAAU,KAAV,CAAgB,iBAAhB;;AACA,IAAA,MAAM,CAAC,aAAa,CAAC,KAAd,CAAoB,OAArB,CAAN,CAAoC,SAApC;AAGA,IAAA,SAAS,CAAC,WAAD,CAAT,GAAyB;AACvB,qBAAc,KADS;AAEvB,oBAAa;AAFU,KAAzB;AAID,GAhBC,CAAF;AAkBA,EAAA,EAAE,0EAA0E,YAAK;AAC/E,0BAAsB,aAAtB;AAAA,QAAO,WAAP,mBAAO,WAAP;AACA,QAAM,cAAc,GAAG,WAAW,CAAC,gBAAD,CAAlC;AACA,IAAA,MAAM,CAAC,OAAO,CAAC,MAAT,CAAN,CAAuB,IAAvB,CAA4B,CAA5B;;AACA,2BAAU,KAAV,CAAgB,cAAhB;;AACA,IAAA,MAAM,CAAC,OAAO,CAAC,MAAT,CAAN,CAAuB,IAAvB,CAA4B,CAA5B;AACA,IAAA,MAAM,CAAC,OAAO,CAAC,QAAR,CAAiB,QAAlB,CAAN,CAAkC,IAAlC,CAAuC,cAAvC;AACD,GAPC,CAAF;AASA,EAAA,EAAE,0GAA0G,YAAK;AAC/G,0BAAsB,aAAtB;AAAA,QAAO,WAAP,mBAAO,WAAP;AACA,QAAM,aAAa,GAAG,WAAW,CAAC,eAAD,CAAjC;AACA,IAAA,MAAM,CAAC,OAAO,CAAC,MAAT,CAAN,CAAuB,IAAvB,CAA4B,CAA5B;;AACA,2BAAU,KAAV,CAAgB,aAAhB;;AACA,IAAA,MAAM,CAAC,OAAO,CAAC,MAAT,CAAN,CAAuB,IAAvB,CAA4B,CAA5B;AACA,IAAA,MAAM,CAAC,OAAO,CAAC,QAAR,CAAiB,QAAlB,CAAN,CAAkC,IAAlC,CAAuC,cAAvC;AACD,GAPC,CAAF;AASA,EAAA,EAAE,uEAAuE,YAAK;AAC5E,0BAAsB,aAAtB;AAAA,QAAO,WAAP,mBAAO,WAAP;AACA,QAAM,aAAa,GAAG,WAAW,CAAC,eAAD,CAAjC;AACA,QAAM,YAAY,GAAG,WAAW,CAAC,cAAD,CAAhC;AACA,IAAA,MAAM,CAAC,YAAY,CAAC,KAAb,CAAmB,OAApB,CAAN,CAAmC,SAAnC;;AACA,2BAAU,KAAV,CAAgB,aAAhB;;AACA,IAAA,MAAM,CAAC,YAAY,CAAC,KAAb,CAAmB,OAApB,CAAN,CAAmC,UAAnC;AAEA,QAAM,cAAc,GAAG,WAAW,CAAC,gBAAD,CAAlC;AACA,QAAM,aAAa,GAAG,WAAW,CAAC,eAAD,CAAjC;AACA,IAAA,MAAM,CAAC,aAAa,CAAC,KAAd,CAAoB,OAArB,CAAN,CAAoC,SAApC;;AACA,2BAAU,KAAV,CAAgB,cAAhB;;AACA,IAAA,MAAM,CAAC,aAAa,CAAC,KAAd,CAAoB,OAArB,CAAN,CAAoC,SAApC;AACD,GAbC,CAAF;AAeD,CA1GO,CAAR;AA6GA,QAAQ,CAAC,iBAAD,EAAoB,YAAK;AAC/B,EAAA,EAAE,CAAC,0BAAD,EAA6B,YAAK;AAClC,QAAM,cAAc,GAAG,yBAAO,eAAA,aAAA,CAAC,cAAD,EAAM,IAAN,CAAP,EAAiB,MAAjB,EAAvB;AACA,IAAA,MAAM,CAAC,cAAD,CAAN,CAAuB,eAAvB;AACD,GAHC,CAAF;AAID,CALO,CAAR","sourcesContent":["import React from 'react';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducers from '../state/reducers/index';\nimport { createMemoryHistory, createLocation } from 'history';\nimport { match } from 'react-router'; \nimport { RouteComponentProps, Router } from 'react-router-native';\nimport { fireEvent, render} from '@testing-library/react-native';\nimport renderer from 'react-test-renderer';\n// import { shallow } from 'enzyme'\n// import toJson from 'enzyme-to-json';\nimport {GameState} from '../../types'\nimport {RootState} from '../state/reducers/index'\nimport Title from '../../components/Title';\nimport Home from '../../components/Home';\nimport App from '../../App';\n\n//Mock props for components with routing.\nconst history = createMemoryHistory();\nconst path = `/route/:id`;\nconst match: match<{ id: string }> = {\n    isExact: false,\n    path,\n    url: path.replace(':id', '1'),\n    params: { id: \"1\" }\n};\nconst location = createLocation(match.url);\n\n//Function to provide mockStore for components managed by redux.\nfunction renderWithRedux(\n  component:JSX.Element,\n  //@ts-ignore\n  {initialState,store = createStore(reducers,initialState)} = {}\n){\n  return {\n    ...render(<Provider store = {store}>{component}</Provider>),\n    store\n  }\n}\n\n//Home component testing.\ndescribe('Home component', () =>{\n  //Mock store object for state management.\n  const mockStore:RootState = {};\n\n  let homeComponent:any;\n  beforeEach(() =>{\n    homeComponent = renderWithRedux(\n      <Home\n        history={history}\n        location={location}\n        match={match}\n      />,\n      {\n        initialState:mockStore\n      }\n    );\n  })\n\n  it('renders without crashing', () => {\n    expect(homeComponent.toJSON()).toMatchSnapshot();\n  });\n\n  it(`routes to difficulty selection menu when pressing 'Play New Game'.`, () => {\n    const {getByTestId} = homeComponent;\n    const newGameButton = getByTestId('newGameButton');\n    expect(history.length).toBe(1);\n    fireEvent.press(newGameButton);\n    expect(history.length).toBe(2);\n    expect(history.location.pathname).toBe('/DifficultySelection')\n  });\n\n  it(`does not route to GameDisplay when pressing 'Load Game' if a game does not exist.`, () => {\n    const {getByTestId} = homeComponent;\n    const loadGameButton = getByTestId('loadGameButton');\n    expect(history.length).toBe(2);\n    fireEvent.press(loadGameButton);\n    expect(history.length).toBe(2);\n    expect(history.location.pathname).toBe('/DifficultySelection')\n  });\n\n  it(`prompt appears when attempting to load a game when none exists.`, () => {\n    const {getByTestId} = homeComponent;\n    const loadGameButton = getByTestId('loadGameButton');\n    const loadGamePopUp = getByTestId('loadGamePopUp');\n    expect(loadGamePopUp.props.visible).toBeFalsy();\n    fireEvent.press(loadGameButton);\n    expect(loadGamePopUp.props.visible).toBeTruthy();\n    \n    const newGameButton = getByTestId('newGameButton');\n    const newGamePopUp = getByTestId('newGamePopUp');\n    expect(newGamePopUp.props.visible).toBeFalsy();\n    fireEvent.press(newGameButton);\n    expect(newGamePopUp.props.visible).toBeFalsy();\n  });\n\n  it(`prompt disappears when pressing the screen.`, ()=>{\n    const {getByTestId} = homeComponent;\n    const loadGameButton = getByTestId('loadGameButton');\n    const loadGamePopUp = getByTestId('loadGamePopUp');\n    expect(loadGamePopUp.props.visible).toBeFalsy();\n    fireEvent.press(loadGameButton);\n    expect(loadGamePopUp.props.visible).toBeTruthy();\n    const loadGamePopUpHide = getByTestId('loadGamePopUpHide');\n    fireEvent.press(loadGamePopUpHide);\n    expect(loadGamePopUp.props.visible).toBeFalsy();\n\n    //Update state for the next series of tests.\n    mockStore['gameState'] = {\n      'isCompleted':false,\n      'gameExists':true\n    }\n  })\n\n  it(`routes to GameDisplay when pressing 'Load Game' if a game does exist.`, () => {\n    const {getByTestId} = homeComponent;\n    const loadGameButton = getByTestId('loadGameButton');\n    expect(history.length).toBe(3);\n    fireEvent.press(loadGameButton);\n    expect(history.length).toBe(4);\n    expect(history.location.pathname).toBe('/GameDisplay')\n  });\n  \n  it(`does not route to difficulty selection menu when pressing 'Play New Game' if a game currently exists.`, () => {\n    const {getByTestId} = homeComponent;\n    const newGameButton = getByTestId('newGameButton');\n    expect(history.length).toBe(4);\n    fireEvent.press(newGameButton);\n    expect(history.length).toBe(4);\n    expect(history.location.pathname).toBe('/GameDisplay')\n  });\n\n  it(`prompt appears when attempting to play a new game when one exists.`, () => {\n    const {getByTestId} = homeComponent;\n    const newGameButton = getByTestId('newGameButton');\n    const newGamePopUp = getByTestId('newGamePopUp');\n    expect(newGamePopUp.props.visible).toBeFalsy();\n    fireEvent.press(newGameButton);\n    expect(newGamePopUp.props.visible).toBeTruthy();\n\n    const loadGameButton = getByTestId('loadGameButton');\n    const loadGamePopUp = getByTestId('loadGamePopUp');\n    expect(loadGamePopUp.props.visible).toBeFalsy();\n    fireEvent.press(loadGameButton);\n    expect(loadGamePopUp.props.visible).toBeFalsy();\n  });\n\n});\n\n//Title component tests.\ndescribe('Title component', () =>{\n  it('renders without crashing', () => {\n    const titleComponent = render(<Title/>).toJSON();\n    expect(titleComponent).toMatchSnapshot();\n  });\n});\n"]}