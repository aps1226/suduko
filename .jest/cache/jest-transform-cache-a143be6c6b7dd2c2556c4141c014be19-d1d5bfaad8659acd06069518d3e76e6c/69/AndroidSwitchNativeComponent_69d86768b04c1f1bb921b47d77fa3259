aecf0eec67653bd25130d3f80537bbf0
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Commands = void 0;

var React = _interopRequireWildcard(require("react"));

var _codegenNativeCommands = _interopRequireDefault(require("react-native/Libraries/Utilities/codegenNativeCommands"));

var _codegenNativeComponent = _interopRequireDefault(require("react-native/Libraries/Utilities/codegenNativeComponent"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var Commands = (0, _codegenNativeCommands.default)({
  supportedCommands: ['setNativeValue']
});
exports.Commands = Commands;

var _default = (0, _codegenNativeComponent.default)('AndroidSwitch', {
  interfaceOnly: true
});

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFuZHJvaWRTd2l0Y2hOYXRpdmVDb21wb25lbnQuanMiXSwibmFtZXMiOlsiQ29tbWFuZHMiLCJzdXBwb3J0ZWRDb21tYW5kcyIsImludGVyZmFjZU9ubHkiXSwibWFwcGluZ3MiOiJBQVVBOzs7Ozs7Ozs7QUFFQTs7QUFPQTs7QUFDQTs7Ozs7O0FBcUNPLElBQU1BLFFBQXdCLEdBQUcsb0NBQXNDO0FBQzVFQyxFQUFBQSxpQkFBaUIsRUFBRSxDQUFDLGdCQUFEO0FBRHlELENBQXRDLENBQWpDOzs7ZUFJUyxxQ0FBb0MsZUFBcEMsRUFBcUQ7QUFDbkVDLEVBQUFBLGFBQWEsRUFBRTtBQURvRCxDQUFyRCxDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvdyBzdHJpY3QtbG9jYWxcbiAqIEBmb3JtYXRcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHR5cGUge1xuICBXaXRoRGVmYXVsdCxcbiAgQnViYmxpbmdFdmVudEhhbmRsZXIsXG59IGZyb20gJ3JlYWN0LW5hdGl2ZS9MaWJyYXJpZXMvVHlwZXMvQ29kZWdlblR5cGVzJztcblxuaW1wb3J0IGNvZGVnZW5OYXRpdmVDb21tYW5kcyBmcm9tICdyZWFjdC1uYXRpdmUvTGlicmFyaWVzL1V0aWxpdGllcy9jb2RlZ2VuTmF0aXZlQ29tbWFuZHMnO1xuaW1wb3J0IGNvZGVnZW5OYXRpdmVDb21wb25lbnQgZnJvbSAncmVhY3QtbmF0aXZlL0xpYnJhcmllcy9VdGlsaXRpZXMvY29kZWdlbk5hdGl2ZUNvbXBvbmVudCc7XG5pbXBvcnQgdHlwZSB7SG9zdENvbXBvbmVudH0gZnJvbSAncmVhY3QtbmF0aXZlL0xpYnJhcmllcy9SZW5kZXJlci9zaGltcy9SZWFjdE5hdGl2ZVR5cGVzJztcblxuaW1wb3J0IHR5cGUge0NvbG9yVmFsdWV9IGZyb20gJy4uLy4uL1N0eWxlU2hlZXQvU3R5bGVTaGVldFR5cGVzJztcbmltcG9ydCB0eXBlIHtWaWV3UHJvcHN9IGZyb20gJy4uL1ZpZXcvVmlld1Byb3BUeXBlcyc7XG5cbnR5cGUgU3dpdGNoQ2hhbmdlRXZlbnQgPSAkUmVhZE9ubHk8e3xcbiAgdmFsdWU6IGJvb2xlYW4sXG58fT47XG5cbnR5cGUgTmF0aXZlUHJvcHMgPSAkUmVhZE9ubHk8e3xcbiAgLi4uVmlld1Byb3BzLFxuXG4gIC8vIFByb3BzXG4gIGRpc2FibGVkPzogV2l0aERlZmF1bHQ8Ym9vbGVhbiwgZmFsc2U+LFxuICBlbmFibGVkPzogV2l0aERlZmF1bHQ8Ym9vbGVhbiwgdHJ1ZT4sXG4gIHRodW1iQ29sb3I/OiA/Q29sb3JWYWx1ZSxcbiAgdHJhY2tDb2xvckZvckZhbHNlPzogP0NvbG9yVmFsdWUsXG4gIHRyYWNrQ29sb3JGb3JUcnVlPzogP0NvbG9yVmFsdWUsXG4gIHZhbHVlPzogV2l0aERlZmF1bHQ8Ym9vbGVhbiwgZmFsc2U+LFxuICBvbj86IFdpdGhEZWZhdWx0PGJvb2xlYW4sIGZhbHNlPixcbiAgdGh1bWJUaW50Q29sb3I/OiA/Q29sb3JWYWx1ZSxcbiAgdHJhY2tUaW50Q29sb3I/OiA/Q29sb3JWYWx1ZSxcblxuICAvLyBFdmVudHNcbiAgb25DaGFuZ2U/OiBCdWJibGluZ0V2ZW50SGFuZGxlcjxTd2l0Y2hDaGFuZ2VFdmVudD4sXG58fT47XG5cbnR5cGUgTmF0aXZlVHlwZSA9IEhvc3RDb21wb25lbnQ8TmF0aXZlUHJvcHM+O1xuXG5pbnRlcmZhY2UgTmF0aXZlQ29tbWFuZHMge1xuICArc2V0TmF0aXZlVmFsdWU6IChcbiAgICB2aWV3UmVmOiBSZWFjdC5FbGVtZW50UmVmPE5hdGl2ZVR5cGU+LFxuICAgIHZhbHVlOiBib29sZWFuLFxuICApID0+IHZvaWQ7XG59XG5cbmV4cG9ydCBjb25zdCBDb21tYW5kczogTmF0aXZlQ29tbWFuZHMgPSBjb2RlZ2VuTmF0aXZlQ29tbWFuZHM8TmF0aXZlQ29tbWFuZHM+KHtcbiAgc3VwcG9ydGVkQ29tbWFuZHM6IFsnc2V0TmF0aXZlVmFsdWUnXSxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCAoY29kZWdlbk5hdGl2ZUNvbXBvbmVudDxOYXRpdmVQcm9wcz4oJ0FuZHJvaWRTd2l0Y2gnLCB7XG4gIGludGVyZmFjZU9ubHk6IHRydWUsXG59KTogTmF0aXZlVHlwZSk7XG4iXX0=