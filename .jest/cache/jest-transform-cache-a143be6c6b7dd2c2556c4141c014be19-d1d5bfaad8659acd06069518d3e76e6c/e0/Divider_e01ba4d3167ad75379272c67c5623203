bdf7ecb06f262670db0a1b0fcaf21ffe
"use strict";var _excluded = ["inset", "style", "theme"];

Object.defineProperty(exports, "__esModule", {
  value: true });

exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _color = _interopRequireDefault(require("color"));







function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

function _getRequireWildcardCache() {if (typeof WeakMap !== "function") return null;var cache = new WeakMap();_getRequireWildcardCache = function _getRequireWildcardCache() {return cache;};return cache;}

function _interopRequireWildcard(obj) {if (obj && obj.__esModule) {return obj;}if (obj === null || typeof obj !== "object" && typeof obj !== "function") {return { default: obj };}var cache = _getRequireWildcardCache();if (cache && cache.has(obj)) {return cache.get(obj);}var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {if (Object.prototype.hasOwnProperty.call(obj, key)) {var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}newObj.default = obj;if (cache) {cache.set(obj, newObj);}return newObj;}

function _extends() {_extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};return _extends.apply(this, arguments);}




























var Divider = function Divider(_ref)




{var inset = _ref.inset,style = _ref.style,theme = _ref.theme,rest = require("@babel/runtime/helpers/objectWithoutProperties")(_ref, _excluded);
  var
  isDarkTheme =
  theme.dark;
  return React.createElement(require("react-native").View, _extends({}, rest, {
    style: [isDarkTheme ? styles.dark : styles.light, inset && styles.inset, style] }));

};

var styles = require("react-native").StyleSheet.create({
  light: {
    backgroundColor: (0, _color.default)(require("../styles/colors").black).alpha(0.12).rgb().string(),
    height: require("react-native").StyleSheet.hairlineWidth },

  dark: {
    backgroundColor: (0, _color.default)(require("../styles/colors").white).alpha(0.12).rgb().string(),
    height: require("react-native").StyleSheet.hairlineWidth },

  inset: {
    marginLeft: 72 } });



var _default = (0, require("../core/theming").withTheme)(Divider);

exports.default = _default;