{"version":3,"sources":["C:\\Users\\ashee\\Documents\\Javascript\\React\\React Native\\suduko\\src\\__tests__\\Component Tests\\DifficultySelection.test.tsx"],"names":[],"mappings":";;;;AAAA;;AAEA;;AAEA;;AAEA;;AAKA;;AAGA,IAAM,OAAO,GAAG,mCAAhB;AACA,IAAM,IAAI,eAAV;AACA,IAAM,KAAK,GAA0B;AACjC,EAAA,OAAO,EAAE,KADwB;AAEjC,EAAA,IAAI,EAAJ,IAFiC;AAGjC,EAAA,GAAG,EAAE,IAAI,CAAC,OAAL,CAAa,KAAb,EAAoB,GAApB,CAH4B;AAIjC,EAAA,MAAM,EAAE;AAAE,IAAA,EAAE,EAAE;AAAN;AAJyB,CAArC;AAMA,IAAM,QAAQ,GAAG,6BAAe,KAAK,CAAC,GAArB,CAAjB;AAGA,QAAQ,CAAC,qBAAD,EAAuB,YAAK;AAGlC,MAAM,SAAS,GAAa,EAA5B;AAGA,MAAI,mBAAJ;AACA,EAAA,UAAU,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CACH,0BAAQ,YAAK;AACjB,cAAA,mBAAmB,GAAG,8BACpB,eAAA,aAAA,CAAC,4BAAD,EAAoB;AAClB,gBAAA,OAAO,EAAE,OADS;AAElB,gBAAA,QAAQ,EAAE,QAFQ;AAGlB,gBAAA,KAAK,EAAE;AAHW,eAApB,CADoB,EAMpB;AACE,gBAAA,YAAY,EAAC;AADf,eANoB,CAAtB;AAUD,aAXK,CADG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,CAAV;AAgBA,EAAA,SAAS,CAAC,oBAAD,CAAT;AAGA,EAAA,EAAE,CAAC,0BAAD,EAA4B;AAAA;AAAA;AAAA;AAAA;AAC5B,YAAA,MAAM,CAAC,mBAAmB,CAAC,MAApB,EAAD,CAAN,CAAqC,eAArC;;AAD4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B,CAAF;AAID,CA9BO,CAAR","sourcesContent":["import React from 'react';\r\nimport { Text,View } from 'react-native';\r\nimport renderWithRedux from './renderWithRedux';\r\nimport {SET_BOARD} from '../../state/actions/types'\r\nimport { createMemoryHistory, createLocation } from 'history';\r\nimport { match } from 'react-router';\r\nimport { act, cleanup, fireEvent, render, waitFor} from '@testing-library/react-native';\r\nimport renderer from 'react-test-renderer';\r\nimport {Colors,GameState} from '../../../types';\r\nimport {RootState} from '../../state/reducers/index';\r\n\r\nimport DifficultySelection from '../../../components/DifficultySelection';\r\n\r\n//Mock props for routing.\r\nconst history = createMemoryHistory();\r\nconst path = `/route/:id`;\r\nconst match: match<{ id: string }> = {\r\n    isExact: false,\r\n    path,\r\n    url: path.replace(':id', '1'),\r\n    params: { id: '1' }\r\n};\r\nconst location = createLocation(match.url);\r\n\r\n//GameDisplay component test.\r\ndescribe('DifficultySelection',() =>{\r\n\r\n  //Mock store object for state management.\r\n  const mockStore:RootState = {};\r\n\r\n  //Render DifficultySelection component with routing and redux.\r\n  let difficultySelection:any;\r\n  beforeEach(async() =>{\r\n    await waitFor(() =>{\r\n      difficultySelection = renderWithRedux(\r\n        <DifficultySelection\r\n          history={history}\r\n          location={location}\r\n          match={match}\r\n        />,\r\n        {\r\n          initialState:mockStore\r\n        }\r\n      );\r\n    })\r\n  })\r\n\r\n  //Cleanup after each test.\r\n  afterEach(cleanup);\r\n\r\n  //Component renders without crashing.\r\n  it('renders without crashing',async()=>{\r\n    expect(difficultySelection.toJSON()).toMatchSnapshot();\r\n  })\r\n\r\n})"]}