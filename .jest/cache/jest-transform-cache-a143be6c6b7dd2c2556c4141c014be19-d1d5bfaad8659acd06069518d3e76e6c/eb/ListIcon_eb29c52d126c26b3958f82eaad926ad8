2e5183413c8a71458c5a22e077dcd8e3
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _Icon = _interopRequireDefault(require("../Icon"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

var ICON_SIZE = 24;

var ListIcon = function ListIcon(_ref) {
  var icon = _ref.icon,
      iconColor = _ref.color,
      style = _ref.style;
  return React.createElement(_reactNative.View, {
    style: [styles.item, style],
    pointerEvents: "box-none"
  }, React.createElement(_Icon.default, {
    source: icon,
    size: ICON_SIZE,
    color: iconColor
  }));
};

var styles = _reactNative.StyleSheet.create({
  item: {
    margin: 8,
    height: 40,
    width: 40,
    alignItems: 'center',
    justifyContent: 'center'
  }
});

ListIcon.displayName = 'List.Icon';
var _default = ListIcon;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxpc3RJY29uLnRzeCJdLCJuYW1lcyI6WyJJQ09OX1NJWkUiLCJMaXN0SWNvbiIsImNvbG9yIiwic3R5bGUiLCJzdHlsZXMiLCJpY29uQ29sb3IiLCJpdGVtIiwibWFyZ2luIiwiaGVpZ2h0Iiwid2lkdGgiLCJhbGlnbkl0ZW1zIiwianVzdGlmeUNvbnRlbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxJQUFBLEtBQUEsR0FBQSx1QkFBQSxDQUFBLE9BQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQTs7QUFDQSxJQUFBLFlBQUEsR0FBQSxPQUFBLENBQUEsY0FBQSxDQUFBOztBQUNBLElBQUEsS0FBQSxHQUFBLHNCQUFBLENBQUEsT0FBQSxXQUFBLENBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWNBLElBQU1BLFNBQVMsR0FBZixFQUFBOztBQTJCQSxJQUFNQyxRQUFRLEdBQUcsU0FBWEEsUUFBVztBQUFBLE1BQUMsSUFBRCxRQUFDLElBQUQ7QUFBQSxNQUFDLFNBQUQsUUFBU0MsS0FBVDtBQUFBLE1BQTJCQyxLQUEzQixRQUEyQkEsS0FBM0I7QUFBQSxTQUNmLEtBQUEsQ0FBQSxhQUFBLENBQUMsWUFBQSxDQUFELElBQUEsRUFBQTtBQUFNLElBQUEsS0FBSyxFQUFFLENBQUNDLE1BQU0sQ0FBUCxJQUFBLEVBQWIsS0FBYSxDQUFiO0FBQW1DLElBQUEsYUFBYSxFQUFDO0FBQWpELEdBQUEsRUFDRSxLQUFBLENBQUEsYUFBQSxDQUFDLEtBQUEsQ0FBRCxPQUFBLEVBQUE7QUFBTSxJQUFBLE1BQU0sRUFBWixJQUFBO0FBQW9CLElBQUEsSUFBSSxFQUF4QixTQUFBO0FBQXFDLElBQUEsS0FBSyxFQUFFQztBQUE1QyxHQUFBLENBREYsQ0FEZTtBQUFBLENBQWpCOztBQU1BLElBQU1ELE1BQU0sR0FBRyxZQUFBLENBQUEsVUFBQSxDQUFBLE1BQUEsQ0FBa0I7QUFDL0JFLEVBQUFBLElBQUksRUFBRTtBQUNKQyxJQUFBQSxNQUFNLEVBREYsQ0FBQTtBQUVKQyxJQUFBQSxNQUFNLEVBRkYsRUFBQTtBQUdKQyxJQUFBQSxLQUFLLEVBSEQsRUFBQTtBQUlKQyxJQUFBQSxVQUFVLEVBSk4sUUFBQTtBQUtKQyxJQUFBQSxjQUFjLEVBQUU7QUFMWjtBQUR5QixDQUFsQixDQUFmOztBQVVBVixRQUFRLENBQVJBLFdBQUFBLEdBQUFBLFdBQUFBO2VBRWVBLFEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBWaWV3LCBWaWV3U3R5bGUsIFN0eWxlU2hlZXQsIFN0eWxlUHJvcCB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgSWNvbiwgeyBJY29uU291cmNlIH0gZnJvbSAnLi4vSWNvbic7XG5cbnR5cGUgUHJvcHMgPSB7XG4gIC8qKlxuICAgKiBJY29uIHRvIHNob3cuXG4gICAqL1xuICBpY29uOiBJY29uU291cmNlO1xuICAvKipcbiAgICogQ29sb3IgZm9yIHRoZSBpY29uLlxuICAgKi9cbiAgY29sb3I/OiBzdHJpbmc7XG4gIHN0eWxlPzogU3R5bGVQcm9wPFZpZXdTdHlsZT47XG59O1xuXG5jb25zdCBJQ09OX1NJWkUgPSAyNDtcblxuLyoqXG4gKiBBIGNvbXBvbmVudCB0byBzaG93IGFuIGljb24gaW4gYSBsaXN0IGl0ZW0uXG4gKlxuICogPGRpdiBjbGFzcz1cInNjcmVlbnNob3RzXCI+XG4gKiAgIDxmaWd1cmU+XG4gKiAgICAgPGltZyBjbGFzcz1cIm1lZGl1bVwiIHNyYz1cInNjcmVlbnNob3RzL2xpc3QtaWNvbi5wbmdcIiAvPlxuICogICA8L2ZpZ3VyZT5cbiAqIDwvZGl2PlxuICpcbiAqICMjIFVzYWdlXG4gKiBgYGBqc1xuICogaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuICogaW1wb3J0IHsgTGlzdCwgQ29sb3JzIH0gZnJvbSAncmVhY3QtbmF0aXZlLXBhcGVyJztcbiAqXG4gKiBjb25zdCBNeUNvbXBvbmVudCA9ICgpID0+IChcbiAqICAgPD5cbiAqICAgICA8TGlzdC5JY29uIGNvbG9yPXtDb2xvcnMuYmx1ZTUwMH0gaWNvbj1cImZvbGRlclwiIC8+XG4gKiAgICAgPExpc3QuSWNvbiBjb2xvcj17Q29sb3JzLmJsdWU1MDB9IGljb249XCJlcXVhbFwiIC8+XG4gKiAgICAgPExpc3QuSWNvbiBjb2xvcj17Q29sb3JzLmJsdWU1MDB9IGljb249XCJjYWxlbmRhclwiIC8+XG4gKiAgIDwvPlxuICogKTtcbiAqXG4gKiBleHBvcnQgZGVmYXVsdCBNeUNvbXBvbmVudDtcbiAqIGBgYFxuICovXG5jb25zdCBMaXN0SWNvbiA9ICh7IGljb24sIGNvbG9yOiBpY29uQ29sb3IsIHN0eWxlIH06IFByb3BzKSA9PiAoXG4gIDxWaWV3IHN0eWxlPXtbc3R5bGVzLml0ZW0sIHN0eWxlXX0gcG9pbnRlckV2ZW50cz1cImJveC1ub25lXCI+XG4gICAgPEljb24gc291cmNlPXtpY29ufSBzaXplPXtJQ09OX1NJWkV9IGNvbG9yPXtpY29uQ29sb3J9IC8+XG4gIDwvVmlldz5cbik7XG5cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgaXRlbToge1xuICAgIG1hcmdpbjogOCxcbiAgICBoZWlnaHQ6IDQwLFxuICAgIHdpZHRoOiA0MCxcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gIH0sXG59KTtcblxuTGlzdEljb24uZGlzcGxheU5hbWUgPSAnTGlzdC5JY29uJztcblxuZXhwb3J0IGRlZmF1bHQgTGlzdEljb247XG4iXX0=