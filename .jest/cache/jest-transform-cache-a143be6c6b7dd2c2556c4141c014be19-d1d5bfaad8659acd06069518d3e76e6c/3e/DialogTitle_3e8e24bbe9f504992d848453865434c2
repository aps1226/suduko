547d601ffc4dd996b8759d219053cab4
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");

var _objectWithoutProperties2 = _interopRequireDefault2(require("@babel/runtime/helpers/objectWithoutProperties"));

var _excluded = ["children", "theme", "style"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DialogTitle = exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _Title = _interopRequireDefault(require("../Typography/Title"));

var _theming = require("../../core/theming");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var DialogTitle = function DialogTitle(_ref) {
  var children = _ref.children,
      theme = _ref.theme,
      style = _ref.style,
      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  return React.createElement(_Title.default, _extends({
    accessibilityTraits: "header",
    accessibilityRole: "header",
    style: [styles.text, {
      color: theme.colors.text
    }, style]
  }, rest), children);
};

exports.DialogTitle = DialogTitle;
DialogTitle.displayName = 'Dialog.Title';

var styles = _reactNative.StyleSheet.create({
  text: {
    marginTop: 22,
    marginBottom: 18,
    marginHorizontal: 24
  }
});

var _default = (0, _theming.withTheme)(DialogTitle);

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRpYWxvZ1RpdGxlLnRzeCJdLCJuYW1lcyI6WyJEaWFsb2dUaXRsZSIsInJlc3QiLCJzdHlsZXMiLCJjb2xvciIsInRoZW1lIiwidGV4dCIsIm1hcmdpblRvcCIsIm1hcmdpbkJvdHRvbSIsIm1hcmdpbkhvcml6b250YWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBLElBQUEsS0FBQSxHQUFBLHVCQUFBLENBQUEsT0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBOztBQUNBLElBQUEsWUFBQSxHQUFBLE9BQUEsQ0FBQSxjQUFBLENBQUE7O0FBQ0EsSUFBQSxNQUFBLEdBQUEsc0JBQUEsQ0FBQSxPQUFBLHVCQUFBLENBQUE7O0FBQ0EsSUFBQSxRQUFBLEdBQUEsT0FBQSxzQkFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZ0RBLElBQU1BLFdBQVcsR0FBRyxTQUFkQSxXQUFjO0FBQUEsTUFBQyxRQUFELFFBQUMsUUFBRDtBQUFBLE1BQUMsS0FBRCxRQUFDLEtBQUQ7QUFBQSxNQUFDLEtBQUQsUUFBQyxLQUFEO0FBQUEsTUFBOEJDLElBQTlCO0FBQUEsU0FDbEIsS0FBQSxDQUFBLGFBQUEsQ0FBQyxNQUFBLENBQUQsT0FBQSxFQUFBLFFBQUEsQ0FBQTtBQUVFLElBQUEsbUJBQW1CLEVBRnJCLFFBQUE7QUFHRSxJQUFBLGlCQUFpQixFQUhuQixRQUFBO0FBSUUsSUFBQSxLQUFLLEVBQUUsQ0FBQ0MsTUFBTSxDQUFQLElBQUEsRUFBYztBQUFFQyxNQUFBQSxLQUFLLEVBQUVDLEtBQUssQ0FBTEEsTUFBQUEsQ0FBYUM7QUFBdEIsS0FBZCxFQUFBLEtBQUE7QUFKVCxHQUFBLEVBQUEsSUFBQSxDQUFBLEVBREYsUUFDRSxDQURrQjtBQUFBLENBQXBCOzs7QUFZQUwsV0FBVyxDQUFYQSxXQUFBQSxHQUFBQSxjQUFBQTs7QUFFQSxJQUFNRSxNQUFNLEdBQUcsWUFBQSxDQUFBLFVBQUEsQ0FBQSxNQUFBLENBQWtCO0FBQy9CRyxFQUFBQSxJQUFJLEVBQUU7QUFDSkMsSUFBQUEsU0FBUyxFQURMLEVBQUE7QUFFSkMsSUFBQUEsWUFBWSxFQUZSLEVBQUE7QUFHSkMsSUFBQUEsZ0JBQWdCLEVBQUU7QUFIZDtBQUR5QixDQUFsQixDQUFmOztlQVFlLENBQUEsR0FBQSxRQUFBLENBQUEsU0FBQSxFQUFBLFdBQUEsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFN0eWxlU2hlZXQsIFN0eWxlUHJvcCwgVGV4dFN0eWxlIH0gZnJvbSAncmVhY3QtbmF0aXZlJztcbmltcG9ydCBUaXRsZSBmcm9tICcuLi9UeXBvZ3JhcGh5L1RpdGxlJztcbmltcG9ydCB7IHdpdGhUaGVtZSB9IGZyb20gJy4uLy4uL2NvcmUvdGhlbWluZyc7XG5cbnR5cGUgUHJvcHMgPSBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhSZWY8dHlwZW9mIFRpdGxlPiAmIHtcbiAgLyoqXG4gICAqIFRpdGxlIHRleHQgZm9yIHRoZSBgRGlhbG9nVGl0bGVgLlxuICAgKi9cbiAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZTtcbiAgc3R5bGU/OiBTdHlsZVByb3A8VGV4dFN0eWxlPjtcbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKi9cbiAgdGhlbWU6IFJlYWN0TmF0aXZlUGFwZXIuVGhlbWU7XG59O1xuXG4vKipcbiAqIEEgY29tcG9uZW50IHRvIHNob3cgYSB0aXRsZSBpbiBhIERpYWxvZy5cbiAqXG4gKiA8ZGl2IGNsYXNzPVwic2NyZWVuc2hvdHNcIj5cbiAqICAgPGZpZ3VyZT5cbiAqICAgICA8aW1nIGNsYXNzPVwibWVkaXVtXCIgc3JjPVwic2NyZWVuc2hvdHMvZGlhbG9nLXRpdGxlLnBuZ1wiIC8+XG4gKiAgIDwvZmlndXJlPlxuICogPC9kaXY+XG4gKlxuICogIyMgVXNhZ2VcbiAqIGBgYGpzXG4gKiBpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG4gKiBpbXBvcnQgeyBQYXJhZ3JhcGgsIERpYWxvZywgUG9ydGFsIH0gZnJvbSAncmVhY3QtbmF0aXZlLXBhcGVyJztcbiAqXG4gKiBjb25zdCBNeUNvbXBvbmVudCA9ICgpID0+IHtcbiAqICAgY29uc3QgW3Zpc2libGUsIHNldFZpc2libGVdID0gUmVhY3QudXNlU3RhdGUoZmFsc2UpO1xuICpcbiAqICAgY29uc3QgaGlkZURpYWxvZyA9ICgpID0+IHNldFZpc2libGUoZmFsc2UpO1xuICpcbiAqICAgcmV0dXJuIChcbiAqICAgICA8UG9ydGFsPlxuICogICAgICAgPERpYWxvZyB2aXNpYmxlPXt2aXNpYmxlfSBvbkRpc21pc3M9e2hpZGVEaWFsb2d9PlxuICogICAgICAgICA8RGlhbG9nLlRpdGxlPlRoaXMgaXMgYSB0aXRsZTwvRGlhbG9nLlRpdGxlPlxuICogICAgICAgICA8RGlhbG9nLkNvbnRlbnQ+XG4gKiAgICAgICAgICAgPFBhcmFncmFwaD5UaGlzIGlzIHNpbXBsZSBkaWFsb2c8L1BhcmFncmFwaD5cbiAqICAgICAgICAgPC9EaWFsb2cuQ29udGVudD5cbiAqICAgICAgIDwvRGlhbG9nPlxuICogICAgIDwvUG9ydGFsPlxuICogICApO1xuICogfTtcbiAqXG4gKiBleHBvcnQgZGVmYXVsdCBNeUNvbXBvbmVudDtcbiAqIGBgYFxuICovXG5jb25zdCBEaWFsb2dUaXRsZSA9ICh7IGNoaWxkcmVuLCB0aGVtZSwgc3R5bGUsIC4uLnJlc3QgfTogUHJvcHMpID0+IChcbiAgPFRpdGxlXG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvciBXZSBrZWVwIG9sZCBhMTF5IHByb3BzIGZvciBiYWNrd2FyZHMgY29tcGF0IHdpdGggb2xkIFJOIHZlcnNpb25zXG4gICAgYWNjZXNzaWJpbGl0eVRyYWl0cz1cImhlYWRlclwiXG4gICAgYWNjZXNzaWJpbGl0eVJvbGU9XCJoZWFkZXJcIlxuICAgIHN0eWxlPXtbc3R5bGVzLnRleHQsIHsgY29sb3I6IHRoZW1lLmNvbG9ycy50ZXh0IH0sIHN0eWxlXX1cbiAgICB7Li4ucmVzdH1cbiAgPlxuICAgIHtjaGlsZHJlbn1cbiAgPC9UaXRsZT5cbik7XG5cbkRpYWxvZ1RpdGxlLmRpc3BsYXlOYW1lID0gJ0RpYWxvZy5UaXRsZSc7XG5cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgdGV4dDoge1xuICAgIG1hcmdpblRvcDogMjIsXG4gICAgbWFyZ2luQm90dG9tOiAxOCxcbiAgICBtYXJnaW5Ib3Jpem9udGFsOiAyNCxcbiAgfSxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCB3aXRoVGhlbWUoRGlhbG9nVGl0bGUpO1xuXG4vLyBAY29tcG9uZW50LWRvY3MgaWdub3JlLW5leHQtbGluZVxuZXhwb3J0IHsgRGlhbG9nVGl0bGUgfTtcbiJdfQ==