1ae0c9bb00b70c609d089d90f2085bc5










'use strict';function _createSuper(Derived) {var hasNativeReflectConstruct = _isNativeReflectConstruct();return function _createSuperInternal() {var Super = require("@babel/runtime/helpers/getPrototypeOf")(Derived),result;if (hasNativeReflectConstruct) {var NewTarget = require("@babel/runtime/helpers/getPrototypeOf")(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return require("@babel/runtime/helpers/possibleConstructorReturn")(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === "undefined" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === "function") return true;try {Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));return true;} catch (e) {return false;}}


































function _flush(rootNode) {
  var animatedStyles = new Set();
  function findAnimatedStyles(node) {



    if (typeof node.update === 'function') {
      animatedStyles.add(node);
    } else {
      node.__getChildren().forEach(findAnimatedStyles);
    }
  }
  findAnimatedStyles(rootNode);

  animatedStyles.forEach(function (animatedStyle) {return animatedStyle.update();});
}var









AnimatedValue = function (_AnimatedWithChildren) {require("@babel/runtime/helpers/inherits")(AnimatedValue, _AnimatedWithChildren);var _super = _createSuper(AnimatedValue);






  function AnimatedValue(value) {var _this;require("@babel/runtime/helpers/classCallCheck")(this, AnimatedValue);
    _this = _super.call(this);
    if (typeof value !== 'number') {
      throw new Error('AnimatedValue: Attempting to set value to undefined');
    }
    _this._startingValue = _this._value = value;
    _this._offset = 0;
    _this._animation = null;return _this;
  }require("@babel/runtime/helpers/createClass")(AnimatedValue, [{ key: "__detach", value:

    function __detach() {
      this.stopAnimation();
      require("@babel/runtime/helpers/get")(require("@babel/runtime/helpers/getPrototypeOf")(AnimatedValue.prototype), "__detach", this).call(this);
    } }, { key: "__getValue", value:

    function __getValue() {
      return this._value + this._offset;
    } }, { key: "setValue", value:







    function setValue(value) {
      if (this._animation) {
        this._animation.stop();
        this._animation = null;
      }
      this._updateValue(
      value,
      !this.__isNative);

      if (this.__isNative) {
        require("../NativeAnimatedHelper").API.setAnimatedNodeValue(this.__getNativeTag(), value);
      }
    } }, { key: "setOffset", value:








    function setOffset(offset) {
      this._offset = offset;
      if (this.__isNative) {
        require("../NativeAnimatedHelper").API.setAnimatedNodeOffset(this.__getNativeTag(), offset);
      }
    } }, { key: "flattenOffset", value:







    function flattenOffset() {
      this._value += this._offset;
      this._offset = 0;
      if (this.__isNative) {
        require("../NativeAnimatedHelper").API.flattenAnimatedNodeOffset(this.__getNativeTag());
      }
    } }, { key: "extractOffset", value:







    function extractOffset() {
      this._offset += this._value;
      this._value = 0;
      if (this.__isNative) {
        require("../NativeAnimatedHelper").API.extractAnimatedNodeOffset(this.__getNativeTag());
      }
    } }, { key: "stopAnimation", value:








    function stopAnimation(callback) {
      this.stopTracking();
      this._animation && this._animation.stop();
      this._animation = null;
      callback && callback(this.__getValue());
    } }, { key: "resetAnimation", value:






    function resetAnimation(callback) {
      this.stopAnimation(callback);
      this._value = this._startingValue;
    } }, { key: "_onAnimatedValueUpdateReceived", value:

    function _onAnimatedValueUpdateReceived(value) {
      this._updateValue(value, false);
    } }, { key: "interpolate", value:





    function interpolate(config) {
      return new (require("./AnimatedInterpolation"))(this, config);
    } }, { key: "animate", value:







    function animate(animation, callback) {var _this2 = this;
      var handle = null;
      if (animation.__isInteraction) {
        handle = require("../../../Interaction/InteractionManager").createInteractionHandle();
      }
      var previousAnimation = this._animation;
      this._animation && this._animation.stop();
      this._animation = animation;
      animation.start(
      this._value,
      function (value) {


        _this2._updateValue(value, true);
      },
      function (result) {
        _this2._animation = null;
        if (handle !== null) {
          require("../../../Interaction/InteractionManager").clearInteractionHandle(handle);
        }
        callback && callback(result);
      },
      previousAnimation,
      this);

    } }, { key: "stopTracking", value:




    function stopTracking() {
      this._tracking && this._tracking.__detach();
      this._tracking = null;
    } }, { key: "track", value:




    function track(tracking) {
      this.stopTracking();
      this._tracking = tracking;
    } }, { key: "_updateValue", value:

    function _updateValue(value, flush) {
      if (value === undefined) {
        throw new Error('AnimatedValue: Attempting to set value to undefined');
      }

      this._value = value;
      if (flush) {
        _flush(this);
      }
      require("@babel/runtime/helpers/get")(require("@babel/runtime/helpers/getPrototypeOf")(AnimatedValue.prototype), "__callListeners", this).call(this, this.__getValue());
    } }, { key: "__getNativeConfig", value:

    function __getNativeConfig() {
      return {
        type: 'value',
        value: this._value,
        offset: this._offset };

    } }]);return AnimatedValue;}(require("./AnimatedWithChildren"));


module.exports = AnimatedValue;