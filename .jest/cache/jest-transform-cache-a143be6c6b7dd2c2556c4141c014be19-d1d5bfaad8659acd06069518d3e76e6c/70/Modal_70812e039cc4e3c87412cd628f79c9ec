583d9128037c613fb781a92543150cb6










'use strict';var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));












var _RCTModalHostViewNativeComponent = _interopRequireDefault(require("./RCTModalHostViewNativeComponent"));var _jsxFileName = "C:\\Users\\ashee\\Documents\\Javascript\\React\\React Native\\suduko\\node_modules\\react-native\\Libraries\\Modal\\Modal.js",_container;function _createSuper(Derived) {var hasNativeReflectConstruct = _isNativeReflectConstruct();return function _createSuperInternal() {var Super = (0, _getPrototypeOf2.default)(Derived),result;if (hasNativeReflectConstruct) {var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return (0, _possibleConstructorReturn2.default)(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === "undefined" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === "function") return true;try {Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));return true;} catch (e) {return false;}}










var uniqueModalIdentifier = 0;var











































































































Modal = function (_React$Component) {(0, _inherits2.default)(Modal, _React$Component);var _super = _createSuper(Modal);












  function Modal(props) {var _this;(0, _classCallCheck2.default)(this, Modal);
    _this = _super.call(this, props);
    Modal._confirmProps(props);
    _this._identifier = uniqueModalIdentifier++;return _this;
  }(0, _createClass2.default)(Modal, [{ key: "getChildContext", value:







    function getChildContext() {


      return {
        virtualizedList: null };

    } }, { key: "componentWillUnmount", value:

    function componentWillUnmount() {
      if (this.props.onDismiss != null) {
        this.props.onDismiss();
      }
    } }, { key: "UNSAFE_componentWillReceiveProps", value:

    function UNSAFE_componentWillReceiveProps(nextProps) {
      Modal._confirmProps(nextProps);
    } }, { key: "render", value:















    function render() {
      if (this.props.visible !== true) {
        return null;
      }

      var containerStyles = {
        backgroundColor: this.props.transparent ? 'transparent' : 'white' };


      var animationType = this.props.animationType || 'none';

      var presentationStyle = this.props.presentationStyle;
      if (!presentationStyle) {
        presentationStyle = 'fullScreen';
        if (this.props.transparent) {
          presentationStyle = 'overFullScreen';
        }
      }

      var innerChildren = __DEV__ ?
      require('react').createElement(require("../ReactNative/AppContainer"), { rootTag: this.context.rootTag, __self: this, __self: this, __source: { fileName: _jsxFileName, lineNumber: 220, columnNumber: 7 } },
      this.props.children) :


      this.props.children;


      return (
        require('react').createElement(_RCTModalHostViewNativeComponent.default, {
          animationType: animationType,
          presentationStyle: presentationStyle,
          transparent: this.props.transparent,
          hardwareAccelerated: this.props.hardwareAccelerated,
          onRequestClose: this.props.onRequestClose,
          onShow: this.props.onShow,
          statusBarTranslucent: this.props.statusBarTranslucent,
          identifier: this._identifier,
          style: styles.modal,
          onStartShouldSetResponder: this._shouldSetResponder,
          supportedOrientations: this.props.supportedOrientations,
          onOrientationChange: this.props.onOrientationChange, __self: this, __self: this, __source: { fileName: _jsxFileName, lineNumber: 228, columnNumber: 7 } },
        require('react').createElement(require("../Components/ScrollView/ScrollView").Context.Provider, { value: null, __self: this, __self: this, __source: { fileName: _jsxFileName, lineNumber: 241, columnNumber: 9 } },
        require('react').createElement(require("../Components/View/View"), { style: [styles.container, containerStyles], __self: this, __self: this, __source: { fileName: _jsxFileName, lineNumber: 242, columnNumber: 11 } },
        innerChildren))));




    } }, { key: "_shouldSetResponder", value:


    function _shouldSetResponder() {
      return true;
    } }], [{ key: "_confirmProps", value: function _confirmProps(props) {if (props.presentationStyle && props.presentationStyle !== 'overFullScreen' && props.transparent) {console.warn("Modal with '" + props.presentationStyle + "' presentation style and 'transparent' value is not supported.");}} }]);return Modal;}(require('react').Component);Modal.defaultProps = { visible: true, hardwareAccelerated: false };Modal.contextTypes = { rootTag: require('prop-types').number };Modal.childContextTypes = { virtualizedList: require('prop-types').object };


var side = require("../ReactNative/I18nManager").getConstants().isRTL ? 'right' : 'left';
var styles = require("../StyleSheet/StyleSheet").create({
  modal: {
    position: 'absolute' },

  container: (_container = {}, (0, _defineProperty2.default)(_container,



  side, 0), (0, _defineProperty2.default)(_container, "top",
  0), (0, _defineProperty2.default)(_container, "flex",
  1), _container) });



module.exports = Modal;