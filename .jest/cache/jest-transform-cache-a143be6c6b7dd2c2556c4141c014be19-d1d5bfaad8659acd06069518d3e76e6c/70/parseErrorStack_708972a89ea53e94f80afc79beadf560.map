{"version":3,"sources":["parseErrorStack.js"],"names":["parseHermesStack","require","convertHermesStack","stack","frames","entries","entry","type","location","functionName","push","methodName","file","sourceUrl","lineNumber","line1Based","column","column1Based","virtualOffset0Based","parseErrorStack","e","stacktraceParser","Array","isArray","global","HermesInternal","parse","map","frame","module","exports"],"mappings":"AAUA;;;;;;;;;;;;;;;;AAKA,IAAMA,gBAAgB,GAAGC,OAAO,sBAAhC;;AAWA,SAASC,kBAAT,CAA4BC,KAA5B,EAAyE;AACvE,MAAMC,MAAM,GAAG,EAAf;;AACA,uDAAoBD,KAAK,CAACE,OAA1B,wCAAmC;AAAA,QAAxBC,KAAwB;;AACjC,QAAIA,KAAK,CAACC,IAAN,KAAe,OAAnB,EAA4B;AAC1B;AACD;;AACD,QAAOC,QAAP,GAAiCF,KAAjC,CAAOE,QAAP;AAAA,QAAiBC,YAAjB,GAAiCH,KAAjC,CAAiBG,YAAjB;;AACA,QAAID,QAAQ,CAACD,IAAT,KAAkB,QAAtB,EAAgC;AAC9B;AACD;;AACDH,IAAAA,MAAM,CAACM,IAAP,CAAY;AACVC,MAAAA,UAAU,EAAEF,YADF;AAEVG,MAAAA,IAAI,EAAEJ,QAAQ,CAACK,SAFL;AAGVC,MAAAA,UAAU,EAAEN,QAAQ,CAACO,UAHX;AAIVC,MAAAA,MAAM,EACJR,QAAQ,CAACD,IAAT,KAAkB,QAAlB,GACIC,QAAQ,CAACS,YAAT,GAAwB,CAD5B,GAEIT,QAAQ,CAACU;AAPL,KAAZ;AASD;;AACD,SAAOd,MAAP;AACD;;AAED,SAASe,eAAT,CAAyBC,CAAzB,EAA8D;AAC5D,MAAI,CAACA,CAAD,IAAM,CAACA,CAAC,CAACjB,KAAb,EAAoB;AAClB,WAAO,EAAP;AACD;;AAED,MAAMkB,gBAAgB,GAAGpB,OAAO,CAAC,mBAAD,CAAhC;;AACA,MAAME,KAAK,GAAGmB,KAAK,CAACC,OAAN,CAAcH,CAAC,CAACjB,KAAhB,IACViB,CAAC,CAACjB,KADQ,GAEVqB,MAAM,CAACC,cAAP,GACAvB,kBAAkB,CAACF,gBAAgB,CAACoB,CAAC,CAACjB,KAAH,CAAjB,CADlB,GAEAkB,gBAAgB,CAACK,KAAjB,CAAuBN,CAAC,CAACjB,KAAzB,EAAgCwB,GAAhC,CAAoC,UAAAC,KAAK;AAAA,2CACpCA,KADoC;AAEvCZ,MAAAA,MAAM,EAAEY,KAAK,CAACZ,MAAN,IAAgB,IAAhB,GAAuBY,KAAK,CAACZ,MAAN,GAAe,CAAtC,GAA0C;AAFX;AAAA,GAAzC,CAJJ;AASA,SAAOb,KAAP;AACD;;AAED0B,MAAM,CAACC,OAAP,GAAiBX,eAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nimport type {StackFrame} from '../NativeExceptionsManager';\nimport type {HermesParsedStack} from './parseHermesStack';\n\nconst parseHermesStack = require('./parseHermesStack');\n\nexport type ExtendedError = Error & {\n  jsEngine?: string,\n  preventSymbolication?: boolean,\n  componentStack?: string,\n  forceRedbox?: boolean,\n  isComponentError?: boolean,\n  ...\n};\n\nfunction convertHermesStack(stack: HermesParsedStack): Array<StackFrame> {\n  const frames = [];\n  for (const entry of stack.entries) {\n    if (entry.type !== 'FRAME') {\n      continue;\n    }\n    const {location, functionName} = entry;\n    if (location.type === 'NATIVE') {\n      continue;\n    }\n    frames.push({\n      methodName: functionName,\n      file: location.sourceUrl,\n      lineNumber: location.line1Based,\n      column:\n        location.type === 'SOURCE'\n          ? location.column1Based - 1\n          : location.virtualOffset0Based,\n    });\n  }\n  return frames;\n}\n\nfunction parseErrorStack(e: ExtendedError): Array<StackFrame> {\n  if (!e || !e.stack) {\n    return [];\n  }\n\n  const stacktraceParser = require('stacktrace-parser');\n  const stack = Array.isArray(e.stack)\n    ? e.stack\n    : global.HermesInternal\n    ? convertHermesStack(parseHermesStack(e.stack))\n    : stacktraceParser.parse(e.stack).map(frame => ({\n        ...frame,\n        column: frame.column != null ? frame.column - 1 : null,\n      }));\n\n  return stack;\n}\n\nmodule.exports = parseErrorStack;\n"]}