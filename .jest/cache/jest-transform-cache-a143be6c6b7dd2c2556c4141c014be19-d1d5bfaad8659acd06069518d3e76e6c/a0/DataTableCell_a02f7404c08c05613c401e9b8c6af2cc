52dacc565501cf9c0feaa08994e1d6a0
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");

var _objectWithoutProperties2 = _interopRequireDefault2(require("@babel/runtime/helpers/objectWithoutProperties"));

var _excluded = ["children", "style", "numeric"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _Text = _interopRequireDefault(require("../Typography/Text"));

var _TouchableRipple = _interopRequireDefault(require("../TouchableRipple/TouchableRipple"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var DataTableCell = function DataTableCell(_ref) {
  var children = _ref.children,
      style = _ref.style,
      numeric = _ref.numeric,
      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  return React.createElement(_TouchableRipple.default, _extends({}, rest, {
    style: [styles.container, numeric && styles.right, style]
  }), React.createElement(_Text.default, {
    numberOfLines: 1
  }, children));
};

DataTableCell.displayName = 'DataTable.Cell';

var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    flexDirection: 'row',
    alignItems: 'center'
  },
  right: {
    justifyContent: 'flex-end'
  }
});

var _default = DataTableCell;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRhdGFUYWJsZUNlbGwudHN4Il0sIm5hbWVzIjpbIkRhdGFUYWJsZUNlbGwiLCJyZXN0Iiwic3R5bGVzIiwibnVtZXJpYyIsImNvbnRhaW5lciIsImZsZXgiLCJmbGV4RGlyZWN0aW9uIiwiYWxpZ25JdGVtcyIsInJpZ2h0IiwianVzdGlmeUNvbnRlbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBLElBQUEsS0FBQSxHQUFBLHVCQUFBLENBQUEsT0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBOztBQUNBLElBQUEsWUFBQSxHQUFBLE9BQUEsQ0FBQSxjQUFBLENBQUE7O0FBQ0EsSUFBQSxLQUFBLEdBQUEsc0JBQUEsQ0FBQSxPQUFBLHNCQUFBLENBQUE7O0FBQ0EsSUFBQSxnQkFBQSxHQUFBLHNCQUFBLENBQUEsT0FBQSxzQ0FBQSxDQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFrREEsSUFBTUEsYUFBYSxHQUFHLFNBQWhCQSxhQUFnQjtBQUFBLE1BQUMsUUFBRCxRQUFDLFFBQUQ7QUFBQSxNQUFDLEtBQUQsUUFBQyxLQUFEO0FBQUEsTUFBQyxPQUFELFFBQUMsT0FBRDtBQUFBLE1BQWdDQyxJQUFoQztBQUFBLFNBQ3BCLEtBQUEsQ0FBQSxhQUFBLENBQUMsZ0JBQUEsQ0FBRCxPQUFBLEVBQUEsUUFBQSxDQUFBLEVBQUEsRUFBQSxJQUFBLEVBQUE7QUFFRSxJQUFBLEtBQUssRUFBRSxDQUFDQyxNQUFNLENBQVAsU0FBQSxFQUFtQkMsT0FBTyxJQUFJRCxNQUFNLENBQXBDLEtBQUEsRUFBQSxLQUFBO0FBRlQsR0FBQSxDQUFBLEVBSUUsS0FBQSxDQUFBLGFBQUEsQ0FBQyxLQUFBLENBQUQsT0FBQSxFQUFBO0FBQU0sSUFBQSxhQUFhLEVBQUU7QUFBckIsR0FBQSxFQUxKLFFBS0ksQ0FKRixDQURvQjtBQUFBLENBQXRCOztBQVNBRixhQUFhLENBQWJBLFdBQUFBLEdBQUFBLGdCQUFBQTs7QUFFQSxJQUFNRSxNQUFNLEdBQUcsWUFBQSxDQUFBLFVBQUEsQ0FBQSxNQUFBLENBQWtCO0FBQy9CRSxFQUFBQSxTQUFTLEVBQUU7QUFDVEMsSUFBQUEsSUFBSSxFQURLLENBQUE7QUFFVEMsSUFBQUEsYUFBYSxFQUZKLEtBQUE7QUFHVEMsSUFBQUEsVUFBVSxFQUFFO0FBSEgsR0FEb0I7QUFPL0JDLEVBQUFBLEtBQUssRUFBRTtBQUNMQyxJQUFBQSxjQUFjLEVBQUU7QUFEWDtBQVB3QixDQUFsQixDQUFmOztlQVllVCxhIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgU3R5bGVTaGVldCwgU3R5bGVQcm9wLCBWaWV3U3R5bGUgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IFRleHQgZnJvbSAnLi4vVHlwb2dyYXBoeS9UZXh0JztcbmltcG9ydCBUb3VjaGFibGVSaXBwbGUgZnJvbSAnLi4vVG91Y2hhYmxlUmlwcGxlL1RvdWNoYWJsZVJpcHBsZSc7XG5pbXBvcnQgdHlwZSB7ICRSZW1vdmVDaGlsZHJlbiB9IGZyb20gJy4uLy4uL3R5cGVzJztcblxudHlwZSBQcm9wcyA9ICRSZW1vdmVDaGlsZHJlbjx0eXBlb2YgVG91Y2hhYmxlUmlwcGxlPiAmIHtcbiAgLyoqXG4gICAqIENvbnRlbnQgb2YgdGhlIGBEYXRhVGFibGVDZWxsYC5cbiAgICovXG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGU7XG4gIC8qKlxuICAgKiBBbGlnbiB0aGUgdGV4dCB0byB0aGUgcmlnaHQuIEdlbmVyYWxseSBtb25ldGFyeSBvciBudW1iZXIgZmllbGRzIGFyZSBhbGlnbmVkIHRvIHJpZ2h0LlxuICAgKi9cbiAgbnVtZXJpYz86IGJvb2xlYW47XG4gIC8qKlxuICAgKiBGdW5jdGlvbiB0byBleGVjdXRlIG9uIHByZXNzLlxuICAgKi9cbiAgb25QcmVzcz86ICgpID0+IHZvaWQ7XG4gIHN0eWxlPzogU3R5bGVQcm9wPFZpZXdTdHlsZT47XG59O1xuXG4vKipcbiAqIEEgY29tcG9uZW50IHRvIHNob3cgYSBzaW5nbGUgY2VsbCBpbnNpZGUgb2YgYSB0YWJsZS5cbiAqXG4gKiA8ZGl2IGNsYXNzPVwic2NyZWVuc2hvdHNcIj5cbiAqICAgPGZpZ3VyZT5cbiAqICAgICA8aW1nIGNsYXNzPVwibWVkaXVtXCIgc3JjPVwic2NyZWVuc2hvdHMvZGF0YS10YWJsZS1yb3ctY2VsbC5wbmdcIiAvPlxuICogICA8L2ZpZ3VyZT5cbiAqIDwvZGl2PlxuICpcbiAqXG4gKiAjIyBVc2FnZVxuICogYGBganNcbiAqIGltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbiAqIGltcG9ydCB7IERhdGFUYWJsZSB9IGZyb20gJ3JlYWN0LW5hdGl2ZS1wYXBlcic7XG4gKlxuICogY29uc3QgTXlDb21wb25lbnQgPSAoKSA9PiAoXG4gKiAgICAgIDxEYXRhVGFibGUuUm93PlxuICogICAgICAgIDxEYXRhVGFibGUuQ2VsbCBudW1lcmljPjE8L0RhdGFUYWJsZS5DZWxsPlxuICogICAgICAgIDxEYXRhVGFibGUuQ2VsbCBudW1lcmljPjI8L0RhdGFUYWJsZS5DZWxsPlxuICogICAgICAgIDxEYXRhVGFibGUuQ2VsbCBudW1lcmljPjM8L0RhdGFUYWJsZS5DZWxsPlxuICogICAgICAgIDxEYXRhVGFibGUuQ2VsbCBudW1lcmljPjQ8L0RhdGFUYWJsZS5DZWxsPlxuICogICAgICA8L0RhdGFUYWJsZS5Sb3c+XG4gKiApO1xuICpcbiAqIGV4cG9ydCBkZWZhdWx0IE15Q29tcG9uZW50O1xuICogYGBgXG4gKlxuICogSWYgeW91IHdhbnQgdG8gc3VwcG9ydCBtdWx0aWxpbmUgdGV4dCwgcGxlYXNlIHVzZSBWaWV3IGluc3RlYWQsIGFzIG11bHRpbGluZSB0ZXh0IGRvZXNuJ3QgY29tcGx5IHdpdGhcbiAqIE1EIEd1aWRlbGluZXMgKGh0dHBzOi8vZ2l0aHViLmNvbS9jYWxsc3RhY2svcmVhY3QtbmF0aXZlLXBhcGVyL2lzc3Vlcy8yMzgxKS5cbiAqL1xuXG5jb25zdCBEYXRhVGFibGVDZWxsID0gKHsgY2hpbGRyZW4sIHN0eWxlLCBudW1lcmljLCAuLi5yZXN0IH06IFByb3BzKSA9PiAoXG4gIDxUb3VjaGFibGVSaXBwbGVcbiAgICB7Li4ucmVzdH1cbiAgICBzdHlsZT17W3N0eWxlcy5jb250YWluZXIsIG51bWVyaWMgJiYgc3R5bGVzLnJpZ2h0LCBzdHlsZV19XG4gID5cbiAgICA8VGV4dCBudW1iZXJPZkxpbmVzPXsxfT57Y2hpbGRyZW59PC9UZXh0PlxuICA8L1RvdWNoYWJsZVJpcHBsZT5cbik7XG5cbkRhdGFUYWJsZUNlbGwuZGlzcGxheU5hbWUgPSAnRGF0YVRhYmxlLkNlbGwnO1xuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIGNvbnRhaW5lcjoge1xuICAgIGZsZXg6IDEsXG4gICAgZmxleERpcmVjdGlvbjogJ3JvdycsXG4gICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gIH0sXG5cbiAgcmlnaHQ6IHtcbiAgICBqdXN0aWZ5Q29udGVudDogJ2ZsZXgtZW5kJyxcbiAgfSxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBEYXRhVGFibGVDZWxsO1xuIl19