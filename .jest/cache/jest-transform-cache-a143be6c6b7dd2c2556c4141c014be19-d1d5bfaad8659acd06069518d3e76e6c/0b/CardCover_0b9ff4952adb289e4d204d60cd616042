28bb6f2ddf7984cea480cae89787a302
"use strict";var _excluded = ["index", "total", "style", "theme"];

Object.defineProperty(exports, "__esModule", {
  value: true });

exports.CardCover = exports.default = void 0;

var React = _interopRequireWildcard(require("react"));







function _getRequireWildcardCache() {if (typeof WeakMap !== "function") return null;var cache = new WeakMap();_getRequireWildcardCache = function _getRequireWildcardCache() {return cache;};return cache;}

function _interopRequireWildcard(obj) {if (obj && obj.__esModule) {return obj;}if (obj === null || typeof obj !== "object" && typeof obj !== "function") {return { default: obj };}var cache = _getRequireWildcardCache();if (cache && cache.has(obj)) {return cache.get(obj);}var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {if (Object.prototype.hasOwnProperty.call(obj, key)) {var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}newObj.default = obj;if (cache) {cache.set(obj, newObj);}return newObj;}

function _extends() {_extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};return _extends.apply(this, arguments);}


























var CardCover = function CardCover(_ref)





{var index = _ref.index,total = _ref.total,style = _ref.style,theme = _ref.theme,rest = require("@babel/runtime/helpers/objectWithoutProperties")(_ref, _excluded);
  var
  roundness =
  theme.roundness;
  var coverStyle;

  if (index === 0) {
    if (total === 1) {
      coverStyle = {
        borderRadius: roundness };

    } else {
      coverStyle = {
        borderTopLeftRadius: roundness,
        borderTopRightRadius: roundness };

    }
  } else if (typeof total === 'number' && index === total - 1) {
    coverStyle = {
      borderBottomLeftRadius: roundness };

  }

  return React.createElement(require("react-native").View, {
    style: [styles.container, coverStyle, style] },
  React.createElement(require("react-native").Image, _extends({}, rest, {
    style: [styles.image, coverStyle] })));

};

exports.CardCover = CardCover;
CardCover.displayName = 'Card.Cover';

var styles = require("react-native").StyleSheet.create({
  container: {
    height: 195,
    backgroundColor: require("../../styles/colors").grey200,
    overflow: 'hidden' },

  image: {
    flex: 1,
    height: undefined,
    width: undefined,
    padding: 16,
    justifyContent: 'flex-end' } });



var _default = (0, require("../../core/theming").withTheme)(CardCover);


exports.default = _default;