520aa6c072e73c1821e5b99c1df99eca
"use strict";var _excluded = ["small", "icon", "label", "accessibilityLabel", "accessibilityState", "animated", "color", "disabled", "onPress", "onLongPress", "theme", "style", "visible", "uppercase", "loading", "testID"];function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) {symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});}keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {require("@babel/runtime/helpers/defineProperty")(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}

Object.defineProperty(exports, "__esModule", {
  value: true });

exports.FAB = exports.default = void 0;

var _color = _interopRequireDefault(require("color"));

var React = _interopRequireWildcard(require("react"));



var _ActivityIndicator = _interopRequireDefault(require("../ActivityIndicator"));

var _Surface = _interopRequireDefault(require("../Surface"));

var _CrossFadeIcon = _interopRequireDefault(require("../CrossFadeIcon"));

var _Icon = _interopRequireDefault(require("../Icon"));

var _Text = _interopRequireDefault(require("../Typography/Text"));

var _TouchableRipple = _interopRequireDefault(require("../TouchableRipple/TouchableRipple"));





var _getContrastingColor = _interopRequireDefault(require("../../utils/getContrastingColor"));

function _getRequireWildcardCache() {if (typeof WeakMap !== "function") return null;var cache = new WeakMap();_getRequireWildcardCache = function _getRequireWildcardCache() {return cache;};return cache;}

function _interopRequireWildcard(obj) {if (obj && obj.__esModule) {return obj;}if (obj === null || typeof obj !== "object" && typeof obj !== "function") {return { default: obj };}var cache = _getRequireWildcardCache();if (cache && cache.has(obj)) {return cache.get(obj);}var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {if (Object.prototype.hasOwnProperty.call(obj, key)) {var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}newObj.default = obj;if (cache) {cache.set(obj, newObj);}return newObj;}

function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

function _extends() {_extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};return _extends.apply(this, arguments);}

_getContrastingColor.default;




































var FAB = function FAB(_ref)

















{var small = _ref.small,icon = _ref.icon,label = _ref.label,_ref$accessibilityLab = _ref.accessibilityLabel,accessibilityLabel = _ref$accessibilityLab === void 0 ? label : _ref$accessibilityLab,accessibilityState = _ref.accessibilityState,_ref$animated = _ref.animated,animated = _ref$animated === void 0 ? true : _ref$animated,customColor = _ref.color,disabled = _ref.disabled,onPress = _ref.onPress,onLongPress = _ref.onLongPress,theme = _ref.theme,style = _ref.style,_ref$visible = _ref.visible,visible = _ref$visible === void 0 ? true : _ref$visible,_ref$uppercase = _ref.uppercase,uppercase = _ref$uppercase === void 0 ? true : _ref$uppercase,loading = _ref.loading,testID = _ref.testID,rest = require("@babel/runtime/helpers/objectWithoutProperties")(_ref, _excluded);
  var _React$useRef =

  React.useRef(new (require("react-native").Animated.Value)(visible ? 1 : 0)),visibility = _React$useRef.current;
  var
  scale =
  theme.animation.scale;
  React.useEffect(function () {
    if (visible) {
      require("react-native").Animated.timing(visibility, {
        toValue: 1,
        duration: 200 * scale,
        useNativeDriver: true }).
      start();
    } else {
      require("react-native").Animated.timing(visibility, {
        toValue: 0,
        duration: 150 * scale,
        useNativeDriver: true }).
      start();
    }
  }, [visible, scale, visibility]);
  var IconComponent = animated ? _CrossFadeIcon.default : _Icon.default;
  var disabledColor = (0, _color.default)(theme.dark ? require("../../styles/colors").white : require("../../styles/colors").black).alpha(0.12).rgb().string();
  var _ref2 =

  require("react-native").StyleSheet.flatten(style) || {},_ref2$backgroundColor = _ref2.backgroundColor,backgroundColor = _ref2$backgroundColor === void 0 ? disabled ? disabledColor : theme.colors.accent : _ref2$backgroundColor;
  var foregroundColor;

  if (typeof customColor !== 'undefined') {
    foregroundColor = customColor;
  } else if (disabled) {
    foregroundColor = (0, _color.default)(theme.dark ? require("../../styles/colors").white : require("../../styles/colors").black).alpha(0.32).rgb().string();
  } else {
    foregroundColor = (0, _getContrastingColor.default)(backgroundColor, require("../../styles/colors").white, 'rgba(0, 0, 0, .54)');
  }

  var rippleColor = (0, _color.default)(foregroundColor).alpha(0.32).rgb().string();
  return React.createElement(_Surface.default, _extends({}, rest, {
    style: [{
      backgroundColor: backgroundColor,
      opacity: visibility,
      transform: [{
        scale: visibility }] },

    styles.container, disabled && styles.disabled, style],
    pointerEvents: visible ? 'auto' : 'none' }),
  React.createElement(_TouchableRipple.default, {
    borderless: true,
    onPress: onPress,
    onLongPress: onLongPress,
    rippleColor: rippleColor,
    disabled: disabled,
    accessibilityLabel: accessibilityLabel,

    accessibilityTraits: disabled ? ['button', 'disabled'] : 'button',
    accessibilityComponentType: "button",
    accessibilityRole: "button",
    accessibilityState: _objectSpread(_objectSpread({}, accessibilityState), {}, {
      disabled: disabled }),

    style: styles.touchable,
    testID: testID },
  React.createElement(require("react-native").View, {
    style: [styles.content, label ? styles.extended : small ? styles.small : styles.standard],
    pointerEvents: "none" },
  icon && loading !== true ? React.createElement(IconComponent, {
    source: icon,
    size: 24,
    color: foregroundColor }) :
  null, loading ? React.createElement(_ActivityIndicator.default, {
    size: 18,
    color: foregroundColor }) :
  null, label ? React.createElement(_Text.default, {
    selectable: false,
    style: [styles.label, uppercase && styles.uppercaseLabel, _objectSpread({
      color: foregroundColor },
    theme.fonts.medium)] },

  label) : null)));
};

var styles = require("react-native").StyleSheet.create({
  container: {
    borderRadius: 28,
    elevation: 6 },

  touchable: {
    borderRadius: 28 },

  standard: {
    height: 56,
    width: 56 },

  small: {
    height: 40,
    width: 40 },

  extended: {
    height: 48,
    paddingHorizontal: 16 },

  content: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center' },

  label: {
    marginHorizontal: 8 },

  uppercaseLabel: {
    textTransform: 'uppercase' },

  disabled: {
    elevation: 0 } });



var _default = (0, require("../../core/theming").withTheme)(FAB);


exports.default = _default;
var FABWithTheme = (0, require("../../core/theming").withTheme)(FAB);

exports.FAB = FABWithTheme;