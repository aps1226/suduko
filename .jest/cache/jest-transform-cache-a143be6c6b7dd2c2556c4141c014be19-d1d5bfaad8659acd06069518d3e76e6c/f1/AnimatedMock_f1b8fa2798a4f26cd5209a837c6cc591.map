{"version":3,"sources":["AnimatedMock.js"],"names":["require","AnimatedEvent","attachNativeEvent","AnimatedImplementation","AnimatedInterpolation","AnimatedNode","AnimatedProps","AnimatedValue","AnimatedValueXY","createAnimatedComponent","emptyAnimation","start","stop","reset","_startNativeLoop","_isUsingNativeDriver","spring","value","config","anyValue","callback","setValue","toValue","finished","timing","decay","sequence","animations","parallel","delay","time","stagger","loop","animation","iterations","event","argMapping","module","exports","Value","ValueXY","Interpolation","Node","add","subtract","divide","multiply","modulo","diffClamp","forkEvent","unforkEvent","Event","__PropsOnlyForTests"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst {AnimatedEvent, attachNativeEvent} = require('./AnimatedEvent');\nconst AnimatedImplementation = require('./AnimatedImplementation');\nconst AnimatedInterpolation = require('./nodes/AnimatedInterpolation');\nconst AnimatedNode = require('./nodes/AnimatedNode');\nconst AnimatedProps = require('./nodes/AnimatedProps');\nconst AnimatedValue = require('./nodes/AnimatedValue');\nconst AnimatedValueXY = require('./nodes/AnimatedValueXY');\n\nconst createAnimatedComponent = require('./createAnimatedComponent');\n\nimport type {EndCallback} from './animations/Animation';\nimport type {TimingAnimationConfig} from './animations/TimingAnimation';\nimport type {DecayAnimationConfig} from './animations/DecayAnimation';\nimport type {SpringAnimationConfig} from './animations/SpringAnimation';\nimport type {Mapping, EventConfig} from './AnimatedEvent';\n\n/**\n * Animations are a source of flakiness in snapshot testing. This mock replaces\n * animation functions from AnimatedImplementation with empty animations for\n * predictability in tests.\n */\nexport type CompositeAnimation = {\n  start: (callback?: ?EndCallback) => void,\n  stop: () => void,\n  reset: () => void,\n  _startNativeLoop: (iterations?: number) => void,\n  _isUsingNativeDriver: () => boolean,\n  ...\n};\n\nconst emptyAnimation = {\n  start: () => {},\n  stop: () => {},\n  reset: () => {},\n  _startNativeLoop: () => {},\n  _isUsingNativeDriver: () => {\n    return false;\n  },\n};\n\nconst spring = function(\n  value: AnimatedValue | AnimatedValueXY,\n  config: SpringAnimationConfig,\n): CompositeAnimation {\n  const anyValue: any = value;\n  return {\n    ...emptyAnimation,\n    start: (callback?: ?EndCallback): void => {\n      anyValue.setValue(config.toValue);\n      callback && callback({finished: true});\n    },\n  };\n};\n\nconst timing = function(\n  value: AnimatedValue | AnimatedValueXY,\n  config: TimingAnimationConfig,\n): CompositeAnimation {\n  const anyValue: any = value;\n  return {\n    ...emptyAnimation,\n    start: (callback?: ?EndCallback): void => {\n      anyValue.setValue(config.toValue);\n      callback && callback({finished: true});\n    },\n  };\n};\n\nconst decay = function(\n  value: AnimatedValue | AnimatedValueXY,\n  config: DecayAnimationConfig,\n): CompositeAnimation {\n  return emptyAnimation;\n};\n\nconst sequence = function(\n  animations: Array<CompositeAnimation>,\n): CompositeAnimation {\n  return emptyAnimation;\n};\n\ntype ParallelConfig = {stopTogether?: boolean, ...};\nconst parallel = function(\n  animations: Array<CompositeAnimation>,\n  config?: ?ParallelConfig,\n): CompositeAnimation {\n  return emptyAnimation;\n};\n\nconst delay = function(time: number): CompositeAnimation {\n  return emptyAnimation;\n};\n\nconst stagger = function(\n  time: number,\n  animations: Array<CompositeAnimation>,\n): CompositeAnimation {\n  return emptyAnimation;\n};\n\ntype LoopAnimationConfig = {\n  iterations: number,\n  resetBeforeIteration?: boolean,\n  ...\n};\n\nconst loop = function(\n  animation: CompositeAnimation,\n  {iterations = -1}: LoopAnimationConfig = {},\n): CompositeAnimation {\n  return emptyAnimation;\n};\n\nconst event = function(argMapping: Array<?Mapping>, config: EventConfig): any {\n  return null;\n};\n\nmodule.exports = {\n  Value: AnimatedValue,\n  ValueXY: AnimatedValueXY,\n  Interpolation: AnimatedInterpolation,\n  Node: AnimatedNode,\n  decay,\n  timing,\n  spring,\n  add: AnimatedImplementation.add,\n  subtract: AnimatedImplementation.subtract,\n  divide: AnimatedImplementation.divide,\n  multiply: AnimatedImplementation.multiply,\n  modulo: AnimatedImplementation.modulo,\n  diffClamp: AnimatedImplementation.diffClamp,\n  delay,\n  sequence,\n  parallel,\n  stagger,\n  loop,\n  event,\n  createAnimatedComponent,\n  attachNativeEvent,\n  forkEvent: AnimatedImplementation.forkEvent,\n  unforkEvent: AnimatedImplementation.unforkEvent,\n  Event: AnimatedEvent,\n  __PropsOnlyForTests: AnimatedProps,\n};\n"]}