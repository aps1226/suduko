{"version":3,"sources":["DataTablePagination.tsx"],"names":["PaginationControls","showFastPaginationControls","colors","color","I18nManager","page","onPageChange","numberOfPages","PaginationDropdown","onItemsPerPageChange","React","toggleSelect","styles","contentStyle","option","primary","DataTablePagination","rest","labelColor","theme","numberOfItemsPerPageList","optionsContainer","selectPageDropdownAccessibilityLabel","accessibilityLabel","iconsContainer","container","justifyContent","flexDirection","alignItems","paddingLeft","flexWrap","marginVertical","label","fontSize","marginRight","button","textAlign"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  View,\n  ViewStyle,\n  I18nManager,\n} from 'react-native';\nimport color from 'color';\nimport IconButton from '../IconButton';\nimport Text from '../Typography/Text';\nimport { withTheme, useTheme } from '../../core/theming';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Menu from '../Menu/Menu';\nimport Button from '../Button';\n\ntype Props = React.ComponentPropsWithRef<typeof View> &\n  PaginationControlsProps &\n  PaginationDropdownProps & {\n    /**\n     * Label text to display which indicates current pagination.\n     */\n    label?: React.ReactNode;\n    /**\n     * AccessibilityLabel for `label`.\n     */\n    accessibilityLabel?: string;\n    /**\n     * Label text for select page dropdown to display.\n     */\n    selectPageDropdownLabel?: React.ReactNode;\n    /**\n     * AccessibilityLabel for `selectPageDropdownLabel`.\n     */\n    selectPageDropdownAccessibilityLabel?: string;\n    style?: StyleProp<ViewStyle>;\n    /**\n     * @optional\n     */\n    theme: ReactNativePaper.Theme;\n  };\n\ntype PaginationDropdownProps = {\n  /**\n   * The current number of rows per page.\n   */\n  numberOfItemsPerPage?: number;\n  /**\n   * Options for a number of rows per page to choose from.\n   */\n  numberOfItemsPerPageList?: Array<number>;\n  /**\n   * The function to set the number of rows per page.\n   */\n  onItemsPerPageChange?: (numberOfItemsPerPage: number) => void;\n};\n\ntype PaginationControlsProps = {\n  /**\n   * The currently visible page (starting with 0).\n   */\n  page: number;\n  /**\n   * The total number of pages.\n   */\n  numberOfPages: number;\n  /**\n   * Function to execute on page change.\n   */\n  onPageChange: (page: number) => void;\n  /**\n   * Whether to show fast forward and fast rewind buttons in pagination. False by default.\n   */\n  showFastPaginationControls?: boolean;\n};\n\nconst PaginationControls = ({\n  page,\n  numberOfPages,\n  onPageChange,\n  showFastPaginationControls,\n}: PaginationControlsProps) => {\n  const { colors } = useTheme();\n  return (\n    <>\n      {showFastPaginationControls ? (\n        <IconButton\n          icon={({ size, color }) => (\n            <MaterialCommunityIcon\n              name=\"page-first\"\n              color={color}\n              size={size}\n              direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n            />\n          )}\n          color={colors.text}\n          disabled={page === 0}\n          onPress={() => onPageChange(0)}\n          accessibilityLabel=\"page-first\"\n        />\n      ) : null}\n      <IconButton\n        icon={({ size, color }) => (\n          <MaterialCommunityIcon\n            name=\"chevron-left\"\n            color={color}\n            size={size}\n            direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n          />\n        )}\n        color={colors.text}\n        disabled={page === 0}\n        onPress={() => onPageChange(page - 1)}\n        accessibilityLabel=\"chevron-left\"\n      />\n      <IconButton\n        icon={({ size, color }) => (\n          <MaterialCommunityIcon\n            name=\"chevron-right\"\n            color={color}\n            size={size}\n            direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n          />\n        )}\n        color={colors.text}\n        disabled={numberOfPages === 0 || page === numberOfPages - 1}\n        onPress={() => onPageChange(page + 1)}\n        accessibilityLabel=\"chevron-right\"\n      />\n      {showFastPaginationControls ? (\n        <IconButton\n          icon={({ size, color }) => (\n            <MaterialCommunityIcon\n              name=\"page-last\"\n              color={color}\n              size={size}\n              direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n            />\n          )}\n          color={colors.text}\n          disabled={numberOfPages === 0 || page === numberOfPages - 1}\n          onPress={() => onPageChange(numberOfPages - 1)}\n          accessibilityLabel=\"page-last\"\n        />\n      ) : null}\n    </>\n  );\n};\n\nconst PaginationDropdown = ({\n  numberOfItemsPerPageList,\n  numberOfItemsPerPage,\n  onItemsPerPageChange,\n}: PaginationDropdownProps) => {\n  const { colors } = useTheme();\n  const [showSelect, toggleSelect] = React.useState<boolean>(false);\n\n  return (\n    <Menu\n      visible={showSelect}\n      onDismiss={() => toggleSelect(!showSelect)}\n      anchor={\n        <Button\n          mode=\"outlined\"\n          onPress={() => toggleSelect(true)}\n          style={styles.button}\n          icon=\"menu-down\"\n          contentStyle={styles.contentStyle}\n        >\n          {`${numberOfItemsPerPage}`}\n        </Button>\n      }\n    >\n      {numberOfItemsPerPageList?.map((option) => (\n        <Menu.Item\n          key={option}\n          titleStyle={\n            option === numberOfItemsPerPage && {\n              color: colors.primary,\n            }\n          }\n          onPress={() => {\n            onItemsPerPageChange?.(option);\n            toggleSelect(false);\n          }}\n          title={option}\n        />\n      ))}\n    </Menu>\n  );\n};\n\n/**\n * A component to show pagination for data table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-pagination.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const numberOfItemsPerPageList = [2, 3, 4];\n *\n * const items = [\n *   {\n *     key: 1,\n *     name: 'Page 1',\n *   },\n *   {\n *     key: 2,\n *     name: 'Page 2',\n *   },\n *   {\n *     key: 3,\n *     name: 'Page 3',\n *   },\n * ];\n *\n * const MyComponent = () => {\n *   const [page, setPage] = React.useState(0);\n *   const [numberOfItemsPerPage, onItemsPerPageChange] = React.useState(numberOfItemsPerPageList[0]);\n *   const from = page * numberOfItemsPerPage;\n *   const to = Math.min((page + 1) * numberOfItemsPerPage, items.length);\n *\n *   React.useEffect(() => {\n *      setPage(0);\n *   }, [numberOfItemsPerPage]);\n *\n *   return (\n *     <DataTable>\n *       <DataTable.Pagination\n *         page={page}\n *         numberOfPages={Math.ceil(items.length / numberOfItemsPerPage)}\n *         onPageChange={page => setPage(page)}\n *         label={`${from + 1}-${to} of ${items.length}`}\n *         showFastPaginationControls\n *         numberOfItemsPerPageList={numberOfItemsPerPageList}\n *         numberOfItemsPerPage={numberOfItemsPerPage}\n *         onItemsPerPageChange={onItemsPerPageChange}\n *         selectPageDropdownLabel={'Rows per page'}\n *       />\n *     </DataTable>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DataTablePagination = ({\n  label,\n  accessibilityLabel,\n  page,\n  numberOfPages,\n  onPageChange,\n  style,\n  theme,\n  showFastPaginationControls = false,\n  numberOfItemsPerPageList,\n  numberOfItemsPerPage,\n  onItemsPerPageChange,\n  selectPageDropdownLabel,\n  selectPageDropdownAccessibilityLabel,\n  ...rest\n}: Props) => {\n  const labelColor = color(theme.colors.text).alpha(0.6).rgb().string();\n\n  return (\n    <View\n      {...rest}\n      style={[styles.container, style]}\n      accessibilityLabel=\"pagination-container\"\n    >\n      {numberOfItemsPerPageList &&\n        numberOfItemsPerPage &&\n        onItemsPerPageChange && (\n          <View\n            accessibilityLabel=\"Options Select\"\n            style={styles.optionsContainer}\n          >\n            <Text\n              style={[styles.label, { color: labelColor }]}\n              numberOfLines={3}\n              accessibilityLabel={\n                selectPageDropdownAccessibilityLabel ||\n                'selectPageDropdownLabel'\n              }\n            >\n              {selectPageDropdownLabel}\n            </Text>\n            <PaginationDropdown\n              numberOfItemsPerPageList={numberOfItemsPerPageList}\n              numberOfItemsPerPage={numberOfItemsPerPage}\n              onItemsPerPageChange={onItemsPerPageChange}\n            />\n          </View>\n        )}\n      <Text\n        style={[styles.label, { color: labelColor }]}\n        numberOfLines={3}\n        accessibilityLabel={accessibilityLabel || 'label'}\n      >\n        {label}\n      </Text>\n      <View style={styles.iconsContainer}>\n        <PaginationControls\n          showFastPaginationControls={showFastPaginationControls}\n          onPageChange={onPageChange}\n          page={page}\n          numberOfPages={numberOfPages}\n        />\n      </View>\n    </View>\n  );\n};\n\nDataTablePagination.displayName = 'DataTable.Pagination';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16,\n    flexWrap: 'wrap',\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 6,\n  },\n  label: {\n    fontSize: 12,\n    marginRight: 16,\n  },\n  button: {\n    textAlign: 'center',\n    marginRight: 16,\n  },\n  iconsContainer: {\n    flexDirection: 'row',\n  },\n  contentStyle: {\n    flexDirection: 'row-reverse',\n  },\n});\n\nexport default withTheme(DataTablePagination);\n\n// @component-docs ignore-next-line\nexport { DataTablePagination };\n"]}