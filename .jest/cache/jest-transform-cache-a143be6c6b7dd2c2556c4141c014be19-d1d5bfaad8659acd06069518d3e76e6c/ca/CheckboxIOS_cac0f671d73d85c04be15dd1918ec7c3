1939f02ef71607411d8128cdc6e7104f
"use strict";var _excluded = ["status", "disabled", "onPress", "theme", "testID"];

Object.defineProperty(exports, "__esModule", {
  value: true });

exports.CheckboxIOS = exports.default = void 0;

var React = _interopRequireWildcard(require("react"));



var _color = _interopRequireDefault(require("color"));

var _MaterialCommunityIcon = _interopRequireDefault(require("../MaterialCommunityIcon"));

var _TouchableRipple = _interopRequireDefault(require("../TouchableRipple/TouchableRipple"));



function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

function _getRequireWildcardCache() {if (typeof WeakMap !== "function") return null;var cache = new WeakMap();_getRequireWildcardCache = function _getRequireWildcardCache() {return cache;};return cache;}

function _interopRequireWildcard(obj) {if (obj && obj.__esModule) {return obj;}if (obj === null || typeof obj !== "object" && typeof obj !== "function") {return { default: obj };}var cache = _getRequireWildcardCache();if (cache && cache.has(obj)) {return cache.get(obj);}var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {if (Object.prototype.hasOwnProperty.call(obj, key)) {var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}newObj.default = obj;if (cache) {cache.set(obj, newObj);}return newObj;}

function _extends() {_extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};return _extends.apply(this, arguments);}

















var CheckboxIOS = function CheckboxIOS(_ref)






{var status = _ref.status,disabled = _ref.disabled,onPress = _ref.onPress,theme = _ref.theme,testID = _ref.testID,rest = require("@babel/runtime/helpers/objectWithoutProperties")(_ref, _excluded);
  var checked = status === 'checked';
  var indeterminate = status === 'indeterminate';
  var checkedColor = disabled ? theme.colors.disabled : rest.color || theme.colors.accent;
  var rippleColor;

  if (disabled) {
    rippleColor = (0, _color.default)(theme.colors.text).alpha(0.16).rgb().string();
  } else {
    rippleColor = (0, _color.default)(checkedColor).fade(0.32).rgb().string();
  }

  var icon = indeterminate ? 'minus' : 'check';
  return React.createElement(_TouchableRipple.default, _extends({}, rest, {
    borderless: true,
    rippleColor: rippleColor,
    onPress: onPress,
    disabled: disabled,

    accessibilityTraits: disabled ? ['button', 'disabled'] : 'button',
    accessibilityComponentType: "button",
    accessibilityRole: "checkbox",
    accessibilityState: {
      disabled: disabled,
      checked: checked },

    accessibilityLiveRegion: "polite",
    style: styles.container,
    testID: testID }),
  React.createElement(require("react-native").View, {
    style: {
      opacity: indeterminate || checked ? 1 : 0 } },

  React.createElement(_MaterialCommunityIcon.default, {
    allowFontScaling: false,
    name: icon,
    size: 24,
    color: checkedColor,
    direction: "ltr" })));

};

CheckboxIOS.displayName = 'Checkbox.IOS';

var styles = require("react-native").StyleSheet.create({
  container: {
    borderRadius: 18,
    padding: 6 } });



var _default = (0, require("../../core/theming").withTheme)(CheckboxIOS);


exports.default = _default;
var CheckboxIOSWithTheme = (0, require("../../core/theming").withTheme)(CheckboxIOS);

exports.CheckboxIOS = CheckboxIOSWithTheme;