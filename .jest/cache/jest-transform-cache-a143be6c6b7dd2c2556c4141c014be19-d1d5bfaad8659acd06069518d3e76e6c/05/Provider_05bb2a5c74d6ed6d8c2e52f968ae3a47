5de56361854278e36b6c00dc7686480e
"use strict";function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) {symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});}keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {require("@babel/runtime/helpers/defineProperty")(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}

Object.defineProperty(exports, "__esModule", {
  value: true });

exports.default = void 0;

var React = _interopRequireWildcard(require("react"));







var _MaterialCommunityIcon = _interopRequireDefault(require("../components/MaterialCommunityIcon"));

var _PortalHost = _interopRequireDefault(require("../components/Portal/PortalHost"));

var _DefaultTheme = _interopRequireDefault(require("../styles/DefaultTheme"));

var _DarkTheme = _interopRequireDefault(require("../styles/DarkTheme"));

function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

function _getRequireWildcardCache() {if (typeof WeakMap !== "function") return null;var cache = new WeakMap();_getRequireWildcardCache = function _getRequireWildcardCache() {return cache;};return cache;}

function _interopRequireWildcard(obj) {if (obj && obj.__esModule) {return obj;}if (obj === null || typeof obj !== "object" && typeof obj !== "function") {return { default: obj };}var cache = _getRequireWildcardCache();if (cache && cache.has(obj)) {return cache.get(obj);}var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {if (Object.prototype.hasOwnProperty.call(obj, key)) {var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}newObj.default = obj;if (cache) {cache.set(obj, newObj);}return newObj;}

var Provider = function Provider(_ref)
{var props = require("@babel/runtime/helpers/extends")({}, _ref);
  var colorSchemeName = !props.theme && (require("react-native").Appearance === null || require("react-native").Appearance === void 0 ? void 0 : require("react-native").Appearance.getColorScheme()) || 'light';
  var _React$useState = React.useState(false),_React$useState2 = require("@babel/runtime/helpers/slicedToArray")(_React$useState, 2),reduceMotionEnabled = _React$useState2[0],setReduceMotionEnabled = _React$useState2[1];
  var _React$useState3 = React.useState(colorSchemeName),_React$useState4 = require("@babel/runtime/helpers/slicedToArray")(_React$useState3, 2),colorScheme = _React$useState4[0],setColorScheme = _React$useState4[1];

  var handleAppearanceChange = function handleAppearanceChange(preferences) {
    var
    colorScheme =
    preferences.colorScheme;
    setColorScheme(colorScheme);
  };

  React.useEffect(function () {
    if (!props.theme) {
      require("react-native").AccessibilityInfo.addEventListener('reduceMotionChanged', setReduceMotionEnabled);
    }

    return function () {
      if (!props.theme) {
        require("react-native").AccessibilityInfo.removeEventListener('reduceMotionChanged', setReduceMotionEnabled);
      }
    };
  }, [props.theme]);
  React.useEffect(function () {
    if (!props.theme) require("react-native").Appearance === null || require("react-native").Appearance === void 0 ? void 0 : require("react-native").Appearance.addChangeListener(handleAppearanceChange);
    return function () {
      if (!props.theme) require("react-native").Appearance === null || require("react-native").Appearance === void 0 ? void 0 : require("react-native").Appearance.removeChangeListener(handleAppearanceChange);
    };
  }, [props.theme]);

  var getTheme = function getTheme() {
    var
    providedTheme =
    props.theme;

    if (providedTheme) {
      return providedTheme;
    } else {
      var theme = colorScheme === 'dark' ? _DarkTheme.default : _DefaultTheme.default;
      return _objectSpread(_objectSpread({}, theme), {}, {
        animation: _objectSpread(_objectSpread({}, theme.animation), {}, {
          scale: reduceMotionEnabled ? 0 : 1 }) });


    }
  };

  var
  children =

  props.children,settings = props.settings;
  return React.createElement(_PortalHost.default, null, React.createElement(require("./settings").Provider, {
    value: settings || {
      icon: _MaterialCommunityIcon.default } },

  React.createElement(require("./theming").ThemeProvider, {
    theme: getTheme() },
  children)));
};

var _default = Provider;
exports.default = _default;