{"version":3,"sources":["C:\\Users\\ashee\\Documents\\Javascript\\React\\React Native\\suduko\\components\\DifficultySelection.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","sourcesContent":["import React,{ useEffect } from \"react\";\r\nimport { Button, Platform, Pressable, StyleSheet, Text, View } from \"react-native\";\r\nimport { RouteComponentProps } from 'react-router-native';\r\nimport SubBox from \"./SubBox\";\r\nimport { useSelector, useDispatch } from \"react-redux\"; \r\nimport { bindActionCreators } from \"redux\";\r\nimport * as actionCreators from '../src/state/index'; \r\nimport {RootState} from '../src/state/reducers/index';\r\nimport {generateBoard,initBoard} from '../src/state/boardController';\r\n\r\nimport {Colors,Timer,GameState} from '../types';\r\nexport default function DifficultySelection({history}:RouteComponentProps) {\r\n  \r\n  //Redux state.\r\n  const {\r\n    board,\r\n    difficulty,\r\n    timer,\r\n    colors,\r\n    gameState\r\n  } = useSelector((state:RootState) => state);\r\n  const {isCompleted,gameExists} = gameState;\r\n  //Redux dispatcher.\r\n  const dispatch = useDispatch();\r\n  //Redux actions.\r\n  const { \r\n    setBoard, \r\n    setDifficulty, \r\n    setTimer, \r\n    defaultColors, \r\n    defaultNotes, \r\n    setGameState\r\n  } = bindActionCreators(actionCreators,dispatch);\r\n  \r\n  //Handle selection of difficulty.\r\n    //Set difficulty level based on selection.\r\n    //Route to new game.\r\n  const handlePress = (val:number):void =>{\r\n    //Set difficulty state.\r\n    setDifficulty(val);\r\n    //Initialize game board.\r\n    generateBoard(board);\r\n    const gameBoard:(number|null)[][] = initBoard(board.map((arr:(number|null)[]) => [...arr]),val);\r\n    setBoard(gameBoard);\r\n    //Revert other properties of state to default.\r\n      //Default timer state prop.\r\n    const newTimerState:Timer = {'time':0,'decrementor':1};\r\n    setTimer(newTimerState);\r\n      //Default colors state prop.\r\n    defaultColors();\r\n      //Default notes state prop.\r\n    defaultNotes();\r\n      //Set gameExists index of gameState prop to true to indicate that\r\n      //a current game exists.\r\n    setGameState({'isCompleted':false,'gameExists':true});\r\n    //Route to board display\r\n    history.push('/GameDisplay');\r\n  }\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.topBar}>\r\n        <Pressable\r\n          style = {styles.mainMenuButton}\r\n          onPress = {() => history.push('/')}\r\n        >\r\n          <Text style = {styles.text}>\r\n            Main Menu\r\n          </Text>\r\n        </Pressable>\r\n      </View>\r\n      <Pressable\r\n        style = {styles.button}\r\n        onPress = {()=> handlePress(0)}\r\n        testID = 'easyButton'\r\n      >\r\n        <Text style = {styles.text}>Easy</Text>\r\n      </Pressable>\r\n      <Pressable\r\n        style = {styles.button}\r\n        onPress = {()=> handlePress(1)}\r\n        testID = 'mediumButton'\r\n      >\r\n        <Text style = {styles.text}>Medium</Text>\r\n      </Pressable>\r\n      <Pressable\r\n        style = {styles.button}\r\n        onPress = {()=> handlePress(2)}\r\n        testID = 'hardButton'\r\n      >\r\n        <Text style = {styles.text}>Hard</Text>\r\n      </Pressable>\r\n      <Pressable\r\n        style = {styles.button}\r\n        onPress = {()=> handlePress(3)}\r\n        testID = 'extremeButton'\r\n      >\r\n        <Text style = {styles.text}>Extreme</Text>\r\n      </Pressable>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex:1,\r\n    alignItems: 'center',\r\n    justifyContent:'center'\r\n  },\r\n  button: {\r\n    alignItems: 'center',\r\n    marginTop:30,\r\n    justifyContent: 'center',\r\n    paddingVertical: 12,\r\n    width:150,\r\n    borderRadius: 4,\r\n    ...Platform.select({\r\n      ios:{\r\n        elevation:3,\r\n      },\r\n      android:{\r\n        elevation:20,\r\n      }\r\n    }),\r\n    backgroundColor: '#1E90FF',\r\n    shadowColor:'rgba(0,0,0,0.35)',\r\n    shadowOffset:{width:-2,height:-2},\r\n    shadowOpacity:0.75,\r\n    shadowRadius:2\r\n  },\r\n  mainMenuButton: {\r\n    alignItems: 'center',\r\n    marginTop:30,\r\n    justifyContent: 'center',\r\n    paddingVertical: 12,\r\n    width:125,\r\n    borderRadius: 4,\r\n    ...Platform.select({\r\n      ios:{\r\n        elevation:3,\r\n      },\r\n      android:{\r\n        elevation:20,\r\n      }\r\n    }),\r\n    backgroundColor: '#1E90FF',\r\n    shadowColor:'rgba(0,0,0,0.35)',\r\n    shadowOffset:{width:-2,height:-2},\r\n    shadowOpacity:0.75,\r\n    shadowRadius:2\r\n  },\r\n  text:{\r\n    fontSize: 16,\r\n    lineHeight: 21,\r\n    fontWeight: 'bold',\r\n    letterSpacing: 0.25,\r\n    color: 'white',\r\n  },\r\n  topBar: {\r\n    position:'absolute',\r\n    top:50,\r\n    left:0,\r\n    flexDirection:'row',\r\n    justifyContent:'space-evenly',\r\n  },\r\n});"]}