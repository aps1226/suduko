17097636f59eec9232ad5648ad5a1722
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var DeprecatedColorPropType = require("./DeprecatedColorPropType");

var DeprecatedLayoutPropTypes = require("./DeprecatedLayoutPropTypes");

var DeprecatedShadowPropTypesIOS = require("./DeprecatedShadowPropTypesIOS");

var DeprecatedTransformPropTypes = require("./DeprecatedTransformPropTypes");

var ReactPropTypes = require('prop-types');

var DeprecatedViewStylePropTypes = _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, DeprecatedLayoutPropTypes), DeprecatedShadowPropTypesIOS), DeprecatedTransformPropTypes), {}, {
  backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),
  backgroundColor: DeprecatedColorPropType,
  borderColor: DeprecatedColorPropType,
  borderTopColor: DeprecatedColorPropType,
  borderRightColor: DeprecatedColorPropType,
  borderBottomColor: DeprecatedColorPropType,
  borderLeftColor: DeprecatedColorPropType,
  borderStartColor: DeprecatedColorPropType,
  borderEndColor: DeprecatedColorPropType,
  borderRadius: ReactPropTypes.number,
  borderTopLeftRadius: ReactPropTypes.number,
  borderTopRightRadius: ReactPropTypes.number,
  borderTopStartRadius: ReactPropTypes.number,
  borderTopEndRadius: ReactPropTypes.number,
  borderBottomLeftRadius: ReactPropTypes.number,
  borderBottomRightRadius: ReactPropTypes.number,
  borderBottomStartRadius: ReactPropTypes.number,
  borderBottomEndRadius: ReactPropTypes.number,
  borderStyle: ReactPropTypes.oneOf(['solid', 'dotted', 'dashed']),
  borderWidth: ReactPropTypes.number,
  borderTopWidth: ReactPropTypes.number,
  borderRightWidth: ReactPropTypes.number,
  borderBottomWidth: ReactPropTypes.number,
  borderLeftWidth: ReactPropTypes.number,
  opacity: ReactPropTypes.number,
  elevation: ReactPropTypes.number
});

module.exports = DeprecatedViewStylePropTypes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRlcHJlY2F0ZWRWaWV3U3R5bGVQcm9wVHlwZXMuanMiXSwibmFtZXMiOlsiRGVwcmVjYXRlZENvbG9yUHJvcFR5cGUiLCJyZXF1aXJlIiwiRGVwcmVjYXRlZExheW91dFByb3BUeXBlcyIsIkRlcHJlY2F0ZWRTaGFkb3dQcm9wVHlwZXNJT1MiLCJEZXByZWNhdGVkVHJhbnNmb3JtUHJvcFR5cGVzIiwiUmVhY3RQcm9wVHlwZXMiLCJEZXByZWNhdGVkVmlld1N0eWxlUHJvcFR5cGVzIiwiYmFja2ZhY2VWaXNpYmlsaXR5Iiwib25lT2YiLCJiYWNrZ3JvdW5kQ29sb3IiLCJib3JkZXJDb2xvciIsImJvcmRlclRvcENvbG9yIiwiYm9yZGVyUmlnaHRDb2xvciIsImJvcmRlckJvdHRvbUNvbG9yIiwiYm9yZGVyTGVmdENvbG9yIiwiYm9yZGVyU3RhcnRDb2xvciIsImJvcmRlckVuZENvbG9yIiwiYm9yZGVyUmFkaXVzIiwibnVtYmVyIiwiYm9yZGVyVG9wTGVmdFJhZGl1cyIsImJvcmRlclRvcFJpZ2h0UmFkaXVzIiwiYm9yZGVyVG9wU3RhcnRSYWRpdXMiLCJib3JkZXJUb3BFbmRSYWRpdXMiLCJib3JkZXJCb3R0b21MZWZ0UmFkaXVzIiwiYm9yZGVyQm90dG9tUmlnaHRSYWRpdXMiLCJib3JkZXJCb3R0b21TdGFydFJhZGl1cyIsImJvcmRlckJvdHRvbUVuZFJhZGl1cyIsImJvcmRlclN0eWxlIiwiYm9yZGVyV2lkdGgiLCJib3JkZXJUb3BXaWR0aCIsImJvcmRlclJpZ2h0V2lkdGgiLCJib3JkZXJCb3R0b21XaWR0aCIsImJvcmRlckxlZnRXaWR0aCIsIm9wYWNpdHkiLCJlbGV2YXRpb24iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFVQTs7Ozs7Ozs7OztBQUVBLElBQU1BLHVCQUF1QixHQUFHQyxPQUFPLDZCQUF2Qzs7QUFDQSxJQUFNQyx5QkFBeUIsR0FBR0QsT0FBTywrQkFBekM7O0FBQ0EsSUFBTUUsNEJBQTRCLEdBQUdGLE9BQU8sa0NBQTVDOztBQUNBLElBQU1HLDRCQUE0QixHQUFHSCxPQUFPLGtDQUE1Qzs7QUFDQSxJQUFNSSxjQUFjLEdBQUdKLE9BQU8sQ0FBQyxZQUFELENBQTlCOztBQUtBLElBQU1LLDRCQUE0QiwrREFDN0JKLHlCQUQ2QixHQUU3QkMsNEJBRjZCLEdBRzdCQyw0QkFINkI7QUFJaENHLEVBQUFBLGtCQUFrQixFQUFHRixjQUFjLENBQUNHLEtBQWYsQ0FBcUIsQ0FDeEMsU0FEd0MsRUFFeEMsUUFGd0MsQ0FBckIsQ0FKVztBQVFoQ0MsRUFBQUEsZUFBZSxFQUFFVCx1QkFSZTtBQVNoQ1UsRUFBQUEsV0FBVyxFQUFFVix1QkFUbUI7QUFVaENXLEVBQUFBLGNBQWMsRUFBRVgsdUJBVmdCO0FBV2hDWSxFQUFBQSxnQkFBZ0IsRUFBRVosdUJBWGM7QUFZaENhLEVBQUFBLGlCQUFpQixFQUFFYix1QkFaYTtBQWFoQ2MsRUFBQUEsZUFBZSxFQUFFZCx1QkFiZTtBQWNoQ2UsRUFBQUEsZ0JBQWdCLEVBQUVmLHVCQWRjO0FBZWhDZ0IsRUFBQUEsY0FBYyxFQUFFaEIsdUJBZmdCO0FBZ0JoQ2lCLEVBQUFBLFlBQVksRUFBRVosY0FBYyxDQUFDYSxNQWhCRztBQWlCaENDLEVBQUFBLG1CQUFtQixFQUFFZCxjQUFjLENBQUNhLE1BakJKO0FBa0JoQ0UsRUFBQUEsb0JBQW9CLEVBQUVmLGNBQWMsQ0FBQ2EsTUFsQkw7QUFtQmhDRyxFQUFBQSxvQkFBb0IsRUFBRWhCLGNBQWMsQ0FBQ2EsTUFuQkw7QUFvQmhDSSxFQUFBQSxrQkFBa0IsRUFBRWpCLGNBQWMsQ0FBQ2EsTUFwQkg7QUFxQmhDSyxFQUFBQSxzQkFBc0IsRUFBRWxCLGNBQWMsQ0FBQ2EsTUFyQlA7QUFzQmhDTSxFQUFBQSx1QkFBdUIsRUFBRW5CLGNBQWMsQ0FBQ2EsTUF0QlI7QUF1QmhDTyxFQUFBQSx1QkFBdUIsRUFBRXBCLGNBQWMsQ0FBQ2EsTUF2QlI7QUF3QmhDUSxFQUFBQSxxQkFBcUIsRUFBRXJCLGNBQWMsQ0FBQ2EsTUF4Qk47QUF5QmhDUyxFQUFBQSxXQUFXLEVBQUd0QixjQUFjLENBQUNHLEtBQWYsQ0FBcUIsQ0FDakMsT0FEaUMsRUFFakMsUUFGaUMsRUFHakMsUUFIaUMsQ0FBckIsQ0F6QmtCO0FBOEJoQ29CLEVBQUFBLFdBQVcsRUFBRXZCLGNBQWMsQ0FBQ2EsTUE5Qkk7QUErQmhDVyxFQUFBQSxjQUFjLEVBQUV4QixjQUFjLENBQUNhLE1BL0JDO0FBZ0NoQ1ksRUFBQUEsZ0JBQWdCLEVBQUV6QixjQUFjLENBQUNhLE1BaENEO0FBaUNoQ2EsRUFBQUEsaUJBQWlCLEVBQUUxQixjQUFjLENBQUNhLE1BakNGO0FBa0NoQ2MsRUFBQUEsZUFBZSxFQUFFM0IsY0FBYyxDQUFDYSxNQWxDQTtBQW1DaENlLEVBQUFBLE9BQU8sRUFBRTVCLGNBQWMsQ0FBQ2EsTUFuQ1E7QUEyQ2hDZ0IsRUFBQUEsU0FBUyxFQUFFN0IsY0FBYyxDQUFDYTtBQTNDTSxFQUFsQzs7QUE4Q0FpQixNQUFNLENBQUNDLE9BQVAsR0FBaUI5Qiw0QkFBakIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIEBmbG93XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBEZXByZWNhdGVkQ29sb3JQcm9wVHlwZSA9IHJlcXVpcmUoJy4vRGVwcmVjYXRlZENvbG9yUHJvcFR5cGUnKTtcbmNvbnN0IERlcHJlY2F0ZWRMYXlvdXRQcm9wVHlwZXMgPSByZXF1aXJlKCcuL0RlcHJlY2F0ZWRMYXlvdXRQcm9wVHlwZXMnKTtcbmNvbnN0IERlcHJlY2F0ZWRTaGFkb3dQcm9wVHlwZXNJT1MgPSByZXF1aXJlKCcuL0RlcHJlY2F0ZWRTaGFkb3dQcm9wVHlwZXNJT1MnKTtcbmNvbnN0IERlcHJlY2F0ZWRUcmFuc2Zvcm1Qcm9wVHlwZXMgPSByZXF1aXJlKCcuL0RlcHJlY2F0ZWRUcmFuc2Zvcm1Qcm9wVHlwZXMnKTtcbmNvbnN0IFJlYWN0UHJvcFR5cGVzID0gcmVxdWlyZSgncHJvcC10eXBlcycpO1xuXG4vKipcbiAqIFdhcm5pbmc6IFNvbWUgb2YgdGhlc2UgcHJvcGVydGllcyBtYXkgbm90IGJlIHN1cHBvcnRlZCBpbiBhbGwgcmVsZWFzZXMuXG4gKi9cbmNvbnN0IERlcHJlY2F0ZWRWaWV3U3R5bGVQcm9wVHlwZXMgPSB7XG4gIC4uLkRlcHJlY2F0ZWRMYXlvdXRQcm9wVHlwZXMsXG4gIC4uLkRlcHJlY2F0ZWRTaGFkb3dQcm9wVHlwZXNJT1MsXG4gIC4uLkRlcHJlY2F0ZWRUcmFuc2Zvcm1Qcm9wVHlwZXMsXG4gIGJhY2tmYWNlVmlzaWJpbGl0eTogKFJlYWN0UHJvcFR5cGVzLm9uZU9mKFtcbiAgICAndmlzaWJsZScsXG4gICAgJ2hpZGRlbicsXG4gIF0pOiBSZWFjdCRQcm9wVHlwZSRQcmltaXRpdmU8J3Zpc2libGUnIHwgJ2hpZGRlbic+KSxcbiAgYmFja2dyb3VuZENvbG9yOiBEZXByZWNhdGVkQ29sb3JQcm9wVHlwZSxcbiAgYm9yZGVyQ29sb3I6IERlcHJlY2F0ZWRDb2xvclByb3BUeXBlLFxuICBib3JkZXJUb3BDb2xvcjogRGVwcmVjYXRlZENvbG9yUHJvcFR5cGUsXG4gIGJvcmRlclJpZ2h0Q29sb3I6IERlcHJlY2F0ZWRDb2xvclByb3BUeXBlLFxuICBib3JkZXJCb3R0b21Db2xvcjogRGVwcmVjYXRlZENvbG9yUHJvcFR5cGUsXG4gIGJvcmRlckxlZnRDb2xvcjogRGVwcmVjYXRlZENvbG9yUHJvcFR5cGUsXG4gIGJvcmRlclN0YXJ0Q29sb3I6IERlcHJlY2F0ZWRDb2xvclByb3BUeXBlLFxuICBib3JkZXJFbmRDb2xvcjogRGVwcmVjYXRlZENvbG9yUHJvcFR5cGUsXG4gIGJvcmRlclJhZGl1czogUmVhY3RQcm9wVHlwZXMubnVtYmVyLFxuICBib3JkZXJUb3BMZWZ0UmFkaXVzOiBSZWFjdFByb3BUeXBlcy5udW1iZXIsXG4gIGJvcmRlclRvcFJpZ2h0UmFkaXVzOiBSZWFjdFByb3BUeXBlcy5udW1iZXIsXG4gIGJvcmRlclRvcFN0YXJ0UmFkaXVzOiBSZWFjdFByb3BUeXBlcy5udW1iZXIsXG4gIGJvcmRlclRvcEVuZFJhZGl1czogUmVhY3RQcm9wVHlwZXMubnVtYmVyLFxuICBib3JkZXJCb3R0b21MZWZ0UmFkaXVzOiBSZWFjdFByb3BUeXBlcy5udW1iZXIsXG4gIGJvcmRlckJvdHRvbVJpZ2h0UmFkaXVzOiBSZWFjdFByb3BUeXBlcy5udW1iZXIsXG4gIGJvcmRlckJvdHRvbVN0YXJ0UmFkaXVzOiBSZWFjdFByb3BUeXBlcy5udW1iZXIsXG4gIGJvcmRlckJvdHRvbUVuZFJhZGl1czogUmVhY3RQcm9wVHlwZXMubnVtYmVyLFxuICBib3JkZXJTdHlsZTogKFJlYWN0UHJvcFR5cGVzLm9uZU9mKFtcbiAgICAnc29saWQnLFxuICAgICdkb3R0ZWQnLFxuICAgICdkYXNoZWQnLFxuICBdKTogUmVhY3QkUHJvcFR5cGUkUHJpbWl0aXZlPCdzb2xpZCcgfCAnZG90dGVkJyB8ICdkYXNoZWQnPiksXG4gIGJvcmRlcldpZHRoOiBSZWFjdFByb3BUeXBlcy5udW1iZXIsXG4gIGJvcmRlclRvcFdpZHRoOiBSZWFjdFByb3BUeXBlcy5udW1iZXIsXG4gIGJvcmRlclJpZ2h0V2lkdGg6IFJlYWN0UHJvcFR5cGVzLm51bWJlcixcbiAgYm9yZGVyQm90dG9tV2lkdGg6IFJlYWN0UHJvcFR5cGVzLm51bWJlcixcbiAgYm9yZGVyTGVmdFdpZHRoOiBSZWFjdFByb3BUeXBlcy5udW1iZXIsXG4gIG9wYWNpdHk6IFJlYWN0UHJvcFR5cGVzLm51bWJlcixcbiAgLyoqXG4gICAqIChBbmRyb2lkLW9ubHkpIFNldHMgdGhlIGVsZXZhdGlvbiBvZiBhIHZpZXcsIHVzaW5nIEFuZHJvaWQncyB1bmRlcmx5aW5nXG4gICAqIFtlbGV2YXRpb24gQVBJXShodHRwczovL2RldmVsb3Blci5hbmRyb2lkLmNvbS90cmFpbmluZy9tYXRlcmlhbC9zaGFkb3dzLWNsaXBwaW5nLmh0bWwjRWxldmF0aW9uKS5cbiAgICogVGhpcyBhZGRzIGEgZHJvcCBzaGFkb3cgdG8gdGhlIGl0ZW0gYW5kIGFmZmVjdHMgei1vcmRlciBmb3Igb3ZlcmxhcHBpbmcgdmlld3MuXG4gICAqIE9ubHkgc3VwcG9ydGVkIG9uIEFuZHJvaWQgNS4wKywgaGFzIG5vIGVmZmVjdCBvbiBlYXJsaWVyIHZlcnNpb25zLlxuICAgKiBAcGxhdGZvcm0gYW5kcm9pZFxuICAgKi9cbiAgZWxldmF0aW9uOiBSZWFjdFByb3BUeXBlcy5udW1iZXIsXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IERlcHJlY2F0ZWRWaWV3U3R5bGVQcm9wVHlwZXM7XG4iXX0=