{"version":3,"sources":["C:\\Users\\ashee\\Documents\\Javascript\\React\\React Native\\suduko\\src\\__tests__\\Component Tests\\GameDisplay.test.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Text,View } from 'react-native';\r\nimport renderWithRedux from './renderWithRedux';\r\nimport {SET_BOARD} from '../../state/actions/types'\r\nimport { createMemoryHistory, createLocation } from 'history';\r\nimport { match } from 'react-router';\r\nimport { act, cleanup, fireEvent, render, waitFor} from '@testing-library/react-native';\r\nimport renderer from 'react-test-renderer';\r\nimport {Colors,GameState} from '../../../types';\r\nimport {RootState} from '../../state/reducers/index';\r\n\r\nimport GameDisplay from '../../../components/GameDisplay';\r\n\r\n//Mock props for routing.\r\nconst history = createMemoryHistory();\r\nconst path = `/route/:id`;\r\nconst match: match<{ id: string }> = {\r\n    isExact: false,\r\n    path,\r\n    url: path.replace(':id', '1'),\r\n    params: { id: '1' }\r\n};\r\nconst location = createLocation(match.url);\r\n\r\n//Hard coded state properties.\r\nconst board: (number | null)[][] =[ \r\n  [ 3, 1, 6, 5, 7, 8, 4, 9, 2 ],\r\n  [ 5, 2, 9, 1, 3, 4, 7, 6, 8 ],\r\n  [ 4, 8, 7, 6, 2, 9, 5, 3, 1 ],\r\n  [ 2, 6, 3, 4, 1, 5, 9, 8, 7 ],\r\n  [ 9, 7, 4, 8, 6, null, 1, 2, 5 ],\r\n  [ 8, 5, 1, 7, 9, 2, 6, 4, 3 ],\r\n  [ 1, 3, 8, 9, 4, 7, 2, null, 6 ],\r\n  [ 6, 9, 2, 3, 5, 1, 8, 7, 4 ],\r\n  [ 7, 4, 5, 2, 8, 6, 3, 1, 9] \r\n];\r\n\r\nconst colors:Colors = {\r\n  1:['transparent','black'],\r\n  2:['transparent','black'],\r\n  3:['transparent','black'],\r\n  4:['transparent','black'],\r\n  5:['transparent','black'],\r\n  6:['transparent','black'],\r\n  7:['transparent','black'],\r\n  8:['transparent','black'],\r\n  9:['transparent','black'],\r\n  'Selection_1':'#3297FD',\r\n  'Selection_2':'transparent',\r\n  'Selection_3':'transparent',\r\n  'Selection_4':'transparent',\r\n  'Selection_5':'transparent',\r\n  'Selection_6':'transparent',\r\n  'Selection_7':'transparent',\r\n  'Selection_8':'transparent',\r\n  'Selection_9':'transparent',\r\n  'gradient': [ \r\n    \"#a37e5c\", \"#b89372\",\"#c8a484\",\"#dcb999\", \"#d3af8f\",\"#d9b696\",\"#ceaa89\",\"#d2ae8d\",\"#b38e6d\",\"#aa8563\",\r\n    \"#a37e5c\", \"#b89372\",\"#c8a484\",\"#dcb999\", \"#d3af8f\",\"#d9b696\",\"#ceaa89\",\"#d2ae8d\",\"#b38e6d\",\"#aa8563\",\r\n    \"#a37e5c\", \"#b89372\",\"#c8a484\",\"#dcb999\", \"#d3af8f\",\"#d9b696\",\"#ceaa89\",\"#d2ae8d\",\"#b38e6d\",\"#aa8563\",\r\n    \"#a37e5c\", \"#b89372\",\"#c8a484\",\"#dcb999\", \"#d3af8f\",\"#d9b696\",\"#ceaa89\",\"#d2ae8d\",\"#b38e6d\",\"#aa8563\",\r\n    \"#a37e5c\", \"#b89372\",\"#c8a484\",\"#dcb999\", \"#d3af8f\",\"#d9b696\",\"#ceaa89\",\"#d2ae8d\",\"#b38e6d\",\"#aa8563\"\r\n  ]\r\n}\r\n\r\n//GameDisplay component test.\r\ndescribe('GameDisplay',() =>{\r\n\r\n  //Mock store object for state management.\r\n    //Hard code properties that are initialized randomly for\r\n    //snapshot comparison.\r\n  const mockStore:RootState = {\r\n    'board':board,\r\n    'colors':colors\r\n  };\r\n\r\n  //Mock switch component.\r\n  jest.mock('react-native/Libraries/Components/Switch/Switch', () => {\r\n    const mockComponent = require('react-native/jest/mockComponent')\r\n    return mockComponent('react-native/Libraries/Components/Switch/Switch')\r\n  })\r\n\r\n  //Render GameDisplay component with routing and redux.\r\n  let gameDisplayComponent:any;\r\n  beforeEach(async() =>{\r\n    await waitFor(() =>{\r\n      gameDisplayComponent = renderWithRedux(\r\n        <GameDisplay\r\n          history={history}\r\n          location={location}\r\n          match={match}\r\n        />,\r\n        {\r\n          initialState:mockStore\r\n        }\r\n      );\r\n    })\r\n  })\r\n\r\n  //Cleanup after each test.\r\n  afterEach(cleanup);\r\n\r\n  //Component renders without crashing.\r\n  it('renders without crashing',async()=>{\r\n    expect(gameDisplayComponent.toJSON()).toMatchSnapshot();\r\n  })\r\n\r\n  //If board is not complete, winner animation should not be rendered.\r\n  it(`should not render the Winner component if the board is not complete`, async ()=>{\r\n    //Simulate a value being inputted on the board.\r\n    const {getByTestId,store,queryByTestId} = gameDisplayComponent;\r\n    const selectionSquare5 = getByTestId('selectionSquare_5');\r\n    const gridSquare67 = getByTestId('gridSquare_67');\r\n    const winnerAnimation = queryByTestId('winnerAnimation');\r\n    //Select selection square for 5 value.\r\n    fireEvent.press(selectionSquare5);\r\n    //Input a 5 for the grid square at location row 6, column 7.\r\n    fireEvent.press(gridSquare67);\r\n    //Winner animation should not be found.\r\n    expect(winnerAnimation).toEqual(null);\r\n  })\r\n\r\n  //If board is complete, winner animation should be rendered.\r\n  it(`should render the Winner component if the board is complete`, async ()=>{\r\n    //Simulate a value being inputted on the board.\r\n    const {getByTestId,store,queryByTestId} = gameDisplayComponent;\r\n    const selectionSquare5 = getByTestId('selectionSquare_5');\r\n    const selectionSquare3 = getByTestId('selectionSquare_3');\r\n    const gridSquare67 = getByTestId('gridSquare_67');\r\n    const gridSquare45 = getByTestId('gridSquare_45');\r\n    //Select selection square for 5 value.\r\n    fireEvent.press(selectionSquare5);\r\n    //Input a 5 for the grid square at location row 6, column 7.\r\n    fireEvent.press(gridSquare67);\r\n    //Select selection square for 3 value.\r\n    fireEvent.press(selectionSquare3);\r\n    //Input a 3 for the grid square at location row 4, column 5.\r\n    fireEvent.press(gridSquare45);\r\n    //Winner animation should not be found.\r\n    await waitFor(()=>{\r\n      console.log(queryByTestId('winnerAnimation'))\r\n    })\r\n  })\r\n})"]}