5f14e14f2805a65e875c7862dc55b736
"use strict";function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) {symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});}keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {require("@babel/runtime/helpers/defineProperty")(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}

Object.defineProperty(exports, "__esModule", {
  value: true });

exports.default = configureFonts;



var fontConfig = {
  web: {
    regular: {
      fontFamily: 'Roboto, "Helvetica Neue", Helvetica, Arial, sans-serif',
      fontWeight: '400' },

    medium: {
      fontFamily: 'Roboto, "Helvetica Neue", Helvetica, Arial, sans-serif',
      fontWeight: '500' },

    light: {
      fontFamily: 'Roboto, "Helvetica Neue", Helvetica, Arial, sans-serif',
      fontWeight: '300' },

    thin: {
      fontFamily: 'Roboto, "Helvetica Neue", Helvetica, Arial, sans-serif',
      fontWeight: '100' } },


  ios: {
    regular: {
      fontFamily: 'System',
      fontWeight: '400' },

    medium: {
      fontFamily: 'System',
      fontWeight: '500' },

    light: {
      fontFamily: 'System',
      fontWeight: '300' },

    thin: {
      fontFamily: 'System',
      fontWeight: '100' } },


  default: {
    regular: {
      fontFamily: 'sans-serif',
      fontWeight: 'normal' },

    medium: {
      fontFamily: 'sans-serif-medium',
      fontWeight: 'normal' },

    light: {
      fontFamily: 'sans-serif-light',
      fontWeight: 'normal' },

    thin: {
      fontFamily: 'sans-serif-thin',
      fontWeight: 'normal' } } };




function configureFonts(config) {
  var fonts = require("react-native").Platform.select(_objectSpread(_objectSpread({}, fontConfig),
  config));


  return fonts;
}