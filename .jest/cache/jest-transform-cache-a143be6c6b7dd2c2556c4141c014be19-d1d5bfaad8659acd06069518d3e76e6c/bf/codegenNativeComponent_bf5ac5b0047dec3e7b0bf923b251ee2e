829ddbc7b7b3ca8bb60817d0fc36c0fa
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _requireNativeComponent = _interopRequireDefault(require("../../Libraries/ReactNative/requireNativeComponent"));

var _UIManager = _interopRequireDefault(require("../ReactNative/UIManager"));

function codegenNativeComponent(componentName, options) {
  var componentNameInUse = options && options.paperComponentName ? options.paperComponentName : componentName;

  if (options != null && options.paperComponentNameDeprecated != null) {
    if (_UIManager.default.getViewManagerConfig(componentName)) {
      componentNameInUse = componentName;
    } else if (options.paperComponentNameDeprecated != null && _UIManager.default.getViewManagerConfig(options.paperComponentNameDeprecated)) {
      componentNameInUse = options.paperComponentNameDeprecated;
    } else {
      throw new Error("Failed to find native component for either " + componentName + " or " + (options.paperComponentNameDeprecated || '(unknown)'));
    }
  }

  return (0, _requireNativeComponent.default)(componentNameInUse);
}

var _default = codegenNativeComponent;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvZGVnZW5OYXRpdmVDb21wb25lbnQuanMiXSwibmFtZXMiOlsiY29kZWdlbk5hdGl2ZUNvbXBvbmVudCIsImNvbXBvbmVudE5hbWUiLCJvcHRpb25zIiwiY29tcG9uZW50TmFtZUluVXNlIiwicGFwZXJDb21wb25lbnROYW1lIiwicGFwZXJDb21wb25lbnROYW1lRGVwcmVjYXRlZCIsIlVJTWFuYWdlciIsImdldFZpZXdNYW5hZ2VyQ29uZmlnIiwiRXJyb3IiXSwibWFwcGluZ3MiOiJBQVlBOzs7Ozs7Ozs7QUFFQTs7QUFFQTs7QUFZQSxTQUFTQSxzQkFBVCxDQUNFQyxhQURGLEVBRUVDLE9BRkYsRUFHOEI7QUFDNUIsTUFBSUMsa0JBQWtCLEdBQ3BCRCxPQUFPLElBQUlBLE9BQU8sQ0FBQ0Usa0JBQW5CLEdBQ0lGLE9BQU8sQ0FBQ0Usa0JBRFosR0FFSUgsYUFITjs7QUFLQSxNQUFJQyxPQUFPLElBQUksSUFBWCxJQUFtQkEsT0FBTyxDQUFDRyw0QkFBUixJQUF3QyxJQUEvRCxFQUFxRTtBQUNuRSxRQUFJQyxtQkFBVUMsb0JBQVYsQ0FBK0JOLGFBQS9CLENBQUosRUFBbUQ7QUFDakRFLE1BQUFBLGtCQUFrQixHQUFHRixhQUFyQjtBQUNELEtBRkQsTUFFTyxJQUNMQyxPQUFPLENBQUNHLDRCQUFSLElBQXdDLElBQXhDLElBQ0FDLG1CQUFVQyxvQkFBVixDQUErQkwsT0FBTyxDQUFDRyw0QkFBdkMsQ0FGSyxFQUdMO0FBQ0FGLE1BQUFBLGtCQUFrQixHQUFHRCxPQUFPLENBQUNHLDRCQUE3QjtBQUNELEtBTE0sTUFLQTtBQUNMLFlBQU0sSUFBSUcsS0FBSixpREFDMENQLGFBRDFDLGFBQzhEQyxPQUFPLENBQUNHLDRCQUFSLElBQ2hFLFdBRkUsRUFBTjtBQUlEO0FBQ0Y7O0FBTUQsU0FBUSxxQ0FDTkYsa0JBRE0sQ0FBUjtBQUdEOztlQUVjSCxzQiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogQGZsb3dcbiAqL1xuXG4vLyBUT0RPOiBtb3ZlIHRoaXMgZmlsZSB0byBzaGltcy9SZWFjdE5hdGl2ZSAocmVxdWlyZXMgUmVhY3QgdXBkYXRlIGFuZCBzeW5jKVxuXG4ndXNlIHN0cmljdCc7XG5cbmltcG9ydCByZXF1aXJlTmF0aXZlQ29tcG9uZW50IGZyb20gJy4uLy4uL0xpYnJhcmllcy9SZWFjdE5hdGl2ZS9yZXF1aXJlTmF0aXZlQ29tcG9uZW50JztcbmltcG9ydCB0eXBlIHtIb3N0Q29tcG9uZW50fSBmcm9tICcuLi8uLi9MaWJyYXJpZXMvUmVuZGVyZXIvc2hpbXMvUmVhY3ROYXRpdmVUeXBlcyc7XG5pbXBvcnQgVUlNYW5hZ2VyIGZyb20gJy4uL1JlYWN0TmF0aXZlL1VJTWFuYWdlcic7XG5cbi8vIFRPRE86IGltcG9ydCBmcm9tIENvZGVnZW5TY2hlbWEgb25jZSB3b3Jrc3BhY2VzIGFyZSBlbmFibGVkXG50eXBlIE9wdGlvbnMgPSAkUmVhZE9ubHk8e3xcbiAgaW50ZXJmYWNlT25seT86IGJvb2xlYW4sXG4gIHBhcGVyQ29tcG9uZW50TmFtZT86IHN0cmluZyxcbiAgcGFwZXJDb21wb25lbnROYW1lRGVwcmVjYXRlZD86IHN0cmluZyxcbiAgZXhjbHVkZWRQbGF0Zm9ybT86ICdpT1MnIHwgJ2FuZHJvaWQnLFxufH0+O1xuXG5leHBvcnQgdHlwZSBOYXRpdmVDb21wb25lbnRUeXBlPFQ+ID0gSG9zdENvbXBvbmVudDxUPjtcblxuZnVuY3Rpb24gY29kZWdlbk5hdGl2ZUNvbXBvbmVudDxQcm9wcz4oXG4gIGNvbXBvbmVudE5hbWU6IHN0cmluZyxcbiAgb3B0aW9ucz86IE9wdGlvbnMsXG4pOiBOYXRpdmVDb21wb25lbnRUeXBlPFByb3BzPiB7XG4gIGxldCBjb21wb25lbnROYW1lSW5Vc2UgPVxuICAgIG9wdGlvbnMgJiYgb3B0aW9ucy5wYXBlckNvbXBvbmVudE5hbWVcbiAgICAgID8gb3B0aW9ucy5wYXBlckNvbXBvbmVudE5hbWVcbiAgICAgIDogY29tcG9uZW50TmFtZTtcblxuICBpZiAob3B0aW9ucyAhPSBudWxsICYmIG9wdGlvbnMucGFwZXJDb21wb25lbnROYW1lRGVwcmVjYXRlZCAhPSBudWxsKSB7XG4gICAgaWYgKFVJTWFuYWdlci5nZXRWaWV3TWFuYWdlckNvbmZpZyhjb21wb25lbnROYW1lKSkge1xuICAgICAgY29tcG9uZW50TmFtZUluVXNlID0gY29tcG9uZW50TmFtZTtcbiAgICB9IGVsc2UgaWYgKFxuICAgICAgb3B0aW9ucy5wYXBlckNvbXBvbmVudE5hbWVEZXByZWNhdGVkICE9IG51bGwgJiZcbiAgICAgIFVJTWFuYWdlci5nZXRWaWV3TWFuYWdlckNvbmZpZyhvcHRpb25zLnBhcGVyQ29tcG9uZW50TmFtZURlcHJlY2F0ZWQpXG4gICAgKSB7XG4gICAgICBjb21wb25lbnROYW1lSW5Vc2UgPSBvcHRpb25zLnBhcGVyQ29tcG9uZW50TmFtZURlcHJlY2F0ZWQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgYEZhaWxlZCB0byBmaW5kIG5hdGl2ZSBjb21wb25lbnQgZm9yIGVpdGhlciAke2NvbXBvbmVudE5hbWV9IG9yICR7b3B0aW9ucy5wYXBlckNvbXBvbmVudE5hbWVEZXByZWNhdGVkIHx8XG4gICAgICAgICAgJyh1bmtub3duKSd9YCxcbiAgICAgICk7XG4gICAgfVxuICB9XG5cbiAgLy8gSWYgdGhpcyBmdW5jdGlvbiBpcyBydW4gYXQgcnVudGltZSB0aGVuIHRoYXQgbWVhbnMgdGhlIHZpZXcgY29uZmlncyB3ZXJlIG5vdFxuICAvLyBnZW5lcmF0ZWQgd2l0aCB0aGUgdmlldyBjb25maWcgYmFiZWwgcGx1Z2luLCBzbyB3ZSBuZWVkIHRvIHJlcXVpcmUgdGhlIG5hdGl2ZSBjb21wb25lbnQuXG4gIC8vXG4gIC8vIFRoaXMgd2lsbCBiZSB1c2VmdWwgZHVyaW5nIG1pZ3JhdGlvbiwgYnV0IGV2ZW50dWFsbHkgdGhpcyB3aWxsIGVycm9yLlxuICByZXR1cm4gKHJlcXVpcmVOYXRpdmVDb21wb25lbnQ8UHJvcHM+KFxuICAgIGNvbXBvbmVudE5hbWVJblVzZSxcbiAgKTogSG9zdENvbXBvbmVudDxQcm9wcz4pO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjb2RlZ2VuTmF0aXZlQ29tcG9uZW50O1xuIl19