{"version":3,"sources":["C:\\Users\\ashee\\Documents\\Javascript\\React\\React Native\\suduko\\components\\SelectionSquare.tsx"],"names":[],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;;;AAKc,SAAU,eAAV,CAA0B,KAA1B,EAAsC;AAElD,MAAO,MAAP,GAAiB,KAAjB,CAAO,MAAP;;AAEA,qBAAqC,6BAAY,UAAC,KAAD;AAAA,WAAqB,KAArB;AAAA,GAAZ,CAArC;AAAA,MAAO,SAAP,gBAAO,SAAP;AAAA,MAAiB,MAAjB,gBAAiB,MAAjB;AAAA,MAAwB,SAAxB,gBAAwB,SAAxB;;AACA,MAAM,KAAK,GAAU,MAAM,gBAAc,MAAd,CAA3B;AACA,MAAM,QAAQ,GAAG,8BAAjB;;AACA,4BAAsC,+BAAmB,cAAnB,EAAkC,QAAlC,CAAtC;AAAA,MAAQ,YAAR,uBAAQ,YAAR;AAAA,MAAsB,WAAtB,uBAAsB,WAAtB;;AAEA,MAAM,aAAa,GAAG,SAAhB,aAAgB,GAAU;AAC9B,IAAA,YAAY,CAAC,MAAD,CAAZ;AACA,IAAA,WAAW,gBAAc,MAAd,CAAX;AACD,GAHD;;AAIA,kBAAmB,oBAAS;AAC1B,uBAAkB,OAAO,+CADC;AAE1B,iBAAY,OAAO;AAFO,GAAT,CAAnB;AAAA;AAAA,MAAO,QAAP;;AAKA,MAAG,CAAC,QAAJ,EAAa;AACX,WAAO,eAAA,aAAA,CAAC,uBAAD,EAAW,IAAX,CAAP;AACD,GAFD,MAEK;AACH,QAAI,UAAU,GAAU,SAAS,GAAG,WAAH,GAAe,iBAAhD;AACA,QAAI,SAAS,GAAU,SAAS,GAAG,CAAH,GAAK,CAArC;AACA,WACE,eAAA,aAAA,CAAC,iBAAD,EAAK;AACH,MAAA,KAAK,EAAI;AAAC,QAAA,eAAe,EAAC;AAAjB;AADN,KAAL,EAGG,KAAK,KAAK,aAAV,IAA2B,CAAC,KAA5B,GACC,eAAA,aAAA,CAAC,4BAAD,EAAgB;AACd,MAAA,MAAM,EAAI,OAAO,+BADH;AAEd,MAAA,KAAK,EAAI;AACP,QAAA,KAAK,EAAC;AADC;AAFK,KAAhB,EAME,eAAA,aAAA,CAAC,+BAAD,EAAmB;AACjB,MAAA,OAAO,EAAI;AADM,KAAnB,EAGE,eAAA,aAAA,CAAC,iBAAD,EAAK;AAAC,MAAA,KAAK,EAAE,MAAM,CAAC;AAAf,KAAL,EACI,eAAA,aAAA,CAAC,iBAAD,EAAK;AACH,MAAA,KAAK,EAAI;AACP,QAAA,SAAS,EAAC,SADH;AAEP,QAAA,UAAU,EAAC;AAFJ;AADN,KAAL,EAMG,MANH,CADJ,CAHF,CANF,CADD,GAuBG,eAAA,aAAA,CAAC,+BAAD,EAAmB;AACjB,MAAA,OAAO,EAAI;AADM,KAAnB,EAGE,eAAA,aAAA,CAAC,iBAAD,EAAK;AAAC,MAAA,KAAK,EAAE,MAAM,CAAC;AAAf,KAAL,EACI,eAAA,aAAA,CAAC,iBAAD,EAAK;AACH,MAAA,KAAK,EAAI;AACP,QAAA,SAAS,EAAC,SADH;AAEP,QAAA,UAAU,EAAC;AAFJ;AADN,KAAL,EAMG,MANH,CADJ,CAHF,CA1BN,CADF;AA4CD;AACF;;AAED,IAAM,MAAM,GAAG,wBAAW,MAAX,CAAkB;AAC/B,EAAA,SAAS,EAAE,EADoB;AAG/B,EAAA,UAAU,EAAC;AACT,IAAA,WAAW,EAAC,OADH;AAET,IAAA,KAAK,EAAE,EAFE;AAGT,IAAA,MAAM,EAAE,EAHC;AAIT,IAAA,WAAW,EAAE,CAJJ;AAKT,IAAA,eAAe,EAAE,2BALR;AAMT,IAAA,cAAc,EAAE,2BANP;AAOT,IAAA,gBAAgB,EAAE,qBAPT;AAQT,IAAA,iBAAiB,EAAE,oBARV;AAST,IAAA,UAAU,EAAC;AATF;AAHoB,CAAlB,CAAf","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport { Alert, ImageBackground, StyleSheet, TouchableHighlight, Text, View } from \"react-native\";\r\nimport { useSelector, useDispatch } from \"react-redux\"; \r\nimport { bindActionCreators } from \"redux\";\r\nimport * as actionCreators from '../src/state/index';\r\n\r\nimport AppLoading from 'expo-app-loading';\r\nimport { useFonts } from '@use-expo/font';\r\n\r\nimport {IProps} from '../types';\r\nimport {RootState} from '../src/state/reducers/index';\r\n        \r\nexport default function SelectionSquare(props:IProps) {\r\n  \r\n  const {number} = props;\r\n\r\n  const {selection,colors,entryMode} = useSelector((state:RootState) => state);\r\n  const color:string = colors[`Selection_${number}`];\r\n  const dispatch = useDispatch();\r\n  const { setSelection, changeColor } = bindActionCreators(actionCreators,dispatch);\r\n\r\n  const handleOnPress = ():void =>{\r\n    setSelection(number);\r\n    changeColor(`Selection_${number}`);\r\n  }\r\n  const [isLoaded] = useFonts({\r\n    \"JustAnotherHand\":require(\"../assets/fonts/JustAnotherHand-Regular.ttf\"),\r\n    \"SpaceMono\":require(\"../assets/fonts/SpaceMono-Regular.ttf\")\r\n  })\r\n  \r\n  if(!isLoaded){\r\n    return(<AppLoading/>);\r\n  }else{\r\n    let fontFamily:string = entryMode ? \"SpaceMono\":\"JustAnotherHand\";\r\n    let marginTop:number = entryMode ? 0:5;\r\n    return (\r\n      <View\r\n        style = {{backgroundColor:color}}\r\n      >\r\n        {color === 'transparent' || !color ?\r\n          <ImageBackground\r\n            source = {require('../assets/images/square.jpg')}\r\n            style = {{\r\n              width:'100%',\r\n            }}\r\n          >\r\n            <TouchableHighlight\r\n              onPress = {handleOnPress}\r\n            >\r\n              <View style={styles.gridSquare}>\r\n                  <Text\r\n                    style = {{\r\n                      marginTop:marginTop,\r\n                      fontFamily:fontFamily\r\n                    }}\r\n                  >\r\n                    {number}\r\n                  </Text>\r\n              </View>\r\n            </TouchableHighlight>\r\n          </ImageBackground>\r\n          :\r\n            <TouchableHighlight\r\n              onPress = {handleOnPress}\r\n            >\r\n              <View style={styles.gridSquare}>\r\n                  <Text\r\n                    style = {{\r\n                      marginTop:marginTop,\r\n                      fontFamily:fontFamily\r\n                    }}\r\n                  >\r\n                    {number}\r\n                  </Text>\r\n              </View>\r\n            </TouchableHighlight>\r\n        }\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n  },\r\n  gridSquare:{\r\n    borderStyle:'solid',\r\n    width: 35,\r\n    height: 35,\r\n    borderWidth: 5,\r\n    borderLeftColor: 'rgba(255, 255, 255, 0.20)',\r\n    borderTopColor: 'rgba(255, 255, 255, 0.33)',\r\n    borderRightColor: 'rgba(0, 0, 0, 0.15)',\r\n    borderBottomColor: 'rgba(0, 0, 0, 0.5)',\r\n    alignItems:'center'\r\n  }\r\n});"]}