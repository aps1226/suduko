{"version":3,"sources":["Provider.tsx"],"names":["Provider","props","colorSchemeName","Appearance","React","handleAppearanceChange","preferences","colorScheme","setColorScheme","AccessibilityInfo","getTheme","theme","providedTheme","DarkTheme","DefaultTheme","animation","scale","reduceMotionEnabled","settings","icon","MaterialCommunityIcon"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { AccessibilityInfo, Appearance, ColorSchemeName } from 'react-native';\nimport { ThemeProvider } from './theming';\nimport { Provider as SettingsProvider, Settings } from './settings';\nimport MaterialCommunityIcon from '../components/MaterialCommunityIcon';\nimport PortalHost from '../components/Portal/PortalHost';\nimport DefaultTheme from '../styles/DefaultTheme';\nimport DarkTheme from '../styles/DarkTheme';\n\ntype Props = {\n  children: React.ReactNode;\n  theme?: ReactNativePaper.Theme;\n  settings?: Settings;\n};\n\nconst Provider = ({ ...props }: Props) => {\n  const colorSchemeName =\n    (!props.theme && Appearance?.getColorScheme()) || 'light';\n\n  const [reduceMotionEnabled, setReduceMotionEnabled] = React.useState<boolean>(\n    false\n  );\n  const [colorScheme, setColorScheme] = React.useState<ColorSchemeName>(\n    colorSchemeName\n  );\n\n  const handleAppearanceChange = (\n    preferences: Appearance.AppearancePreferences\n  ) => {\n    const { colorScheme } = preferences;\n    setColorScheme(colorScheme);\n  };\n\n  React.useEffect(() => {\n    if (!props.theme) {\n      AccessibilityInfo.addEventListener(\n        'reduceMotionChanged',\n        setReduceMotionEnabled\n      );\n    }\n    return () => {\n      if (!props.theme) {\n        AccessibilityInfo.removeEventListener(\n          'reduceMotionChanged',\n          setReduceMotionEnabled\n        );\n      }\n    };\n  }, [props.theme]);\n\n  React.useEffect(() => {\n    if (!props.theme) Appearance?.addChangeListener(handleAppearanceChange);\n    return () => {\n      if (!props.theme)\n        Appearance?.removeChangeListener(handleAppearanceChange);\n    };\n  }, [props.theme]);\n\n  const getTheme = () => {\n    const { theme: providedTheme } = props;\n\n    if (providedTheme) {\n      return providedTheme;\n    } else {\n      const theme = (colorScheme === 'dark'\n        ? DarkTheme\n        : DefaultTheme) as ReactNativePaper.Theme;\n\n      return {\n        ...theme,\n        animation: {\n          ...theme.animation,\n          scale: reduceMotionEnabled ? 0 : 1,\n        },\n      };\n    }\n  };\n\n  const { children, settings } = props;\n  return (\n    <PortalHost>\n      <SettingsProvider value={settings || { icon: MaterialCommunityIcon }}>\n        <ThemeProvider theme={getTheme()}>{children}</ThemeProvider>\n      </SettingsProvider>\n    </PortalHost>\n  );\n};\n\nexport default Provider;\n"]}