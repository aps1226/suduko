{"version":3,"sources":["PortalManager.tsx"],"names":["React","portals","state","key","children","item","render","StyleSheet","absoluteFill"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAYe,a;;;;;AAA2D,2BAAA;AAAA;;AAAA;;AAAA,sCAAA,IAAA;AAAA,MAAA,IAAA;AAAA;;AAAA,oDAAA,IAAA;;AAAA,IAAA,eAAA,8CAAA,OAAA,EACzD;AACbC,MAAAA,OAAO,EAAE;AADI,KADyD,CAAA;;AAAA,IAAA,eAAA,8CAAA,OAAA,EAKhE,UAAA,GAAA,EAAA,QAAA,EAA4C;AAClD,YAAA,QAAA,CAAeC,UAAAA,KAAD;AAAA,eAAY;AACxBD,UAAAA,OAAO,6CAAMC,KAAK,CAAT,OAAF,IAAqB;AAAEC,YAAAA,GAAF,EAAEA,GAAF;AAAOC,YAAAA,QAAAA,EAAAA;AAAP,WAArB;AADiB,SAAZ;AAAA,OAAd;AANsE,KAAA,CAAA;;AAAA,IAAA,eAAA,8CAAA,QAAA,EAW/D,UAAA,GAAA,EAAA,QAAA;AAAA,aACP,MAAA,QAAA,CAAeF,UAAAA,KAAD;AAAA,eAAY;AACxBD,UAAAA,OAAO,EAAE,KAAK,CAAL,OAAA,CAAA,GAAA,CAAmBI,UAAAA,IAAD,EAAU;AACnC,gBAAIA,IAAI,CAAJA,GAAAA,KAAJ,GAAA,EAAsB;AACpB,qDAAO,IAAP;AAAkBD,gBAAAA,QAAAA,EAAAA;AAAlB;AACD;;AACD,mBAAA,IAAA;AAJO,WAAA;AADe,SAAZ;AAAA,OAAd,CADO;AAAA,KAX+D,CAAA;;AAAA,IAAA,eAAA,8CAAA,SAAA,EAqB7DD,UAAAA,GAAD;AAAA,aACR,MAAA,QAAA,CAAeD,UAAAA,KAAD;AAAA,eAAY;AACxBD,UAAAA,OAAO,EAAEC,KAAK,CAALA,OAAAA,CAAAA,MAAAA,CAAsBG,UAAAA,IAAD;AAAA,mBAAUA,IAAI,CAAJA,GAAAA,KAA/BH,GAAqB;AAAA,WAArBA;AADe,SAAZ;AAAA,OAAd,CADQ;AAAA,KArB8D,CAAA;;AAAA;AAAA;;;;WA0BxEI,kBAAS;AACP,aAAO,KAAA,KAAA,CAAA,OAAA,CAAA,GAAA,CAAuB;AAAA,YAAC,GAAD,QAAC,GAAD;AAAA,YAAQF,QAAR,QAAQA,QAAR;AAAA,eAC5B,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,EAAA;AACE,UAAA,GAAG,EADL,GAAA;AAEE,UAAA,WAAW,EACT,KAHJ;AAKE,UAAA,aAAa,EALf,UAAA;AAME,UAAA,KAAK,EAAEG,YAAAA,CAAAA,UAAAA,CAAWC;AANpB,SAAA,EADF,QACE,CAD4B;AAAA,OAAvB,CAAP;AAYD;;;EAvCwCR,KAAK,CAAjC,a","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\n\ntype State = {\n  portals: Array<{\n    key: number;\n    children: React.ReactNode;\n  }>;\n};\n\n/**\n * Portal host is the component which actually renders all Portals.\n */\nexport default class PortalManager extends React.PureComponent<{}, State> {\n  state: State = {\n    portals: [],\n  };\n\n  mount = (key: number, children: React.ReactNode) => {\n    this.setState((state) => ({\n      portals: [...state.portals, { key, children }],\n    }));\n  };\n\n  update = (key: number, children: React.ReactNode) =>\n    this.setState((state) => ({\n      portals: state.portals.map((item) => {\n        if (item.key === key) {\n          return { ...item, children };\n        }\n        return item;\n      }),\n    }));\n\n  unmount = (key: number) =>\n    this.setState((state) => ({\n      portals: state.portals.filter((item) => item.key !== key),\n    }));\n\n  render() {\n    return this.state.portals.map(({ key, children }) => (\n      <View\n        key={key}\n        collapsable={\n          false /* Need collapsable=false here to clip the elevations, otherwise they appear above sibling components */\n        }\n        pointerEvents=\"box-none\"\n        style={StyleSheet.absoluteFill}\n      >\n        {children}\n      </View>\n    ));\n  }\n}\n"]}