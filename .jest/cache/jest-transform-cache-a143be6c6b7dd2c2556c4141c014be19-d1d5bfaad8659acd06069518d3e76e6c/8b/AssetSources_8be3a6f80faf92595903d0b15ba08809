c13b3e0e375f96ceffb84cb7a339d13e
"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports, "__esModule", { value: true });exports.selectAssetSource = selectAssetSource;exports.resolveUri = resolveUri;var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));var _core = require("@unimodules/core");
var _pathBrowserify = _interopRequireDefault(require("path-browserify"));
var _reactNative = require("react-native");
var _urlParse = _interopRequireDefault(require("url-parse"));
var _AssetSourceResolver = _interopRequireDefault(require("./AssetSourceResolver"));
var _PlatformUtils = require("./PlatformUtils");function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) {symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});}keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {(0, _defineProperty2.default)(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}

var assetMapOverride = (0, _PlatformUtils.getManifest)().assetMapOverride;






function selectAssetSource(meta) {

  if (assetMapOverride && assetMapOverride.hasOwnProperty(meta.hash)) {
    meta = _objectSpread(_objectSpread({}, meta), assetMapOverride[meta.hash]);
  }


  var scale = _AssetSourceResolver.default.pickScale(meta.scales, _reactNative.PixelRatio.get());
  var index = meta.scales.findIndex(function (s) {return s === scale;});
  var hash = meta.fileHashes ? meta.fileHashes[index] || meta.fileHashes[0] : meta.hash;

  var uri = meta.fileUris ? meta.fileUris[index] || meta.fileUris[0] : meta.uri;
  if (uri) {
    return { uri: resolveUri(uri), hash: hash };
  }

  var assetUrlOverride = (0, _PlatformUtils.getManifest)().assetUrlOverride;
  if (assetUrlOverride) {
    var _uri = _pathBrowserify.default.join(assetUrlOverride, hash);
    return { uri: resolveUri(_uri), hash: hash };
  }
  var fileScale = scale === 1 ? '' : "@" + scale + "x";
  var fileExtension = meta.type ? "." + encodeURIComponent(meta.type) : '';
  var suffix = "/" + encodeURIComponent(meta.name) + fileScale + fileExtension + "?platform=" + encodeURIComponent(_core.Platform.OS) + "&hash=" + encodeURIComponent(meta.hash);


  if (/^https?:\/\//.test(meta.httpServerLocation)) {
    var _uri2 = meta.httpServerLocation + suffix;
    return { uri: _uri2, hash: hash };
  }

  if ((0, _PlatformUtils.getManifest)().developer) {
    var baseUrl = new _urlParse.default((0, _PlatformUtils.getManifest)().bundleUrl);
    baseUrl.set('pathname', meta.httpServerLocation + suffix);
    return { uri: baseUrl.href, hash: hash };
  }

  return {
    uri: "https://d1wp6m56sqw74a.cloudfront.net/~assets/" + encodeURIComponent(hash),
    hash: hash };

}





function resolveUri(uri) {
  if (!_PlatformUtils.manifestBaseUrl) {
    return uri;
  }
  var _URL = new _urlParse.default(uri),protocol = _URL.protocol;
  if (protocol !== '') {
    return uri;
  }
  var baseUrl = new _urlParse.default(_PlatformUtils.manifestBaseUrl);
  var resolvedPath = uri.startsWith('/') ? uri : _pathBrowserify.default.join(baseUrl.pathname, uri);
  baseUrl.set('pathname', resolvedPath);
  return baseUrl.href;
}