{"version":3,"sources":["Icon.tsx"],"names":["isImageSource","source","Object","Platform","getIconId","isValidIcon","isEqualIcon","a","Icon","rest","direction","I18nManager","s","iconColor","color","theme","transform","scaleX","width","height","tintColor","resizeMode","accessibilityProps","icon","name","size"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Image,\n  I18nManager,\n  Platform,\n  ImageSourcePropType,\n} from 'react-native';\nimport { Consumer as SettingsConsumer } from '../core/settings';\nimport { accessibilityProps } from './MaterialCommunityIcon';\nimport { withTheme } from '../core/theming';\n\ntype IconSourceBase = string | ImageSourcePropType;\n\nexport type IconSource =\n  | IconSourceBase\n  | Readonly<{ source: IconSourceBase; direction: 'rtl' | 'ltr' | 'auto' }>\n  | ((props: IconProps & { color: string }) => React.ReactNode);\n\ntype IconProps = {\n  size: number;\n  allowFontScaling?: boolean;\n};\n\ntype Props = IconProps & {\n  color?: string;\n  source: any;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\nconst isImageSource = (source: any) =>\n  // source is an object with uri\n  (typeof source === 'object' &&\n    source !== null &&\n    Object.prototype.hasOwnProperty.call(source, 'uri') &&\n    typeof source.uri === 'string') ||\n  // source is a module, e.g. - require('image')\n  typeof source === 'number' ||\n  // image url on web\n  (Platform.OS === 'web' &&\n    typeof source === 'string' &&\n    (source.startsWith('data:image') ||\n      /\\.(bmp|jpg|jpeg|png|gif|svg)$/.test(source)));\n\nconst getIconId = (source: any) => {\n  if (\n    typeof source === 'object' &&\n    source !== null &&\n    Object.prototype.hasOwnProperty.call(source, 'uri') &&\n    typeof source.uri === 'string'\n  ) {\n    return source.uri;\n  }\n\n  return source;\n};\n\nexport const isValidIcon = (source: any) =>\n  typeof source === 'string' ||\n  typeof source === 'function' ||\n  isImageSource(source);\n\nexport const isEqualIcon = (a: any, b: any) =>\n  a === b || getIconId(a) === getIconId(b);\n\nconst Icon = ({ source, color, size, theme, ...rest }: Props) => {\n  const direction =\n    typeof source === 'object' && source.direction && source.source\n      ? source.direction === 'auto'\n        ? I18nManager.isRTL\n          ? 'rtl'\n          : 'ltr'\n        : source.direction\n      : null;\n  const s =\n    typeof source === 'object' && source.direction && source.source\n      ? source.source\n      : source;\n  const iconColor = color || theme.colors.text;\n\n  if (isImageSource(s)) {\n    return (\n      <Image\n        {...rest}\n        source={s}\n        style={[\n          {\n            transform: [{ scaleX: direction === 'rtl' ? -1 : 1 }],\n          },\n          // eslint-disable-next-line react-native/no-inline-styles\n          {\n            width: size,\n            height: size,\n            tintColor: color,\n            resizeMode: 'contain',\n          },\n        ]}\n        {...accessibilityProps}\n      />\n    );\n  } else if (typeof s === 'string') {\n    return (\n      <SettingsConsumer>\n        {({ icon }) => {\n          return icon({\n            name: s,\n            color: iconColor,\n            size,\n            direction,\n          });\n        }}\n      </SettingsConsumer>\n    );\n  } else if (typeof s === 'function') {\n    return s({ color: iconColor, size, direction });\n  }\n\n  return null;\n};\n\nexport default withTheme(Icon);\n"]}