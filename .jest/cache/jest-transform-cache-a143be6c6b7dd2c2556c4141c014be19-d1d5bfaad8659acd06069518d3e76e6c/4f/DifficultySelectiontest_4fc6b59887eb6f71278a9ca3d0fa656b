bf5d4134dceb728b78a2a9a5979e1a9a
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _react = _interopRequireDefault(require("react"));

var _renderWithRedux = _interopRequireDefault(require("./renderWithRedux"));

var _history = require("history");

var _reactNative = require("@testing-library/react-native");

var _DifficultySelection = _interopRequireDefault(require("../../../components/DifficultySelection"));

var history = (0, _history.createMemoryHistory)();
var path = "/route/:id";
var match = {
  isExact: false,
  path: path,
  url: path.replace(':id', '1'),
  params: {
    id: '1'
  }
};
var location = (0, _history.createLocation)(match.url);
describe('DifficultySelection', function () {
  var mockStore = {};
  var difficultySelection;
  beforeEach(function _callee() {
    return _regenerator.default.async(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return _regenerator.default.awrap((0, _reactNative.waitFor)(function () {
              difficultySelection = (0, _renderWithRedux.default)(_react.default.createElement(_DifficultySelection.default, {
                history: history,
                location: location,
                match: match
              }), {
                initialState: mockStore
              });
            }));

          case 2:
          case "end":
            return _context.stop();
        }
      }
    }, null, null, null, Promise);
  });
  afterEach(_reactNative.cleanup);
  it('renders without crashing', function _callee2() {
    return _regenerator.default.async(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            expect(difficultySelection.toJSON()).toMatchSnapshot();

          case 1:
          case "end":
            return _context2.stop();
        }
      }
    }, null, null, null, Promise);
  });
  it("correctly initializes board when the easy button is selected", function _callee3() {
    var _difficultySelection, getByTestId, store, easyButton, curHistory;

    return _regenerator.default.async(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _difficultySelection = difficultySelection, getByTestId = _difficultySelection.getByTestId, store = _difficultySelection.store;
            easyButton = getByTestId('easyButton');
            curHistory = history.length;

            _reactNative.fireEvent.press(easyButton);

            _context3.next = 6;
            return _regenerator.default.awrap((0, _reactNative.waitFor)(function () {
              expect(history.length).toBe(curHistory + 1);
              expect(history.location.pathname).toBe('/GameDisplay');
              console.log(store.getState().board);
            }));

          case 6:
          case "end":
            return _context3.stop();
        }
      }
    }, null, null, null, Promise);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYXNoZWVcXERvY3VtZW50c1xcSmF2YXNjcmlwdFxcUmVhY3RcXFJlYWN0IE5hdGl2ZVxcc3VkdWtvXFxzcmNcXF9fdGVzdHNfX1xcQ29tcG9uZW50IFRlc3RzXFxEaWZmaWN1bHR5U2VsZWN0aW9uLnRlc3QudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFFQTs7QUFDQTs7QUFFQTs7QUFLQTs7QUFHQSxJQUFNLE9BQU8sR0FBRyxtQ0FBaEI7QUFDQSxJQUFNLElBQUksZUFBVjtBQUNBLElBQU0sS0FBSyxHQUEwQjtBQUNqQyxFQUFBLE9BQU8sRUFBRSxLQUR3QjtBQUVqQyxFQUFBLElBQUksRUFBSixJQUZpQztBQUdqQyxFQUFBLEdBQUcsRUFBRSxJQUFJLENBQUMsT0FBTCxDQUFhLEtBQWIsRUFBb0IsR0FBcEIsQ0FINEI7QUFJakMsRUFBQSxNQUFNLEVBQUU7QUFBRSxJQUFBLEVBQUUsRUFBRTtBQUFOO0FBSnlCLENBQXJDO0FBTUEsSUFBTSxRQUFRLEdBQUcsNkJBQWUsS0FBSyxDQUFDLEdBQXJCLENBQWpCO0FBR0EsUUFBUSxDQUFDLHFCQUFELEVBQXVCLFlBQUs7QUFHbEMsTUFBTSxTQUFTLEdBQWEsRUFBNUI7QUFHQSxNQUFJLG1CQUFKO0FBQ0EsRUFBQSxVQUFVLENBQUM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsOENBQ0gsMEJBQVEsWUFBSztBQUNqQixjQUFBLG1CQUFtQixHQUFHLDhCQUNwQixlQUFBLGFBQUEsQ0FBQyw0QkFBRCxFQUFvQjtBQUNsQixnQkFBQSxPQUFPLEVBQUUsT0FEUztBQUVsQixnQkFBQSxRQUFRLEVBQUUsUUFGUTtBQUdsQixnQkFBQSxLQUFLLEVBQUU7QUFIVyxlQUFwQixDQURvQixFQU1wQjtBQUNFLGdCQUFBLFlBQVksRUFBQztBQURmLGVBTm9CLENBQXRCO0FBVUQsYUFYSyxDQURHOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQUQsQ0FBVjtBQWdCQSxFQUFBLFNBQVMsQ0FBQyxvQkFBRCxDQUFUO0FBR0EsRUFBQSxFQUFFLENBQUMsMEJBQUQsRUFBNEI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUM1QixZQUFBLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxNQUFwQixFQUFELENBQU4sQ0FBcUMsZUFBckM7O0FBRDRCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQTVCLENBQUY7QUFLQSxFQUFBLEVBQUUsaUVBQWlFO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxtQ0FDcEMsbUJBRG9DLEVBQzFELFdBRDBELHdCQUMxRCxXQUQwRCxFQUM3QyxLQUQ2Qyx3QkFDN0MsS0FENkM7QUFFM0QsWUFBQSxVQUYyRCxHQUU5QyxXQUFXLENBQUMsWUFBRCxDQUZtQztBQUczRCxZQUFBLFVBSDJELEdBRzlDLE9BQU8sQ0FBQyxNQUhzQzs7QUFLakUsbUNBQVUsS0FBVixDQUFnQixVQUFoQjs7QUFMaUU7QUFBQSw4Q0FNM0QsMEJBQVEsWUFBSTtBQUVoQixjQUFBLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBVCxDQUFOLENBQXVCLElBQXZCLENBQTRCLFVBQVUsR0FBRyxDQUF6QztBQUVBLGNBQUEsTUFBTSxDQUFDLE9BQU8sQ0FBQyxRQUFSLENBQWlCLFFBQWxCLENBQU4sQ0FBa0MsSUFBbEMsQ0FBdUMsY0FBdkM7QUFDQSxjQUFBLE9BQU8sQ0FBQyxHQUFSLENBQVksS0FBSyxDQUFDLFFBQU4sR0FBaUIsS0FBN0I7QUFDRCxhQU5LLENBTjJEOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQWpFLENBQUY7QUFlRCxDQTlDTyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgVGV4dCxWaWV3IH0gZnJvbSAncmVhY3QtbmF0aXZlJztcclxuaW1wb3J0IHJlbmRlcldpdGhSZWR1eCBmcm9tICcuL3JlbmRlcldpdGhSZWR1eCc7XHJcbmltcG9ydCB7IGNyZWF0ZU1lbW9yeUhpc3RvcnksIGNyZWF0ZUxvY2F0aW9uIH0gZnJvbSAnaGlzdG9yeSc7XHJcbmltcG9ydCB7IG1hdGNoIH0gZnJvbSAncmVhY3Qtcm91dGVyJztcclxuaW1wb3J0IHsgYWN0LCBjbGVhbnVwLCBmaXJlRXZlbnQsIHJlbmRlciwgd2FpdEZvcn0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdC1uYXRpdmUnO1xyXG5pbXBvcnQgcmVuZGVyZXIgZnJvbSAncmVhY3QtdGVzdC1yZW5kZXJlcic7XHJcbmltcG9ydCB7R2FtZVN0YXRlfSBmcm9tICcuLi8uLi8uLi90eXBlcyc7XHJcbmltcG9ydCB7Um9vdFN0YXRlfSBmcm9tICcuLi8uLi9zdGF0ZS9yZWR1Y2Vycy9pbmRleCc7XHJcblxyXG5pbXBvcnQgRGlmZmljdWx0eVNlbGVjdGlvbiBmcm9tICcuLi8uLi8uLi9jb21wb25lbnRzL0RpZmZpY3VsdHlTZWxlY3Rpb24nO1xyXG5cclxuLy9Nb2NrIHByb3BzIGZvciByb3V0aW5nLlxyXG5jb25zdCBoaXN0b3J5ID0gY3JlYXRlTWVtb3J5SGlzdG9yeSgpO1xyXG5jb25zdCBwYXRoID0gYC9yb3V0ZS86aWRgO1xyXG5jb25zdCBtYXRjaDogbWF0Y2g8eyBpZDogc3RyaW5nIH0+ID0ge1xyXG4gICAgaXNFeGFjdDogZmFsc2UsXHJcbiAgICBwYXRoLFxyXG4gICAgdXJsOiBwYXRoLnJlcGxhY2UoJzppZCcsICcxJyksXHJcbiAgICBwYXJhbXM6IHsgaWQ6ICcxJyB9XHJcbn07XHJcbmNvbnN0IGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24obWF0Y2gudXJsKTtcclxuXHJcbi8vR2FtZURpc3BsYXkgY29tcG9uZW50IHRlc3QuXHJcbmRlc2NyaWJlKCdEaWZmaWN1bHR5U2VsZWN0aW9uJywoKSA9PntcclxuXHJcbiAgLy9Nb2NrIHN0b3JlIG9iamVjdCBmb3Igc3RhdGUgbWFuYWdlbWVudC5cclxuICBjb25zdCBtb2NrU3RvcmU6Um9vdFN0YXRlID0ge307XHJcblxyXG4gIC8vUmVuZGVyIERpZmZpY3VsdHlTZWxlY3Rpb24gY29tcG9uZW50IHdpdGggcm91dGluZyBhbmQgcmVkdXguXHJcbiAgbGV0IGRpZmZpY3VsdHlTZWxlY3Rpb246YW55O1xyXG4gIGJlZm9yZUVhY2goYXN5bmMoKSA9PntcclxuICAgIGF3YWl0IHdhaXRGb3IoKCkgPT57XHJcbiAgICAgIGRpZmZpY3VsdHlTZWxlY3Rpb24gPSByZW5kZXJXaXRoUmVkdXgoXHJcbiAgICAgICAgPERpZmZpY3VsdHlTZWxlY3Rpb25cclxuICAgICAgICAgIGhpc3Rvcnk9e2hpc3Rvcnl9XHJcbiAgICAgICAgICBsb2NhdGlvbj17bG9jYXRpb259XHJcbiAgICAgICAgICBtYXRjaD17bWF0Y2h9XHJcbiAgICAgICAgLz4sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgaW5pdGlhbFN0YXRlOm1vY2tTdG9yZVxyXG4gICAgICAgIH1cclxuICAgICAgKTtcclxuICAgIH0pXHJcbiAgfSlcclxuXHJcbiAgLy9DbGVhbnVwIGFmdGVyIGVhY2ggdGVzdC5cclxuICBhZnRlckVhY2goY2xlYW51cCk7XHJcblxyXG4gIC8vQ29tcG9uZW50IHJlbmRlcnMgd2l0aG91dCBjcmFzaGluZy5cclxuICBpdCgncmVuZGVycyB3aXRob3V0IGNyYXNoaW5nJyxhc3luYygpPT57XHJcbiAgICBleHBlY3QoZGlmZmljdWx0eVNlbGVjdGlvbi50b0pTT04oKSkudG9NYXRjaFNuYXBzaG90KCk7XHJcbiAgfSlcclxuXHJcbiAgLy9UZXN0IGVhc3kgc2VsZWN0aW9uXHJcbiAgaXQoYGNvcnJlY3RseSBpbml0aWFsaXplcyBib2FyZCB3aGVuIHRoZSBlYXN5IGJ1dHRvbiBpcyBzZWxlY3RlZGAsIGFzeW5jICgpPT57XHJcbiAgICBjb25zdCB7Z2V0QnlUZXN0SWQsIHN0b3JlfSA9IGRpZmZpY3VsdHlTZWxlY3Rpb247XHJcbiAgICBjb25zdCBlYXN5QnV0dG9uID0gZ2V0QnlUZXN0SWQoJ2Vhc3lCdXR0b24nKTtcclxuICAgIGNvbnN0IGN1ckhpc3RvcnkgPSBoaXN0b3J5Lmxlbmd0aDtcclxuICAgIC8vUHJlc3MgZWFzeSBidXR0b25cclxuICAgIGZpcmVFdmVudC5wcmVzcyhlYXN5QnV0dG9uKTtcclxuICAgIGF3YWl0IHdhaXRGb3IoKCk9PntcclxuICAgICAgLy9IaXN0b3J5IGxlbmd0aCBzaG91bGQgaW5jcmVhc2UgYnkgMS5cclxuICAgICAgZXhwZWN0KGhpc3RvcnkubGVuZ3RoKS50b0JlKGN1ckhpc3RvcnkgKyAxKTtcclxuICAgICAgLy9Mb2NhdGlvbiBwYXRobmFtZSBzaG91bGQgYmUgJ0dhbWVEaXNwbGF5Jy5cclxuICAgICAgZXhwZWN0KGhpc3RvcnkubG9jYXRpb24ucGF0aG5hbWUpLnRvQmUoJy9HYW1lRGlzcGxheScpO1xyXG4gICAgICBjb25zb2xlLmxvZyhzdG9yZS5nZXRTdGF0ZSgpLmJvYXJkKVxyXG4gICAgfSlcclxuICB9KVxyXG5cclxufSkiXX0=