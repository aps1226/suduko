{"version":3,"sources":["C:\\Users\\ashee\\Documents\\Javascript\\React\\React Native\\suduko\\src\\__tests__\\ComponentTests.test.tsx"],"names":[],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAGA;;AAIA;;AACA;;;;;;;;;;AAIA,IAAM,OAAO,GAAG,mCAAhB;AACA,IAAM,IAAI,eAAV;AACA,IAAM,KAAK,GAA0B;AACjC,EAAA,OAAO,EAAE,KADwB;AAEjC,EAAA,IAAI,EAAJ,IAFiC;AAGjC,EAAA,GAAG,EAAE,IAAI,CAAC,OAAL,CAAa,KAAb,EAAoB,GAApB,CAH4B;AAIjC,EAAA,MAAM,EAAE;AAAE,IAAA,EAAE,EAAE;AAAN;AAJyB,CAArC;AAMA,IAAM,QAAQ,GAAG,6BAAe,KAAK,CAAC,GAArB,CAAjB;;AAGA,SAAS,eAAT,CACE,SADF,EAGgE;AAAA,iFAAF,EAAE;AAAA,MAA7D,YAA6D,QAA7D,YAA6D;AAAA,wBAAhD,KAAgD;AAAA,MAAhD,KAAgD,2BAAxC,wBAAY,cAAZ,EAAqB,YAArB,CAAwC;;AAE9D,yCACK,yBAAO,KAAA,CAAA,aAAA,CAAC,oBAAD,EAAS;AAAC,IAAA,KAAK,EAAI;AAAV,GAAT,EAA2B,SAA3B,CAAP,CADL;AAEE,IAAA,KAAK,EAAL;AAFF;AAID;;AAGD,QAAQ,CAAC,gBAAD,EAAmB,YAAK;AAC9B,MAAI,aAAJ;AACA,EAAA,UAAU,CAAC,YAAK;AACd,IAAA,aAAa,GAAG,eAAe,CAC7B,KAAA,CAAA,aAAA,CAAC,aAAD,EAAK;AACH,MAAA,OAAO,EAAE,OADN;AAEH,MAAA,QAAQ,EAAE,QAFP;AAGH,MAAA,KAAK,EAAE;AAHJ,KAAL,CAD6B,CAA/B;AAOD,GARS,CAAV;AAUA,EAAA,EAAE,CAAC,0BAAD,EAA6B,YAAK;AAClC,IAAA,MAAM,CAAC,aAAa,CAAC,MAAd,EAAD,CAAN,CAA+B,eAA/B;AACD,GAFC,CAAF;AAIA,EAAA,EAAE,wEAAwE,YAAK;AAC7E,yBAAsB,aAAtB;AAAA,QAAO,WAAP,kBAAO,WAAP;AACA,QAAM,aAAa,GAAG,WAAW,CAAC,eAAD,CAAjC;;AACA,2BAAU,KAAV,CAAgB,aAAhB;;AACA,0BAAkB,aAAlB;AAAA,QAAO,OAAP,mBAAO,OAAP;AACA,IAAA,OAAO,CAAC,GAAR,CAAY,aAAZ;AAGD,GARC,CAAF;AAUD,CA1BO,CAAR;AA2BA,QAAQ,CAAC,iBAAD,EAAoB,YAAK;AAC/B,EAAA,EAAE,CAAC,0BAAD,EAA6B,YAAK;AAClC,QAAM,cAAc,GAAG,yBAAO,KAAA,CAAA,aAAA,CAAC,cAAD,EAAM,IAAN,CAAP,EAAiB,MAAjB,EAAvB;AACA,IAAA,MAAM,CAAC,cAAD,CAAN,CAAuB,eAAvB;AACD,GAHC,CAAF;AAID,CALO,CAAR","sourcesContent":["import * as React from 'react';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducers from '../state/reducers/index';\nimport { createMemoryHistory, createLocation } from 'history';\nimport { match } from 'react-router'; \nimport { RouteComponentProps, Router } from 'react-router-native';\nimport { fireEvent, render} from '@testing-library/react-native';\nimport renderer from 'react-test-renderer';\n// import { shallow } from 'enzyme'\n// import toJson from 'enzyme-to-json';\nimport Title from '../../components/Title';\nimport Home from '../../components/Home';\nimport App from '../../App';\n\n//Mock props for components with routing.\nconst history = createMemoryHistory();\nconst path = `/route/:id`;\nconst match: match<{ id: string }> = {\n    isExact: false,\n    path,\n    url: path.replace(':id', '1'),\n    params: { id: \"1\" }\n};\nconst location = createLocation(match.url);\n\n//Function to provide mockStore for components managed by redux.\nfunction renderWithRedux(\n  component:JSX.Element,\n  //@ts-ignore\n  {initialState,store = createStore(reducers,initialState)} = {}\n){\n  return {\n    ...render(<Provider store = {store}>{component}</Provider>),\n    store\n  }\n}\n\n//Home component testing.\ndescribe('Home component', () =>{\n  let homeComponent:any;\n  beforeEach(() =>{\n    homeComponent = renderWithRedux(\n      <Home\n        history={history}\n        location={location}\n        match={match}\n      />\n    );\n  })\n\n  it('renders without crashing', () => {\n    expect(homeComponent.toJSON()).toMatchSnapshot();\n  });\n\n  it(`routes to difficulty selection menu when selecting 'Play New Game'.`, () => {\n    const {getByTestId} = homeComponent;\n    const newGameButton = getByTestId('newGameButton');\n    fireEvent.press(newGameButton);\n    const {history} = homeComponent;\n    console.log(homeComponent)\n    // expect(history.length).toBe(2);\n    // expect(history.location.pathname).toBe('/DifficultySelection')\n  });\n\n});\ndescribe('Title component', () =>{\n  it('renders without crashing', () => {\n    const titleComponent = render(<Title/>).toJSON();\n    expect(titleComponent).toMatchSnapshot();\n  });\n});\n"]}