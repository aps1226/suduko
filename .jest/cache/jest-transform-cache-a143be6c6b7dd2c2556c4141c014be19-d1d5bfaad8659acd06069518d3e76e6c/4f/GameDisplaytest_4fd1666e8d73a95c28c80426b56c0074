0284c1638f4e520ba75b6ae2912ab291
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _react = _interopRequireDefault(require("react"));

var _renderWithRedux = _interopRequireDefault(require("./renderWithRedux"));

var _history = require("history");

var _reactNative = require("@testing-library/react-native");

var _GameDisplay = _interopRequireDefault(require("../../../components/GameDisplay"));

function _getJestObj() {
  var _require = require("@jest/globals"),
      jest = _require.jest;

  _getJestObj = function _getJestObj() {
    return jest;
  };

  return jest;
}

var history = (0, _history.createMemoryHistory)();
var path = "/route/:id";
var match = {
  isExact: false,
  path: path,
  url: path.replace(':id', '1'),
  params: {
    id: '1'
  }
};
var location = (0, _history.createLocation)(match.url);
var board = [[3, 1, 6, 5, 7, 8, 4, 9, 2], [5, 2, 9, 1, 3, 4, 7, 6, 8], [4, 8, 7, 6, 2, 9, 5, 3, 1], [2, 6, 3, 4, 1, 5, 9, 8, 7], [9, 7, 4, 8, 6, null, 1, 2, 5], [8, 5, 1, 7, 9, 2, 6, 4, 3], [1, 3, 8, 9, 4, 7, 2, null, 6], [6, 9, 2, 3, 5, 1, 8, 7, 4], [7, 4, 5, 2, 8, 6, 3, 1, 9]];
var colors = {
  1: ['transparent', 'black'],
  2: ['transparent', 'black'],
  3: ['transparent', 'black'],
  4: ['transparent', 'black'],
  5: ['transparent', 'black'],
  6: ['transparent', 'black'],
  7: ['transparent', 'black'],
  8: ['transparent', 'black'],
  9: ['transparent', 'black'],
  'Selection_1': '#3297FD',
  'Selection_2': 'transparent',
  'Selection_3': 'transparent',
  'Selection_4': 'transparent',
  'Selection_5': 'transparent',
  'Selection_6': 'transparent',
  'Selection_7': 'transparent',
  'Selection_8': 'transparent',
  'Selection_9': 'transparent',
  'gradient': ["#a37e5c", "#b89372", "#c8a484", "#dcb999", "#d3af8f", "#d9b696", "#ceaa89", "#d2ae8d", "#b38e6d", "#aa8563", "#a37e5c", "#b89372", "#c8a484", "#dcb999", "#d3af8f", "#d9b696", "#ceaa89", "#d2ae8d", "#b38e6d", "#aa8563", "#a37e5c", "#b89372", "#c8a484", "#dcb999", "#d3af8f", "#d9b696", "#ceaa89", "#d2ae8d", "#b38e6d", "#aa8563", "#a37e5c", "#b89372", "#c8a484", "#dcb999", "#d3af8f", "#d9b696", "#ceaa89", "#d2ae8d", "#b38e6d", "#aa8563", "#a37e5c", "#b89372", "#c8a484", "#dcb999", "#d3af8f", "#d9b696", "#ceaa89", "#d2ae8d", "#b38e6d", "#aa8563"]
};
describe('GameDisplay', function () {
  _getJestObj().mock('react-native/Libraries/Components/Switch/Switch', function () {
    var mockComponent = require('react-native/jest/mockComponent');

    return mockComponent('react-native/Libraries/Components/Switch/Switch');
  });

  var mockStore = {
    'board': board,
    'colors': colors
  };
  var gameDisplayComponent;
  beforeEach(function _callee() {
    return _regenerator.default.async(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return _regenerator.default.awrap((0, _reactNative.waitFor)(function () {
              gameDisplayComponent = (0, _renderWithRedux.default)(_react.default.createElement(_GameDisplay.default, {
                history: history,
                location: location,
                match: match
              }), {
                initialState: mockStore
              });
            }));

          case 2:
          case "end":
            return _context.stop();
        }
      }
    }, null, null, null, Promise);
  });
  afterEach(_reactNative.cleanup);
  it('renders without crashing', function _callee2() {
    return _regenerator.default.async(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            expect(gameDisplayComponent.toJSON()).toMatchSnapshot();

          case 1:
          case "end":
            return _context2.stop();
        }
      }
    }, null, null, null, Promise);
  });
  it("should not render the Winner component if the board is not complete", function _callee3() {
    var _gameDisplayComponent, store, getByTestId, selectionSquare5, gridSquare67, winnerAnimation;

    return _regenerator.default.async(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _gameDisplayComponent = gameDisplayComponent, store = _gameDisplayComponent.store, getByTestId = _gameDisplayComponent.getByTestId;
            selectionSquare5 = getByTestId('selectionSquare_5');
            gridSquare67 = getByTestId('gridSquare_67');
            winnerAnimation = getByTestId('gridSquare67');

            _reactNative.fireEvent.press(selectionSquare5);

            _reactNative.fireEvent.press(gridSquare67);

            expect(winnerAnimation.props.visible).toBeFalsy();

          case 7:
          case "end":
            return _context3.stop();
        }
      }
    }, null, null, null, Promise);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,