04a658d0d9b4c46e78571754adaff248
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true });

exports.default = void 0;

var React = _interopRequireWildcard(require("react"));



var _AnimatedText = _interopRequireDefault(require("../../Typography/AnimatedText"));



function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

function _getRequireWildcardCache() {if (typeof WeakMap !== "function") return null;var cache = new WeakMap();_getRequireWildcardCache = function _getRequireWildcardCache() {return cache;};return cache;}

function _interopRequireWildcard(obj) {if (obj && obj.__esModule) {return obj;}if (obj === null || typeof obj !== "object" && typeof obj !== "function") {return { default: obj };}var cache = _getRequireWildcardCache();if (cache && cache.has(obj)) {return cache.get(obj);}var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {if (Object.prototype.hasOwnProperty.call(obj, key)) {var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}newObj.default = obj;if (cache) {cache.set(obj, newObj);}return newObj;}

var LabelBackground = function LabelBackground(_ref)










{var parentState = _ref.parentState,_ref$labelProps = _ref.labelProps,placeholderStyle = _ref$labelProps.placeholderStyle,baseLabelTranslateX = _ref$labelProps.baseLabelTranslateX,topPosition = _ref$labelProps.topPosition,hasActiveOutline = _ref$labelProps.hasActiveOutline,label = _ref$labelProps.label,backgroundColor = _ref$labelProps.backgroundColor,labelStyle = _ref.labelStyle;
  var hasFocus = hasActiveOutline || parentState.value;
  var opacity = parentState.labeled.interpolate({
    inputRange: [0, 1],
    outputRange: [hasFocus ? 1 : 0, 0] });

  var _ref2 =

  (0, require("../../../core/theming").useTheme)(),roundness = _ref2.roundness;
  var labelTranslationX = {
    transform: [{
      translateX: parentState.labeled.interpolate({
        inputRange: [0, 1],
        outputRange: [-baseLabelTranslateX, 0] }) }] };



  return label ? [React.createElement(require("react-native").Animated.View, {
    key: "labelBackground-view",
    pointerEvents: "none",
    style: [require("react-native").StyleSheet.absoluteFill, styles.view, {
      backgroundColor: backgroundColor,
      opacity: opacity,
      bottom: Math.max(roundness, 2) },
    labelTranslationX] }),
  React.createElement(_AnimatedText.default, {
    key: "labelBackground-text",
    style: [placeholderStyle, labelStyle, styles.outlinedLabel, {
      top: topPosition + 1,
      backgroundColor: backgroundColor,
      opacity: opacity,
      transform: [].concat(require("@babel/runtime/helpers/toConsumableArray")(labelStyle.transform), [{
        scaleY: parentState.labeled.interpolate({
          inputRange: [0, 1],
          outputRange: [0.2, 1] }) }]) }],



    numberOfLines: 1 },
  label)] : null;
};

var _default = LabelBackground;
exports.default = _default;

var styles = require("react-native").StyleSheet.create({
  view: {
    position: 'absolute',
    top: 6,
    left: 10,
    width: 8 },

  outlinedLabel: {
    position: 'absolute',
    left: 18,
    paddingHorizontal: 0,
    color: 'transparent' } });