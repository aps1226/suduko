478ec5a666cee3ca0556b20e3f13080a
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true });

exports.AppbarBackIcon = exports.default = void 0;

var React = _interopRequireWildcard(require("react"));



var _MaterialCommunityIcon = _interopRequireDefault(require("../MaterialCommunityIcon"));

function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

function _getRequireWildcardCache() {if (typeof WeakMap !== "function") return null;var cache = new WeakMap();_getRequireWildcardCache = function _getRequireWildcardCache() {return cache;};return cache;}

function _interopRequireWildcard(obj) {if (obj && obj.__esModule) {return obj;}if (obj === null || typeof obj !== "object" && typeof obj !== "function") {return { default: obj };}var cache = _getRequireWildcardCache();if (cache && cache.has(obj)) {return cache.get(obj);}var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {if (Object.prototype.hasOwnProperty.call(obj, key)) {var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}newObj.default = obj;if (cache) {cache.set(obj, newObj);}return newObj;}

var AppbarBackIcon = function AppbarBackIcon(_ref)


{var size = _ref.size,color = _ref.color;
  var iosIconSize = size - 3;
  return require("react-native").Platform.OS === 'ios' ? React.createElement(require("react-native").View, {
    style: [styles.wrapper, {
      width: size,
      height: size,
      transform: [{
        scaleX: require("react-native").I18nManager.isRTL ? -1 : 1 }] }] },


  React.createElement(require("react-native").Image, {
    source: require("../../assets/back-chevron.png"),
    style: [styles.icon, {
      tintColor: color,
      width: iosIconSize,
      height: iosIconSize }] })) :

  React.createElement(_MaterialCommunityIcon.default, {
    name: "arrow-left",
    color: color,
    size: size,
    direction: require("react-native").I18nManager.isRTL ? 'rtl' : 'ltr' });

};

exports.AppbarBackIcon = AppbarBackIcon;

var styles = require("react-native").StyleSheet.create({
  wrapper: {
    alignItems: 'center',
    justifyContent: 'center' },

  icon: {
    resizeMode: 'contain' } });



var _default = AppbarBackIcon;

exports.default = _default;