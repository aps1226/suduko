{"version":3,"sources":["CardActions.tsx"],"names":["CardActions","props","styles","React","child","compact","container","flexDirection","alignItems","justifyContent","padding"],"mappings":";;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,IAAMA,WAAW,GAAIC,SAAfD,WAAeC,CAAAA,KAAD;AAAA,SAClB,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAAiB,IAAA,KAAK,EAAE,CAACC,MAAM,CAAP,SAAA,EAAmBD,KAAK,CAAxB,KAAA;AAAxB,GAAA,CAAA,EACGE,KAAK,CAALA,QAAAA,CAAAA,GAAAA,CAAmBF,KAAK,CAAxBE,QAAAA,EAAoCC,UAAAA,KAAD;AAAA,WAClC,KAAK,CAAL,cAAA,CAAA,KAAA,IACI,KAAK,CAAL,YAAA,CAAA,KAAA,EAA0B;AACxBC,MAAAA,OAAO,EAAED,KAAK,CAALA,KAAAA,CAAAA,OAAAA,KAAwB;AADT,KAA1B,CADJ,GAHN,KAEwC;AAAA,GAAnCD,CADH,CADkB;AAAA,CAApB;;AAYAH,WAAW,CAAXA,WAAAA,GAAAA,cAAAA;;AAEA,IAAME,MAAM,GAAG,YAAA,CAAA,UAAA,CAAA,MAAA,CAAkB;AAC/BI,EAAAA,SAAS,EAAE;AACTC,IAAAA,aAAa,EADJ,KAAA;AAETC,IAAAA,UAAU,EAFD,QAAA;AAGTC,IAAAA,cAAc,EAHL,YAAA;AAITC,IAAAA,OAAO,EAAE;AAJA;AADoB,CAAlB,CAAf;;eASeV,W","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Items inside the `CardActions`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to show a list of actions inside a Card.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/card-actions.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Card, Button } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Actions>\n *       <Button>Cancel</Button>\n *       <Button>Ok</Button>\n *     </Card.Actions>\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst CardActions = (props: Props) => (\n  <View {...props} style={[styles.container, props.style]}>\n    {React.Children.map(props.children, (child) =>\n      React.isValidElement(child)\n        ? React.cloneElement(child, {\n            compact: child.props.compact !== false,\n          })\n        : child\n    )}\n  </View>\n);\n\nCardActions.displayName = 'Card.Actions';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    padding: 8,\n  },\n});\n\nexport default CardActions;\n"]}