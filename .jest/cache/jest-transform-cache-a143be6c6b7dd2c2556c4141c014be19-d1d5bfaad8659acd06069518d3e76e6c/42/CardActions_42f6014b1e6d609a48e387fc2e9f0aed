db7aa351f4396ac331405139790c0601
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var CardActions = function CardActions(props) {
  return React.createElement(_reactNative.View, _extends({}, props, {
    style: [styles.container, props.style]
  }), React.Children.map(props.children, function (child) {
    return React.isValidElement(child) ? React.cloneElement(child, {
      compact: child.props.compact !== false
    }) : child;
  }));
};

CardActions.displayName = 'Card.Actions';

var styles = _reactNative.StyleSheet.create({
  container: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'flex-start',
    padding: 8
  }
});

var _default = CardActions;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNhcmRBY3Rpb25zLnRzeCJdLCJuYW1lcyI6WyJDYXJkQWN0aW9ucyIsInByb3BzIiwic3R5bGVzIiwiUmVhY3QiLCJjaGlsZCIsImNvbXBhY3QiLCJjb250YWluZXIiLCJmbGV4RGlyZWN0aW9uIiwiYWxpZ25JdGVtcyIsImp1c3RpZnlDb250ZW50IiwicGFkZGluZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLElBQUEsS0FBQSxHQUFBLHVCQUFBLENBQUEsT0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBOztBQUNBLElBQUEsWUFBQSxHQUFBLE9BQUEsQ0FBQSxjQUFBLENBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW9DQSxJQUFNQSxXQUFXLEdBQUlDLFNBQWZELFdBQWVDLENBQUFBLEtBQUQ7QUFBQSxTQUNsQixLQUFBLENBQUEsYUFBQSxDQUFDLFlBQUEsQ0FBRCxJQUFBLEVBQUEsUUFBQSxDQUFBLEVBQUEsRUFBQSxLQUFBLEVBQUE7QUFBaUIsSUFBQSxLQUFLLEVBQUUsQ0FBQ0MsTUFBTSxDQUFQLFNBQUEsRUFBbUJELEtBQUssQ0FBeEIsS0FBQTtBQUF4QixHQUFBLENBQUEsRUFDR0UsS0FBSyxDQUFMQSxRQUFBQSxDQUFBQSxHQUFBQSxDQUFtQkYsS0FBSyxDQUF4QkUsUUFBQUEsRUFBb0NDLFVBQUFBLEtBQUQ7QUFBQSxXQUNsQyxLQUFLLENBQUwsY0FBQSxDQUFBLEtBQUEsSUFDSSxLQUFLLENBQUwsWUFBQSxDQUFBLEtBQUEsRUFBMEI7QUFDeEJDLE1BQUFBLE9BQU8sRUFBRUQsS0FBSyxDQUFMQSxLQUFBQSxDQUFBQSxPQUFBQSxLQUF3QjtBQURULEtBQTFCLENBREosR0FITixLQUV3QztBQUFBLEdBQW5DRCxDQURILENBRGtCO0FBQUEsQ0FBcEI7O0FBWUFILFdBQVcsQ0FBWEEsV0FBQUEsR0FBQUEsY0FBQUE7O0FBRUEsSUFBTUUsTUFBTSxHQUFHLFlBQUEsQ0FBQSxVQUFBLENBQUEsTUFBQSxDQUFrQjtBQUMvQkksRUFBQUEsU0FBUyxFQUFFO0FBQ1RDLElBQUFBLGFBQWEsRUFESixLQUFBO0FBRVRDLElBQUFBLFVBQVUsRUFGRCxRQUFBO0FBR1RDLElBQUFBLGNBQWMsRUFITCxZQUFBO0FBSVRDLElBQUFBLE9BQU8sRUFBRTtBQUpBO0FBRG9CLENBQWxCLENBQWY7O2VBU2VWLFciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBTdHlsZVNoZWV0LCBTdHlsZVByb3AsIFZpZXcsIFZpZXdTdHlsZSB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5cbnR5cGUgUHJvcHMgPSBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhSZWY8dHlwZW9mIFZpZXc+ICYge1xuICAvKipcbiAgICogSXRlbXMgaW5zaWRlIHRoZSBgQ2FyZEFjdGlvbnNgLlxuICAgKi9cbiAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZTtcbiAgc3R5bGU/OiBTdHlsZVByb3A8Vmlld1N0eWxlPjtcbn07XG5cbi8qKlxuICogQSBjb21wb25lbnQgdG8gc2hvdyBhIGxpc3Qgb2YgYWN0aW9ucyBpbnNpZGUgYSBDYXJkLlxuICpcbiAqIDxkaXYgY2xhc3M9XCJzY3JlZW5zaG90c1wiPlxuICogICA8ZmlndXJlPlxuICogICAgIDxpbWcgY2xhc3M9XCJtZWRpdW1cIiBzcmM9XCJzY3JlZW5zaG90cy9jYXJkLWFjdGlvbnMucG5nXCIgLz5cbiAqICAgPC9maWd1cmU+XG4gKiA8L2Rpdj5cbiAqXG4gKiAjIyBVc2FnZVxuICogYGBganNcbiAqIGltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbiAqIGltcG9ydCB7IENhcmQsIEJ1dHRvbiB9IGZyb20gJ3JlYWN0LW5hdGl2ZS1wYXBlcic7XG4gKlxuICogY29uc3QgTXlDb21wb25lbnQgPSAoKSA9PiAoXG4gKiAgIDxDYXJkPlxuICogICAgIDxDYXJkLkFjdGlvbnM+XG4gKiAgICAgICA8QnV0dG9uPkNhbmNlbDwvQnV0dG9uPlxuICogICAgICAgPEJ1dHRvbj5PazwvQnV0dG9uPlxuICogICAgIDwvQ2FyZC5BY3Rpb25zPlxuICogICA8L0NhcmQ+XG4gKiApO1xuICpcbiAqIGV4cG9ydCBkZWZhdWx0IE15Q29tcG9uZW50O1xuICogYGBgXG4gKi9cbmNvbnN0IENhcmRBY3Rpb25zID0gKHByb3BzOiBQcm9wcykgPT4gKFxuICA8VmlldyB7Li4ucHJvcHN9IHN0eWxlPXtbc3R5bGVzLmNvbnRhaW5lciwgcHJvcHMuc3R5bGVdfT5cbiAgICB7UmVhY3QuQ2hpbGRyZW4ubWFwKHByb3BzLmNoaWxkcmVuLCAoY2hpbGQpID0+XG4gICAgICBSZWFjdC5pc1ZhbGlkRWxlbWVudChjaGlsZClcbiAgICAgICAgPyBSZWFjdC5jbG9uZUVsZW1lbnQoY2hpbGQsIHtcbiAgICAgICAgICAgIGNvbXBhY3Q6IGNoaWxkLnByb3BzLmNvbXBhY3QgIT09IGZhbHNlLFxuICAgICAgICAgIH0pXG4gICAgICAgIDogY2hpbGRcbiAgICApfVxuICA8L1ZpZXc+XG4pO1xuXG5DYXJkQWN0aW9ucy5kaXNwbGF5TmFtZSA9ICdDYXJkLkFjdGlvbnMnO1xuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIGNvbnRhaW5lcjoge1xuICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgIGp1c3RpZnlDb250ZW50OiAnZmxleC1zdGFydCcsXG4gICAgcGFkZGluZzogOCxcbiAgfSxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBDYXJkQWN0aW9ucztcbiJdfQ==