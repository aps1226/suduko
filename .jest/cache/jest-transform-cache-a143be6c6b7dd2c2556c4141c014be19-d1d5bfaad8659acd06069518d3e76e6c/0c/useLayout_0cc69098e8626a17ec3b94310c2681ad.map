{"version":3,"sources":["useLayout.tsx"],"names":["height","width","measured","onLayout","e","layout","setLayout"],"mappings":";;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGe,SAAA,SAAA,GAAqB;AAClC,wBAA4B,KAAK,CAAL,QAAA,CAIzB;AAAEA,IAAAA,MAAM,EAAR,CAAA;AAAaC,IAAAA,KAAK,EAAlB,CAAA;AAAuBC,IAAAA,QAAQ,EAAE;AAAjC,GAJyB,CAA5B;AAAA;AAAA,MAAM,MAAN;AAAA,MAAM,SAAN;;AAMA,MAAMC,QAAQ,GAAG,KAAK,CAAL,WAAA,CACdC,UAAAA,CAAD,EAA0B;AACxB,gCAA0BA,CAAC,CAADA,WAAAA,CAA1B,MAAA;AAAA,QAAM,MAAN,yBAAM,MAAN;AAAA,QAAgBH,KAAhB,yBAAgBA,KAAhB;;AAEA,QAAID,MAAM,KAAKK,MAAM,CAAjBL,MAAAA,IAA4BC,KAAK,KAAKI,MAAM,CAAhD,KAAA,EAAwD;AACtD;AACD;;AAEDC,IAAAA,SAAS,CAAC;AACRN,MAAAA,MADQ,EACRA,MADQ;AAERC,MAAAA,KAFQ,EAERA,KAFQ;AAGRC,MAAAA,QAAQ,EAAE;AAHF,KAAD,CAATI;AARa,GAAA,EAcf,CAACD,MAAM,CAAP,MAAA,EAAgBA,MAAM,CAdxB,KAcE,CAde,CAAjB;AAiBA,SAAO,CAAA,MAAA,EAAP,QAAO,CAAP;AACD","sourcesContent":["import * as React from 'react';\nimport type { LayoutChangeEvent } from 'react-native';\n\nexport default function useLayout() {\n  const [layout, setLayout] = React.useState<{\n    height: number;\n    width: number;\n    measured: boolean;\n  }>({ height: 0, width: 0, measured: false });\n\n  const onLayout = React.useCallback(\n    (e: LayoutChangeEvent) => {\n      const { height, width } = e.nativeEvent.layout;\n\n      if (height === layout.height && width === layout.width) {\n        return;\n      }\n\n      setLayout({\n        height,\n        width,\n        measured: true,\n      });\n    },\n    [layout.height, layout.width]\n  );\n\n  return [layout, onLayout] as const;\n}\n"]}