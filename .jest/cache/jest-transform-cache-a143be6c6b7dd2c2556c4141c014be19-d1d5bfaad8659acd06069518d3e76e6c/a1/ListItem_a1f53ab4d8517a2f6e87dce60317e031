38231d63fcf1338d228d984efb7a040d
"use strict";var _excluded = ["left", "right", "title", "description", "onPress", "theme", "style", "titleStyle", "titleNumberOfLines", "descriptionNumberOfLines", "titleEllipsizeMode", "descriptionEllipsizeMode", "descriptionStyle"];function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) {symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});}keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {require("@babel/runtime/helpers/defineProperty")(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}

Object.defineProperty(exports, "__esModule", {
  value: true });

exports.default = void 0;

var _color = _interopRequireDefault(require("color"));

var React = _interopRequireWildcard(require("react"));



var _TouchableRipple = _interopRequireDefault(require("../TouchableRipple/TouchableRipple"));

var _Text = _interopRequireDefault(require("../Typography/Text"));



function _getRequireWildcardCache() {if (typeof WeakMap !== "function") return null;var cache = new WeakMap();_getRequireWildcardCache = function _getRequireWildcardCache() {return cache;};return cache;}

function _interopRequireWildcard(obj) {if (obj && obj.__esModule) {return obj;}if (obj === null || typeof obj !== "object" && typeof obj !== "function") {return { default: obj };}var cache = _getRequireWildcardCache();if (cache && cache.has(obj)) {return cache.get(obj);}var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {if (Object.prototype.hasOwnProperty.call(obj, key)) {var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}newObj.default = obj;if (cache) {cache.set(obj, newObj);}return newObj;}

function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

function _extends() {_extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};return _extends.apply(this, arguments);}




























var ListItem = function ListItem(_ref)














{var left = _ref.left,right = _ref.right,title = _ref.title,description = _ref.description,onPress = _ref.onPress,theme = _ref.theme,style = _ref.style,titleStyle = _ref.titleStyle,_ref$titleNumberOfLin = _ref.titleNumberOfLines,titleNumberOfLines = _ref$titleNumberOfLin === void 0 ? 1 : _ref$titleNumberOfLin,_ref$descriptionNumbe = _ref.descriptionNumberOfLines,descriptionNumberOfLines = _ref$descriptionNumbe === void 0 ? 2 : _ref$descriptionNumbe,titleEllipsizeMode = _ref.titleEllipsizeMode,descriptionEllipsizeMode = _ref.descriptionEllipsizeMode,descriptionStyle = _ref.descriptionStyle,rest = require("@babel/runtime/helpers/objectWithoutProperties")(_ref, _excluded);
  var renderDescription = function renderDescription(descriptionColor, description) {
    return typeof description === 'function' ? description({
      selectable: false,
      ellipsizeMode: descriptionEllipsizeMode,
      color: descriptionColor,
      fontSize: styles.description.fontSize }) :
    React.createElement(_Text.default, {
      selectable: false,
      numberOfLines: descriptionNumberOfLines,
      ellipsizeMode: descriptionEllipsizeMode,
      style: [styles.description, {
        color: descriptionColor },
      descriptionStyle] },
    description);
  };

  var titleColor = (0, _color.default)(theme.colors.text).alpha(0.87).rgb().string();
  var descriptionColor = (0, _color.default)(theme.colors.text).alpha(0.54).rgb().string();
  return React.createElement(_TouchableRipple.default, _extends({}, rest, {
    style: [styles.container, style],
    onPress: onPress }),
  React.createElement(require("react-native").View, {
    style: styles.row },
  left ? left({
    color: descriptionColor,
    style: description ? styles.iconMarginLeft : _objectSpread(_objectSpread({}, styles.iconMarginLeft),
    styles.marginVerticalNone) }) :

  null, React.createElement(require("react-native").View, {
    style: [styles.item, styles.content] },
  React.createElement(_Text.default, {
    selectable: false,
    ellipsizeMode: titleEllipsizeMode,
    numberOfLines: titleNumberOfLines,
    style: [styles.title, {
      color: titleColor },
    titleStyle] },
  title), description ? renderDescription(descriptionColor, description) : null), right ? right({
    color: descriptionColor,
    style: description ? styles.iconMarginRight : _objectSpread(_objectSpread({}, styles.iconMarginRight),
    styles.marginVerticalNone) }) :

  null));
};

ListItem.displayName = 'List.Item';

var styles = require("react-native").StyleSheet.create({
  container: {
    padding: 8 },

  row: {
    flexDirection: 'row' },

  title: {
    fontSize: 16 },

  description: {
    fontSize: 14 },

  marginVerticalNone: {
    marginVertical: 0 },

  iconMarginLeft: {
    marginLeft: 0,
    marginRight: 16 },

  iconMarginRight: {
    marginRight: 0 },

  item: {
    marginVertical: 6,
    paddingLeft: 8 },

  content: {
    flex: 1,
    justifyContent: 'center' } });



var _default = (0, require("../../core/theming").withTheme)(ListItem);

exports.default = _default;