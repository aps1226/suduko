761f5f04f6fb74690a5c29a24ea1e14a
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _ReactNativeViewViewConfig = _interopRequireDefault(require("../../Components/View/ReactNativeViewViewConfig"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var AndroidTextInputViewConfig = {
  uiViewClassName: 'AndroidTextInput',
  bubblingEventTypes: {
    topTextInput: {
      phasedRegistrationNames: {
        bubbled: 'onTextInput',
        captured: 'onTextInputCapture'
      }
    }
  },
  directEventTypes: {},
  validAttributes: _objectSpread(_objectSpread({}, _ReactNativeViewViewConfig.default.validAttributes), {}, {
    maxFontSizeMultiplier: true,
    placeholder: true,
    inlineImagePadding: true,
    contextMenuHidden: true,
    textShadowColor: {
      process: require("../../StyleSheet/processColor")
    },
    maxLength: true,
    selectTextOnFocus: true,
    textShadowRadius: true,
    underlineColorAndroid: {
      process: require("../../StyleSheet/processColor")
    },
    textDecorationLine: true,
    blurOnSubmit: true,
    textAlignVertical: true,
    fontStyle: true,
    textShadowOffset: true,
    selectionColor: {
      process: require("../../StyleSheet/processColor")
    },
    selection: true,
    placeholderTextColor: {
      process: require("../../StyleSheet/processColor")
    },
    importantForAutofill: true,
    lineHeight: true,
    textTransform: true,
    returnKeyType: true,
    keyboardType: true,
    multiline: true,
    color: true,
    autoCompleteType: true,
    numberOfLines: true,
    letterSpacing: true,
    returnKeyLabel: true,
    fontSize: true,
    onKeyPress: true,
    cursorColor: {
      process: require("../../StyleSheet/processColor")
    },
    text: true,
    showSoftInputOnFocus: true,
    textAlign: true,
    autoCapitalize: true,
    autoCorrect: true,
    caretHidden: true,
    secureTextEntry: true,
    textBreakStrategy: true,
    onScroll: true,
    onContentSizeChange: true,
    disableFullscreenUI: true,
    includeFontPadding: true,
    fontWeight: true,
    fontFamily: true,
    allowFontScaling: true,
    onSelectionChange: true,
    mostRecentEventCount: true,
    inlineImageLeft: true,
    editable: true,
    fontVariant: true
  })
};
module.exports = AndroidTextInputViewConfig;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFuZHJvaWRUZXh0SW5wdXRWaWV3Q29uZmlnLmpzIl0sIm5hbWVzIjpbIkFuZHJvaWRUZXh0SW5wdXRWaWV3Q29uZmlnIiwidWlWaWV3Q2xhc3NOYW1lIiwiYnViYmxpbmdFdmVudFR5cGVzIiwidG9wVGV4dElucHV0IiwicGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMiLCJidWJibGVkIiwiY2FwdHVyZWQiLCJkaXJlY3RFdmVudFR5cGVzIiwidmFsaWRBdHRyaWJ1dGVzIiwiUmVhY3ROYXRpdmVWaWV3Vmlld0NvbmZpZyIsIm1heEZvbnRTaXplTXVsdGlwbGllciIsInBsYWNlaG9sZGVyIiwiaW5saW5lSW1hZ2VQYWRkaW5nIiwiY29udGV4dE1lbnVIaWRkZW4iLCJ0ZXh0U2hhZG93Q29sb3IiLCJwcm9jZXNzIiwicmVxdWlyZSIsIm1heExlbmd0aCIsInNlbGVjdFRleHRPbkZvY3VzIiwidGV4dFNoYWRvd1JhZGl1cyIsInVuZGVybGluZUNvbG9yQW5kcm9pZCIsInRleHREZWNvcmF0aW9uTGluZSIsImJsdXJPblN1Ym1pdCIsInRleHRBbGlnblZlcnRpY2FsIiwiZm9udFN0eWxlIiwidGV4dFNoYWRvd09mZnNldCIsInNlbGVjdGlvbkNvbG9yIiwic2VsZWN0aW9uIiwicGxhY2Vob2xkZXJUZXh0Q29sb3IiLCJpbXBvcnRhbnRGb3JBdXRvZmlsbCIsImxpbmVIZWlnaHQiLCJ0ZXh0VHJhbnNmb3JtIiwicmV0dXJuS2V5VHlwZSIsImtleWJvYXJkVHlwZSIsIm11bHRpbGluZSIsImNvbG9yIiwiYXV0b0NvbXBsZXRlVHlwZSIsIm51bWJlck9mTGluZXMiLCJsZXR0ZXJTcGFjaW5nIiwicmV0dXJuS2V5TGFiZWwiLCJmb250U2l6ZSIsIm9uS2V5UHJlc3MiLCJjdXJzb3JDb2xvciIsInRleHQiLCJzaG93U29mdElucHV0T25Gb2N1cyIsInRleHRBbGlnbiIsImF1dG9DYXBpdGFsaXplIiwiYXV0b0NvcnJlY3QiLCJjYXJldEhpZGRlbiIsInNlY3VyZVRleHRFbnRyeSIsInRleHRCcmVha1N0cmF0ZWd5Iiwib25TY3JvbGwiLCJvbkNvbnRlbnRTaXplQ2hhbmdlIiwiZGlzYWJsZUZ1bGxzY3JlZW5VSSIsImluY2x1ZGVGb250UGFkZGluZyIsImZvbnRXZWlnaHQiLCJmb250RmFtaWx5IiwiYWxsb3dGb250U2NhbGluZyIsIm9uU2VsZWN0aW9uQ2hhbmdlIiwibW9zdFJlY2VudEV2ZW50Q291bnQiLCJpbmxpbmVJbWFnZUxlZnQiLCJlZGl0YWJsZSIsImZvbnRWYXJpYW50IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBVUE7Ozs7OztBQUVBOzs7Ozs7QUFHQSxJQUFNQSwwQkFBMEIsR0FBRztBQUNqQ0MsRUFBQUEsZUFBZSxFQUFFLGtCQURnQjtBQUVqQ0MsRUFBQUEsa0JBQWtCLEVBQUU7QUFDbEJDLElBQUFBLFlBQVksRUFBRTtBQUNaQyxNQUFBQSx1QkFBdUIsRUFBRTtBQUN2QkMsUUFBQUEsT0FBTyxFQUFFLGFBRGM7QUFFdkJDLFFBQUFBLFFBQVEsRUFBRTtBQUZhO0FBRGI7QUFESSxHQUZhO0FBVWpDQyxFQUFBQSxnQkFBZ0IsRUFBRSxFQVZlO0FBV2pDQyxFQUFBQSxlQUFlLGtDQUNWQyxtQ0FBMEJELGVBRGhCO0FBR2JFLElBQUFBLHFCQUFxQixFQUFFLElBSFY7QUFJYkMsSUFBQUEsV0FBVyxFQUFFLElBSkE7QUFLYkMsSUFBQUEsa0JBQWtCLEVBQUUsSUFMUDtBQU1iQyxJQUFBQSxpQkFBaUIsRUFBRSxJQU5OO0FBT2JDLElBQUFBLGVBQWUsRUFBRTtBQUFDQyxNQUFBQSxPQUFPLEVBQUVDLE9BQU87QUFBakIsS0FQSjtBQVFiQyxJQUFBQSxTQUFTLEVBQUUsSUFSRTtBQVNiQyxJQUFBQSxpQkFBaUIsRUFBRSxJQVROO0FBVWJDLElBQUFBLGdCQUFnQixFQUFFLElBVkw7QUFXYkMsSUFBQUEscUJBQXFCLEVBQUU7QUFBQ0wsTUFBQUEsT0FBTyxFQUFFQyxPQUFPO0FBQWpCLEtBWFY7QUFZYkssSUFBQUEsa0JBQWtCLEVBQUUsSUFaUDtBQWFiQyxJQUFBQSxZQUFZLEVBQUUsSUFiRDtBQWNiQyxJQUFBQSxpQkFBaUIsRUFBRSxJQWROO0FBZWJDLElBQUFBLFNBQVMsRUFBRSxJQWZFO0FBZ0JiQyxJQUFBQSxnQkFBZ0IsRUFBRSxJQWhCTDtBQWlCYkMsSUFBQUEsY0FBYyxFQUFFO0FBQUNYLE1BQUFBLE9BQU8sRUFBRUMsT0FBTztBQUFqQixLQWpCSDtBQWtCYlcsSUFBQUEsU0FBUyxFQUFFLElBbEJFO0FBbUJiQyxJQUFBQSxvQkFBb0IsRUFBRTtBQUFDYixNQUFBQSxPQUFPLEVBQUVDLE9BQU87QUFBakIsS0FuQlQ7QUFvQmJhLElBQUFBLG9CQUFvQixFQUFFLElBcEJUO0FBcUJiQyxJQUFBQSxVQUFVLEVBQUUsSUFyQkM7QUFzQmJDLElBQUFBLGFBQWEsRUFBRSxJQXRCRjtBQXVCYkMsSUFBQUEsYUFBYSxFQUFFLElBdkJGO0FBd0JiQyxJQUFBQSxZQUFZLEVBQUUsSUF4QkQ7QUF5QmJDLElBQUFBLFNBQVMsRUFBRSxJQXpCRTtBQTBCYkMsSUFBQUEsS0FBSyxFQUFFLElBMUJNO0FBMkJiQyxJQUFBQSxnQkFBZ0IsRUFBRSxJQTNCTDtBQTRCYkMsSUFBQUEsYUFBYSxFQUFFLElBNUJGO0FBNkJiQyxJQUFBQSxhQUFhLEVBQUUsSUE3QkY7QUE4QmJDLElBQUFBLGNBQWMsRUFBRSxJQTlCSDtBQStCYkMsSUFBQUEsUUFBUSxFQUFFLElBL0JHO0FBZ0NiQyxJQUFBQSxVQUFVLEVBQUUsSUFoQ0M7QUFpQ2JDLElBQUFBLFdBQVcsRUFBRTtBQUFDM0IsTUFBQUEsT0FBTyxFQUFFQyxPQUFPO0FBQWpCLEtBakNBO0FBa0NiMkIsSUFBQUEsSUFBSSxFQUFFLElBbENPO0FBbUNiQyxJQUFBQSxvQkFBb0IsRUFBRSxJQW5DVDtBQW9DYkMsSUFBQUEsU0FBUyxFQUFFLElBcENFO0FBcUNiQyxJQUFBQSxjQUFjLEVBQUUsSUFyQ0g7QUFzQ2JDLElBQUFBLFdBQVcsRUFBRSxJQXRDQTtBQXVDYkMsSUFBQUEsV0FBVyxFQUFFLElBdkNBO0FBd0NiQyxJQUFBQSxlQUFlLEVBQUUsSUF4Q0o7QUF5Q2JDLElBQUFBLGlCQUFpQixFQUFFLElBekNOO0FBMENiQyxJQUFBQSxRQUFRLEVBQUUsSUExQ0c7QUEyQ2JDLElBQUFBLG1CQUFtQixFQUFFLElBM0NSO0FBNENiQyxJQUFBQSxtQkFBbUIsRUFBRSxJQTVDUjtBQTZDYkMsSUFBQUEsa0JBQWtCLEVBQUUsSUE3Q1A7QUE4Q2JDLElBQUFBLFVBQVUsRUFBRSxJQTlDQztBQStDYkMsSUFBQUEsVUFBVSxFQUFFLElBL0NDO0FBZ0RiQyxJQUFBQSxnQkFBZ0IsRUFBRSxJQWhETDtBQWlEYkMsSUFBQUEsaUJBQWlCLEVBQUUsSUFqRE47QUFrRGJDLElBQUFBLG9CQUFvQixFQUFFLElBbERUO0FBbURiQyxJQUFBQSxlQUFlLEVBQUUsSUFuREo7QUFvRGJDLElBQUFBLFFBQVEsRUFBRSxJQXBERztBQXFEYkMsSUFBQUEsV0FBVyxFQUFFO0FBckRBO0FBWGtCLENBQW5DO0FBb0VBQyxNQUFNLENBQUNDLE9BQVAsR0FBa0JoRSwwQkFBbEIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmbG93IHN0cmljdC1sb2NhbFxuICogQGZvcm1hdFxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IFJlYWN0TmF0aXZlVmlld1ZpZXdDb25maWcgZnJvbSAnLi4vLi4vQ29tcG9uZW50cy9WaWV3L1JlYWN0TmF0aXZlVmlld1ZpZXdDb25maWcnO1xuaW1wb3J0IHR5cGUge1JlYWN0TmF0aXZlQmFzZUNvbXBvbmVudFZpZXdDb25maWd9IGZyb20gJy4uLy4uL1JlbmRlcmVyL3NoaW1zL1JlYWN0TmF0aXZlVHlwZXMnO1xuXG5jb25zdCBBbmRyb2lkVGV4dElucHV0Vmlld0NvbmZpZyA9IHtcbiAgdWlWaWV3Q2xhc3NOYW1lOiAnQW5kcm9pZFRleHRJbnB1dCcsXG4gIGJ1YmJsaW5nRXZlbnRUeXBlczoge1xuICAgIHRvcFRleHRJbnB1dDoge1xuICAgICAgcGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6IHtcbiAgICAgICAgYnViYmxlZDogJ29uVGV4dElucHV0JyxcbiAgICAgICAgY2FwdHVyZWQ6ICdvblRleHRJbnB1dENhcHR1cmUnLFxuICAgICAgfSxcbiAgICB9LFxuICB9LFxuICBkaXJlY3RFdmVudFR5cGVzOiB7fSxcbiAgdmFsaWRBdHRyaWJ1dGVzOiB7XG4gICAgLi4uUmVhY3ROYXRpdmVWaWV3Vmlld0NvbmZpZy52YWxpZEF0dHJpYnV0ZXMsXG5cbiAgICBtYXhGb250U2l6ZU11bHRpcGxpZXI6IHRydWUsXG4gICAgcGxhY2Vob2xkZXI6IHRydWUsXG4gICAgaW5saW5lSW1hZ2VQYWRkaW5nOiB0cnVlLFxuICAgIGNvbnRleHRNZW51SGlkZGVuOiB0cnVlLFxuICAgIHRleHRTaGFkb3dDb2xvcjoge3Byb2Nlc3M6IHJlcXVpcmUoJy4uLy4uL1N0eWxlU2hlZXQvcHJvY2Vzc0NvbG9yJyl9LFxuICAgIG1heExlbmd0aDogdHJ1ZSxcbiAgICBzZWxlY3RUZXh0T25Gb2N1czogdHJ1ZSxcbiAgICB0ZXh0U2hhZG93UmFkaXVzOiB0cnVlLFxuICAgIHVuZGVybGluZUNvbG9yQW5kcm9pZDoge3Byb2Nlc3M6IHJlcXVpcmUoJy4uLy4uL1N0eWxlU2hlZXQvcHJvY2Vzc0NvbG9yJyl9LFxuICAgIHRleHREZWNvcmF0aW9uTGluZTogdHJ1ZSxcbiAgICBibHVyT25TdWJtaXQ6IHRydWUsXG4gICAgdGV4dEFsaWduVmVydGljYWw6IHRydWUsXG4gICAgZm9udFN0eWxlOiB0cnVlLFxuICAgIHRleHRTaGFkb3dPZmZzZXQ6IHRydWUsXG4gICAgc2VsZWN0aW9uQ29sb3I6IHtwcm9jZXNzOiByZXF1aXJlKCcuLi8uLi9TdHlsZVNoZWV0L3Byb2Nlc3NDb2xvcicpfSxcbiAgICBzZWxlY3Rpb246IHRydWUsXG4gICAgcGxhY2Vob2xkZXJUZXh0Q29sb3I6IHtwcm9jZXNzOiByZXF1aXJlKCcuLi8uLi9TdHlsZVNoZWV0L3Byb2Nlc3NDb2xvcicpfSxcbiAgICBpbXBvcnRhbnRGb3JBdXRvZmlsbDogdHJ1ZSxcbiAgICBsaW5lSGVpZ2h0OiB0cnVlLFxuICAgIHRleHRUcmFuc2Zvcm06IHRydWUsXG4gICAgcmV0dXJuS2V5VHlwZTogdHJ1ZSxcbiAgICBrZXlib2FyZFR5cGU6IHRydWUsXG4gICAgbXVsdGlsaW5lOiB0cnVlLFxuICAgIGNvbG9yOiB0cnVlLFxuICAgIGF1dG9Db21wbGV0ZVR5cGU6IHRydWUsXG4gICAgbnVtYmVyT2ZMaW5lczogdHJ1ZSxcbiAgICBsZXR0ZXJTcGFjaW5nOiB0cnVlLFxuICAgIHJldHVybktleUxhYmVsOiB0cnVlLFxuICAgIGZvbnRTaXplOiB0cnVlLFxuICAgIG9uS2V5UHJlc3M6IHRydWUsXG4gICAgY3Vyc29yQ29sb3I6IHtwcm9jZXNzOiByZXF1aXJlKCcuLi8uLi9TdHlsZVNoZWV0L3Byb2Nlc3NDb2xvcicpfSxcbiAgICB0ZXh0OiB0cnVlLFxuICAgIHNob3dTb2Z0SW5wdXRPbkZvY3VzOiB0cnVlLFxuICAgIHRleHRBbGlnbjogdHJ1ZSxcbiAgICBhdXRvQ2FwaXRhbGl6ZTogdHJ1ZSxcbiAgICBhdXRvQ29ycmVjdDogdHJ1ZSxcbiAgICBjYXJldEhpZGRlbjogdHJ1ZSxcbiAgICBzZWN1cmVUZXh0RW50cnk6IHRydWUsXG4gICAgdGV4dEJyZWFrU3RyYXRlZ3k6IHRydWUsXG4gICAgb25TY3JvbGw6IHRydWUsXG4gICAgb25Db250ZW50U2l6ZUNoYW5nZTogdHJ1ZSxcbiAgICBkaXNhYmxlRnVsbHNjcmVlblVJOiB0cnVlLFxuICAgIGluY2x1ZGVGb250UGFkZGluZzogdHJ1ZSxcbiAgICBmb250V2VpZ2h0OiB0cnVlLFxuICAgIGZvbnRGYW1pbHk6IHRydWUsXG4gICAgYWxsb3dGb250U2NhbGluZzogdHJ1ZSxcbiAgICBvblNlbGVjdGlvbkNoYW5nZTogdHJ1ZSxcbiAgICBtb3N0UmVjZW50RXZlbnRDb3VudDogdHJ1ZSxcbiAgICBpbmxpbmVJbWFnZUxlZnQ6IHRydWUsXG4gICAgZWRpdGFibGU6IHRydWUsXG4gICAgZm9udFZhcmlhbnQ6IHRydWUsXG4gIH0sXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IChBbmRyb2lkVGV4dElucHV0Vmlld0NvbmZpZzogUmVhY3ROYXRpdmVCYXNlQ29tcG9uZW50Vmlld0NvbmZpZzw+KTtcbiJdfQ==