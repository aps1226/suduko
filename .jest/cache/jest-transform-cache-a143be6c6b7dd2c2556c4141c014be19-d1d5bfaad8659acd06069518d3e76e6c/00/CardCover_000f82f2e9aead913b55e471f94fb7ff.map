{"version":3,"sources":["CardCover.tsx"],"names":["CardCover","rest","roundness","index","total","coverStyle","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","styles","container","height","backgroundColor","grey200","overflow","image","flex","width","padding","justifyContent"],"mappings":";;;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,sBAAA;;AACA,IAAA,OAAA,GAAA,OAAA,uBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,IAAMA,SAAS,GAAG,SAAZA,SAAY,OAAoD;AAAA,MAAnD,KAAmD,QAAnD,KAAmD;AAAA,MAAnD,KAAmD,QAAnD,KAAmD;AAAA,MAAnD,KAAmD,QAAnD,KAAmD;AAAA,MAAnD,KAAmD,QAAnD,KAAmD;AAAA,MAAlBC,IAAkB;AACpE,MAAQC,SAAR,GAAA,KAAA,CAAQA,SAAR;AAEA,MAAA,UAAA;;AAEA,MAAIC,KAAK,KAAT,CAAA,EAAiB;AACf,QAAIC,KAAK,KAAT,CAAA,EAAiB;AACfC,MAAAA,UAAU,GAAG;AACXC,QAAAA,YAAY,EAAEJ;AADH,OAAbG;AADF,KAAA,MAIO;AACLA,MAAAA,UAAU,GAAG;AACXE,QAAAA,mBAAmB,EADR,SAAA;AAEXC,QAAAA,oBAAoB,EAAEN;AAFX,OAAbG;AAID;AAVH,GAAA,MAWO,IAAI,OAAA,KAAA,KAAA,QAAA,IAA6BF,KAAK,KAAKC,KAAK,GAAhD,CAAA,EAAsD;AAC3DC,IAAAA,UAAU,GAAG;AACXI,MAAAA,sBAAsB,EAAEP;AADb,KAAbG;AAGD;;AAED,SACE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,EAAA;AAAM,IAAA,KAAK,EAAE,CAACK,MAAM,CAAP,SAAA,EAAA,UAAA,EAAA,KAAA;AAAb,GAAA,EACE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,KAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAAiB,IAAA,KAAK,EAAE,CAACA,MAAM,CAAP,KAAA,EAAA,UAAA;AAAxB,GAAA,CAAA,CADF,CADF;AAtBF,CAAA;;;AA6BAV,SAAS,CAATA,WAAAA,GAAAA,YAAAA;;AACA,IAAMU,MAAM,GAAG,YAAA,CAAA,UAAA,CAAA,MAAA,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EADG,GAAA;AAETC,IAAAA,eAAe,EAAEC,OAAAA,CAFR,OAAA;AAGTC,IAAAA,QAAQ,EAAE;AAHD,GADoB;AAM/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EADC,CAAA;AAELL,IAAAA,MAAM,EAFD,SAAA;AAGLM,IAAAA,KAAK,EAHA,SAAA;AAILC,IAAAA,OAAO,EAJF,EAAA;AAKLC,IAAAA,cAAc,EAAE;AALX;AANwB,CAAlB,CAAf;;eAee,CAAA,GAAA,QAAA,CAAA,SAAA,EAAA,SAAA,C","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View, ViewStyle, Image, StyleProp } from 'react-native';\nimport { withTheme } from '../../core/theming';\nimport { grey200 } from '../../styles/colors';\n\ntype Props = React.ComponentPropsWithRef<typeof Image> & {\n  /**\n   * @internal\n   */\n  index?: number;\n  /**\n   * @internal\n   */\n  total?: number;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to show a cover image inside a Card.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/card-cover.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Card } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Cover source={{ uri: 'https://picsum.photos/700' }} />\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends Image props https://reactnative.dev/docs/image#props\n */\nconst CardCover = ({ index, total, style, theme, ...rest }: Props) => {\n  const { roundness } = theme;\n\n  let coverStyle;\n\n  if (index === 0) {\n    if (total === 1) {\n      coverStyle = {\n        borderRadius: roundness,\n      };\n    } else {\n      coverStyle = {\n        borderTopLeftRadius: roundness,\n        borderTopRightRadius: roundness,\n      };\n    }\n  } else if (typeof total === 'number' && index === total - 1) {\n    coverStyle = {\n      borderBottomLeftRadius: roundness,\n    };\n  }\n\n  return (\n    <View style={[styles.container, coverStyle, style]}>\n      <Image {...rest} style={[styles.image, coverStyle]} />\n    </View>\n  );\n};\n\nCardCover.displayName = 'Card.Cover';\nconst styles = StyleSheet.create({\n  container: {\n    height: 195,\n    backgroundColor: grey200,\n    overflow: 'hidden',\n  },\n  image: {\n    flex: 1,\n    height: undefined,\n    width: undefined,\n    padding: 16,\n    justifyContent: 'flex-end',\n  },\n});\n\nexport default withTheme(CardCover);\n\n// @component-docs ignore-next-line\nexport { CardCover };\n"]}