1a0ec0dc835ca3f5b7a668b29055c6c0
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = renderWithRedux;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _redux = require("redux");

var _reactRedux = require("react-redux");

var _index = _interopRequireDefault(require("../../state/reducers/index"));

var _reactNative = require("@testing-library/react-native");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function renderWithRedux(component) {
  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      initialState = _ref.initialState,
      _ref$store = _ref.store,
      store = _ref$store === void 0 ? (0, _redux.createStore)(_index.default, initialState) : _ref$store;

  return _objectSpread(_objectSpread({}, (0, _reactNative.render)(_react.default.createElement(_reactRedux.Provider, {
    store: store
  }, component))), {}, {
    store: store
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYXNoZWVcXERvY3VtZW50c1xcSmF2YXNjcmlwdFxcUmVhY3RcXFJlYWN0IE5hdGl2ZVxcc3VkdWtvXFxzcmNcXF9fdGVzdHNfX1xcQ29tcG9uZW50IFRlc3RzXFxyZW5kZXJXaXRoUmVkdXgudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7QUFHYyxTQUFVLGVBQVYsQ0FDWixTQURZLEVBR2tEO0FBQUEsaUZBQUYsRUFBRTtBQUFBLE1BQTdELFlBQTZELFFBQTdELFlBQTZEO0FBQUEsd0JBQWhELEtBQWdEO0FBQUEsTUFBaEQsS0FBZ0QsMkJBQXhDLHdCQUFZLGNBQVosRUFBcUIsWUFBckIsQ0FBd0M7O0FBRTlELHlDQUNLLHlCQUFPLGVBQUEsYUFBQSxDQUFDLG9CQUFELEVBQVM7QUFBQyxJQUFBLEtBQUssRUFBSTtBQUFWLEdBQVQsRUFBMkIsU0FBM0IsQ0FBUCxDQURMO0FBRUUsSUFBQSxLQUFLLEVBQUw7QUFGRjtBQUlEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgY3JlYXRlU3RvcmUsIGFwcGx5TWlkZGxld2FyZSB9IGZyb20gJ3JlZHV4JztcclxuaW1wb3J0IHsgUHJvdmlkZXIgfSBmcm9tICdyZWFjdC1yZWR1eCc7XHJcbmltcG9ydCByZWR1Y2VycyBmcm9tICcuLi8uLi9zdGF0ZS9yZWR1Y2Vycy9pbmRleCc7XHJcbmltcG9ydCB7IHJlbmRlciB9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QtbmF0aXZlJztcclxuXHJcbi8vRnVuY3Rpb24gdG8gcHJvdmlkZSBtb2NrU3RvcmUgZm9yIGNvbXBvbmVudHMgbWFuYWdlZCBieSByZWR1eC5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcmVuZGVyV2l0aFJlZHV4KFxyXG4gIGNvbXBvbmVudDpKU1guRWxlbWVudCxcclxuICAvL0B0cy1pZ25vcmVcclxuICB7aW5pdGlhbFN0YXRlLHN0b3JlID0gY3JlYXRlU3RvcmUocmVkdWNlcnMsaW5pdGlhbFN0YXRlKX0gPSB7fVxyXG4pe1xyXG4gIHJldHVybiB7XHJcbiAgICAuLi5yZW5kZXIoPFByb3ZpZGVyIHN0b3JlID0ge3N0b3JlfT57Y29tcG9uZW50fTwvUHJvdmlkZXI+KSxcclxuICAgIHN0b3JlXHJcbiAgfVxyXG59Il19