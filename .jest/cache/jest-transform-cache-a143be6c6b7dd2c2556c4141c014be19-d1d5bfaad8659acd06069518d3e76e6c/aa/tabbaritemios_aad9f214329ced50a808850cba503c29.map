{"version":3,"sources":["tab-bar-item-ios.js"],"names":["TabBarIOS","Item","ICON_PROP_NAMES","SELECTED_ICON_PROP_NAMES","arePropsEqual","keys","prevProps","nextProps","areIconPropsEqual","areSelectedIconPropsEqual","createTabBarItemIOSComponent","IconNamePropType","getImageSource","state","icon","undefined","selectedIcon","updateIconSource","updateSelectedIconSource","props","iconName","iconSize","iconColor","setState","selectedIconName","selectedIconColor","PureComponent","defaultProps"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-unused-prop-types */\nimport isEqual from \"lodash.isequal\";\nimport pick from \"lodash.pick\";\nimport React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nconst TabBarIOS = {\n  Item: function () {},\n};\n\nconst ICON_PROP_NAMES = [\"iconName\", \"iconSize\", \"iconColor\"];\nconst SELECTED_ICON_PROP_NAMES = [\n  ...ICON_PROP_NAMES,\n  \"selectedIconName\",\n  \"selectedIconColor\",\n];\n\nconst arePropsEqual = (keys) => (prevProps, nextProps) =>\n  isEqual(pick(prevProps, keys), pick(nextProps, keys));\n\nconst areIconPropsEqual = arePropsEqual(ICON_PROP_NAMES);\nconst areSelectedIconPropsEqual = arePropsEqual(SELECTED_ICON_PROP_NAMES);\n\nexport default function createTabBarItemIOSComponent(\n  IconNamePropType,\n  getImageSource\n) {\n  return class TabBarItemIOS extends PureComponent {\n    static defaultProps = {\n      iconSize: 30,\n    };\n\n    state = {\n      icon: undefined,\n      selectedIcon: undefined,\n    };\n\n    componentDidMount() {\n      this.updateIconSource();\n      this.updateSelectedIconSource();\n    }\n\n    componentDidUpdate(prevProps) {\n      if (!areIconPropsEqual(prevProps, this.props)) {\n        this.updateIconSource();\n      }\n      if (!areSelectedIconPropsEqual(prevProps, this.props)) {\n        this.updateSelectedIconSource();\n      }\n    }\n\n    async updateIconSource() {\n      const { iconName, iconSize, iconColor } = this.props;\n      if (iconName) {\n        const icon = await getImageSource(iconName, iconSize, iconColor);\n        this.setState({ icon });\n        // eslint-disable-next-line react/destructuring-assignment\n      } else if (this.state.icon) {\n        this.setState({ icon: undefined });\n      }\n    }\n\n    async updateSelectedIconSource() {\n      const {\n        iconName,\n        iconColor,\n        iconSize,\n        selectedIconName,\n        selectedIconColor,\n      } = this.props;\n      if (selectedIconName || selectedIconColor) {\n        const selectedIcon = await getImageSource(\n          selectedIconName || iconName,\n          iconSize,\n          selectedIconColor || iconColor\n        );\n        this.setState({ selectedIcon });\n        // eslint-disable-next-line react/destructuring-assignment\n      } else if (this.state.selectedIcon) {\n        this.setState({ selectedIcon: undefined });\n      }\n    }\n\n    render() {\n      return <TabBarIOS.Item {...this.state} {...this.props} />;\n    }\n  };\n}\n"]}