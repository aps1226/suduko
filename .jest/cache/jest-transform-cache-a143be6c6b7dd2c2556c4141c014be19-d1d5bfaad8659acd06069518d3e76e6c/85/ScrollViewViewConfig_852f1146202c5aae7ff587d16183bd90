7070ed5ad34db94278cb111db03dd9a4
'use strict';

var ScrollViewViewConfig = {
  uiViewClassName: 'RCTScrollView',
  bubblingEventTypes: {},
  directEventTypes: {
    topScrollToTop: {
      registrationName: 'onScrollToTop'
    }
  },
  validAttributes: {
    alwaysBounceHorizontal: true,
    alwaysBounceVertical: true,
    automaticallyAdjustContentInsets: true,
    bounces: true,
    bouncesZoom: true,
    canCancelContentTouches: true,
    centerContent: true,
    contentInset: {
      diff: require("../../Utilities/differ/pointsDiffer")
    },
    contentOffset: {
      diff: require("../../Utilities/differ/pointsDiffer")
    },
    contentInsetAdjustmentBehavior: true,
    decelerationRate: true,
    directionalLockEnabled: true,
    disableIntervalMomentum: true,
    endFillColor: {
      process: require("../../StyleSheet/processColor")
    },
    fadingEdgeLength: true,
    indicatorStyle: true,
    keyboardDismissMode: true,
    maintainVisibleContentPosition: true,
    maximumZoomScale: true,
    minimumZoomScale: true,
    nestedScrollEnabled: true,
    onMomentumScrollBegin: true,
    onMomentumScrollEnd: true,
    onScroll: true,
    onScrollBeginDrag: true,
    onScrollEndDrag: true,
    onScrollToTop: true,
    overScrollMode: true,
    pagingEnabled: true,
    persistentScrollbar: true,
    pinchGestureEnabled: true,
    scrollEnabled: true,
    scrollEventThrottle: true,
    scrollIndicatorInsets: {
      diff: require("../../Utilities/differ/pointsDiffer")
    },
    scrollPerfTag: true,
    scrollToOverflowEnabled: true,
    scrollsToTop: true,
    sendMomentumEvents: true,
    showsHorizontalScrollIndicator: true,
    showsVerticalScrollIndicator: true,
    snapToAlignment: true,
    snapToEnd: true,
    snapToInterval: true,
    snapToOffsets: true,
    snapToStart: true,
    zoomScale: true,
    DEPRECATED_sendUpdatedChildFrames: true
  }
};
module.exports = ScrollViewViewConfig;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNjcm9sbFZpZXdWaWV3Q29uZmlnLmpzIl0sIm5hbWVzIjpbIlNjcm9sbFZpZXdWaWV3Q29uZmlnIiwidWlWaWV3Q2xhc3NOYW1lIiwiYnViYmxpbmdFdmVudFR5cGVzIiwiZGlyZWN0RXZlbnRUeXBlcyIsInRvcFNjcm9sbFRvVG9wIiwicmVnaXN0cmF0aW9uTmFtZSIsInZhbGlkQXR0cmlidXRlcyIsImFsd2F5c0JvdW5jZUhvcml6b250YWwiLCJhbHdheXNCb3VuY2VWZXJ0aWNhbCIsImF1dG9tYXRpY2FsbHlBZGp1c3RDb250ZW50SW5zZXRzIiwiYm91bmNlcyIsImJvdW5jZXNab29tIiwiY2FuQ2FuY2VsQ29udGVudFRvdWNoZXMiLCJjZW50ZXJDb250ZW50IiwiY29udGVudEluc2V0IiwiZGlmZiIsInJlcXVpcmUiLCJjb250ZW50T2Zmc2V0IiwiY29udGVudEluc2V0QWRqdXN0bWVudEJlaGF2aW9yIiwiZGVjZWxlcmF0aW9uUmF0ZSIsImRpcmVjdGlvbmFsTG9ja0VuYWJsZWQiLCJkaXNhYmxlSW50ZXJ2YWxNb21lbnR1bSIsImVuZEZpbGxDb2xvciIsInByb2Nlc3MiLCJmYWRpbmdFZGdlTGVuZ3RoIiwiaW5kaWNhdG9yU3R5bGUiLCJrZXlib2FyZERpc21pc3NNb2RlIiwibWFpbnRhaW5WaXNpYmxlQ29udGVudFBvc2l0aW9uIiwibWF4aW11bVpvb21TY2FsZSIsIm1pbmltdW1ab29tU2NhbGUiLCJuZXN0ZWRTY3JvbGxFbmFibGVkIiwib25Nb21lbnR1bVNjcm9sbEJlZ2luIiwib25Nb21lbnR1bVNjcm9sbEVuZCIsIm9uU2Nyb2xsIiwib25TY3JvbGxCZWdpbkRyYWciLCJvblNjcm9sbEVuZERyYWciLCJvblNjcm9sbFRvVG9wIiwib3ZlclNjcm9sbE1vZGUiLCJwYWdpbmdFbmFibGVkIiwicGVyc2lzdGVudFNjcm9sbGJhciIsInBpbmNoR2VzdHVyZUVuYWJsZWQiLCJzY3JvbGxFbmFibGVkIiwic2Nyb2xsRXZlbnRUaHJvdHRsZSIsInNjcm9sbEluZGljYXRvckluc2V0cyIsInNjcm9sbFBlcmZUYWciLCJzY3JvbGxUb092ZXJmbG93RW5hYmxlZCIsInNjcm9sbHNUb1RvcCIsInNlbmRNb21lbnR1bUV2ZW50cyIsInNob3dzSG9yaXpvbnRhbFNjcm9sbEluZGljYXRvciIsInNob3dzVmVydGljYWxTY3JvbGxJbmRpY2F0b3IiLCJzbmFwVG9BbGlnbm1lbnQiLCJzbmFwVG9FbmQiLCJzbmFwVG9JbnRlcnZhbCIsInNuYXBUb09mZnNldHMiLCJzbmFwVG9TdGFydCIsInpvb21TY2FsZSIsIkRFUFJFQ0FURURfc2VuZFVwZGF0ZWRDaGlsZEZyYW1lcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQVVBOztBQUlBLElBQU1BLG9CQUFvQixHQUFHO0FBQzNCQyxFQUFBQSxlQUFlLEVBQUUsZUFEVTtBQUUzQkMsRUFBQUEsa0JBQWtCLEVBQUUsRUFGTztBQUczQkMsRUFBQUEsZ0JBQWdCLEVBQUU7QUFDaEJDLElBQUFBLGNBQWMsRUFBRTtBQUNkQyxNQUFBQSxnQkFBZ0IsRUFBRTtBQURKO0FBREEsR0FIUztBQVEzQkMsRUFBQUEsZUFBZSxFQUFFO0FBQ2ZDLElBQUFBLHNCQUFzQixFQUFFLElBRFQ7QUFFZkMsSUFBQUEsb0JBQW9CLEVBQUUsSUFGUDtBQUdmQyxJQUFBQSxnQ0FBZ0MsRUFBRSxJQUhuQjtBQUlmQyxJQUFBQSxPQUFPLEVBQUUsSUFKTTtBQUtmQyxJQUFBQSxXQUFXLEVBQUUsSUFMRTtBQU1mQyxJQUFBQSx1QkFBdUIsRUFBRSxJQU5WO0FBT2ZDLElBQUFBLGFBQWEsRUFBRSxJQVBBO0FBUWZDLElBQUFBLFlBQVksRUFBRTtBQUFDQyxNQUFBQSxJQUFJLEVBQUVDLE9BQU87QUFBZCxLQVJDO0FBU2ZDLElBQUFBLGFBQWEsRUFBRTtBQUFDRixNQUFBQSxJQUFJLEVBQUVDLE9BQU87QUFBZCxLQVRBO0FBVWZFLElBQUFBLDhCQUE4QixFQUFFLElBVmpCO0FBV2ZDLElBQUFBLGdCQUFnQixFQUFFLElBWEg7QUFZZkMsSUFBQUEsc0JBQXNCLEVBQUUsSUFaVDtBQWFmQyxJQUFBQSx1QkFBdUIsRUFBRSxJQWJWO0FBY2ZDLElBQUFBLFlBQVksRUFBRTtBQUFDQyxNQUFBQSxPQUFPLEVBQUVQLE9BQU87QUFBakIsS0FkQztBQWVmUSxJQUFBQSxnQkFBZ0IsRUFBRSxJQWZIO0FBZ0JmQyxJQUFBQSxjQUFjLEVBQUUsSUFoQkQ7QUFpQmZDLElBQUFBLG1CQUFtQixFQUFFLElBakJOO0FBa0JmQyxJQUFBQSw4QkFBOEIsRUFBRSxJQWxCakI7QUFtQmZDLElBQUFBLGdCQUFnQixFQUFFLElBbkJIO0FBb0JmQyxJQUFBQSxnQkFBZ0IsRUFBRSxJQXBCSDtBQXFCZkMsSUFBQUEsbUJBQW1CLEVBQUUsSUFyQk47QUFzQmZDLElBQUFBLHFCQUFxQixFQUFFLElBdEJSO0FBdUJmQyxJQUFBQSxtQkFBbUIsRUFBRSxJQXZCTjtBQXdCZkMsSUFBQUEsUUFBUSxFQUFFLElBeEJLO0FBeUJmQyxJQUFBQSxpQkFBaUIsRUFBRSxJQXpCSjtBQTBCZkMsSUFBQUEsZUFBZSxFQUFFLElBMUJGO0FBMkJmQyxJQUFBQSxhQUFhLEVBQUUsSUEzQkE7QUE0QmZDLElBQUFBLGNBQWMsRUFBRSxJQTVCRDtBQTZCZkMsSUFBQUEsYUFBYSxFQUFFLElBN0JBO0FBOEJmQyxJQUFBQSxtQkFBbUIsRUFBRSxJQTlCTjtBQStCZkMsSUFBQUEsbUJBQW1CLEVBQUUsSUEvQk47QUFnQ2ZDLElBQUFBLGFBQWEsRUFBRSxJQWhDQTtBQWlDZkMsSUFBQUEsbUJBQW1CLEVBQUUsSUFqQ047QUFrQ2ZDLElBQUFBLHFCQUFxQixFQUFFO0FBQ3JCNUIsTUFBQUEsSUFBSSxFQUFFQyxPQUFPO0FBRFEsS0FsQ1I7QUFxQ2Y0QixJQUFBQSxhQUFhLEVBQUUsSUFyQ0E7QUFzQ2ZDLElBQUFBLHVCQUF1QixFQUFFLElBdENWO0FBdUNmQyxJQUFBQSxZQUFZLEVBQUUsSUF2Q0M7QUF3Q2ZDLElBQUFBLGtCQUFrQixFQUFFLElBeENMO0FBeUNmQyxJQUFBQSw4QkFBOEIsRUFBRSxJQXpDakI7QUEwQ2ZDLElBQUFBLDRCQUE0QixFQUFFLElBMUNmO0FBMkNmQyxJQUFBQSxlQUFlLEVBQUUsSUEzQ0Y7QUE0Q2ZDLElBQUFBLFNBQVMsRUFBRSxJQTVDSTtBQTZDZkMsSUFBQUEsY0FBYyxFQUFFLElBN0NEO0FBOENmQyxJQUFBQSxhQUFhLEVBQUUsSUE5Q0E7QUErQ2ZDLElBQUFBLFdBQVcsRUFBRSxJQS9DRTtBQWdEZkMsSUFBQUEsU0FBUyxFQUFFLElBaERJO0FBa0RmQyxJQUFBQSxpQ0FBaUMsRUFBRTtBQWxEcEI7QUFSVSxDQUE3QjtBQThEQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWtCMUQsb0JBQWxCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvdyBzdHJpY3QtbG9jYWxcbiAqIEBmb3JtYXRcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmltcG9ydCB0eXBlIHtHZW5lcmF0ZWRWaWV3Q29uZmlnfSBmcm9tICcuLi8uLi9VdGlsaXRpZXMvcmVnaXN0ZXJHZW5lcmF0ZWRWaWV3Q29uZmlnJztcblxuY29uc3QgU2Nyb2xsVmlld1ZpZXdDb25maWcgPSB7XG4gIHVpVmlld0NsYXNzTmFtZTogJ1JDVFNjcm9sbFZpZXcnLFxuICBidWJibGluZ0V2ZW50VHlwZXM6IHt9LFxuICBkaXJlY3RFdmVudFR5cGVzOiB7XG4gICAgdG9wU2Nyb2xsVG9Ub3A6IHtcbiAgICAgIHJlZ2lzdHJhdGlvbk5hbWU6ICdvblNjcm9sbFRvVG9wJyxcbiAgICB9LFxuICB9LFxuICB2YWxpZEF0dHJpYnV0ZXM6IHtcbiAgICBhbHdheXNCb3VuY2VIb3Jpem9udGFsOiB0cnVlLFxuICAgIGFsd2F5c0JvdW5jZVZlcnRpY2FsOiB0cnVlLFxuICAgIGF1dG9tYXRpY2FsbHlBZGp1c3RDb250ZW50SW5zZXRzOiB0cnVlLFxuICAgIGJvdW5jZXM6IHRydWUsXG4gICAgYm91bmNlc1pvb206IHRydWUsXG4gICAgY2FuQ2FuY2VsQ29udGVudFRvdWNoZXM6IHRydWUsXG4gICAgY2VudGVyQ29udGVudDogdHJ1ZSxcbiAgICBjb250ZW50SW5zZXQ6IHtkaWZmOiByZXF1aXJlKCcuLi8uLi9VdGlsaXRpZXMvZGlmZmVyL3BvaW50c0RpZmZlcicpfSxcbiAgICBjb250ZW50T2Zmc2V0OiB7ZGlmZjogcmVxdWlyZSgnLi4vLi4vVXRpbGl0aWVzL2RpZmZlci9wb2ludHNEaWZmZXInKX0sXG4gICAgY29udGVudEluc2V0QWRqdXN0bWVudEJlaGF2aW9yOiB0cnVlLFxuICAgIGRlY2VsZXJhdGlvblJhdGU6IHRydWUsXG4gICAgZGlyZWN0aW9uYWxMb2NrRW5hYmxlZDogdHJ1ZSxcbiAgICBkaXNhYmxlSW50ZXJ2YWxNb21lbnR1bTogdHJ1ZSxcbiAgICBlbmRGaWxsQ29sb3I6IHtwcm9jZXNzOiByZXF1aXJlKCcuLi8uLi9TdHlsZVNoZWV0L3Byb2Nlc3NDb2xvcicpfSxcbiAgICBmYWRpbmdFZGdlTGVuZ3RoOiB0cnVlLFxuICAgIGluZGljYXRvclN0eWxlOiB0cnVlLFxuICAgIGtleWJvYXJkRGlzbWlzc01vZGU6IHRydWUsXG4gICAgbWFpbnRhaW5WaXNpYmxlQ29udGVudFBvc2l0aW9uOiB0cnVlLFxuICAgIG1heGltdW1ab29tU2NhbGU6IHRydWUsXG4gICAgbWluaW11bVpvb21TY2FsZTogdHJ1ZSxcbiAgICBuZXN0ZWRTY3JvbGxFbmFibGVkOiB0cnVlLFxuICAgIG9uTW9tZW50dW1TY3JvbGxCZWdpbjogdHJ1ZSxcbiAgICBvbk1vbWVudHVtU2Nyb2xsRW5kOiB0cnVlLFxuICAgIG9uU2Nyb2xsOiB0cnVlLFxuICAgIG9uU2Nyb2xsQmVnaW5EcmFnOiB0cnVlLFxuICAgIG9uU2Nyb2xsRW5kRHJhZzogdHJ1ZSxcbiAgICBvblNjcm9sbFRvVG9wOiB0cnVlLFxuICAgIG92ZXJTY3JvbGxNb2RlOiB0cnVlLFxuICAgIHBhZ2luZ0VuYWJsZWQ6IHRydWUsXG4gICAgcGVyc2lzdGVudFNjcm9sbGJhcjogdHJ1ZSxcbiAgICBwaW5jaEdlc3R1cmVFbmFibGVkOiB0cnVlLFxuICAgIHNjcm9sbEVuYWJsZWQ6IHRydWUsXG4gICAgc2Nyb2xsRXZlbnRUaHJvdHRsZTogdHJ1ZSxcbiAgICBzY3JvbGxJbmRpY2F0b3JJbnNldHM6IHtcbiAgICAgIGRpZmY6IHJlcXVpcmUoJy4uLy4uL1V0aWxpdGllcy9kaWZmZXIvcG9pbnRzRGlmZmVyJyksXG4gICAgfSxcbiAgICBzY3JvbGxQZXJmVGFnOiB0cnVlLFxuICAgIHNjcm9sbFRvT3ZlcmZsb3dFbmFibGVkOiB0cnVlLFxuICAgIHNjcm9sbHNUb1RvcDogdHJ1ZSxcbiAgICBzZW5kTW9tZW50dW1FdmVudHM6IHRydWUsXG4gICAgc2hvd3NIb3Jpem9udGFsU2Nyb2xsSW5kaWNhdG9yOiB0cnVlLFxuICAgIHNob3dzVmVydGljYWxTY3JvbGxJbmRpY2F0b3I6IHRydWUsXG4gICAgc25hcFRvQWxpZ25tZW50OiB0cnVlLFxuICAgIHNuYXBUb0VuZDogdHJ1ZSxcbiAgICBzbmFwVG9JbnRlcnZhbDogdHJ1ZSxcbiAgICBzbmFwVG9PZmZzZXRzOiB0cnVlLFxuICAgIHNuYXBUb1N0YXJ0OiB0cnVlLFxuICAgIHpvb21TY2FsZTogdHJ1ZSxcblxuICAgIERFUFJFQ0FURURfc2VuZFVwZGF0ZWRDaGlsZEZyYW1lczogdHJ1ZSxcbiAgfSxcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gKFNjcm9sbFZpZXdWaWV3Q29uZmlnOiBHZW5lcmF0ZWRWaWV3Q29uZmlnKTtcbiJdfQ==