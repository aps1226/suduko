{"version":3,"sources":["useAnimatedValueArray.tsx"],"names":["refs","React","initialValues","Animated"],"mappings":";;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEe,SAAA,qBAAA,CAAA,aAAA,EAAwD;AACrE,MAAMA,IAAI,GAAGC,KAAK,CAALA,MAAAA,CAAb,EAAaA,CAAb;AAEAD,EAAAA,IAAI,CAAJA,OAAAA,CAAAA,MAAAA,GAAsBE,aAAa,CAAnCF,MAAAA;AACAE,EAAAA,aAAa,CAAbA,OAAAA,CAAsB,UAAA,YAAA,EAAA,CAAA,EAAqB;AAAA,QAAA,eAAA;;AACzCF,IAAAA,IAAI,CAAJA,OAAAA,CAAAA,CAAAA,IAAAA,CAAAA,eAAAA,GAAkBA,IAAI,CAAJA,OAAAA,CAAlBA,CAAkBA,CAAlBA,MAAAA,IAAAA,IAAAA,eAAAA,KAAAA,KAAAA,CAAAA,GAAAA,eAAAA,GAAqC,IAAIG,YAAAA,CAAAA,QAAAA,CAAJ,KAAA,CAArCH,YAAqC,CAArCA;AADFE,GAAAA;AAIA,SAAOF,IAAI,CAAX,OAAA;AACD","sourcesContent":["import * as React from 'react';\nimport { Animated } from 'react-native';\n\nexport default function useAnimatedValueArray(initialValues: number[]) {\n  const refs = React.useRef<Animated.Value[]>([]);\n\n  refs.current.length = initialValues.length;\n  initialValues.forEach((initialValue, i) => {\n    refs.current[i] = refs.current[i] ?? new Animated.Value(initialValue);\n  });\n\n  return refs.current;\n}\n"]}