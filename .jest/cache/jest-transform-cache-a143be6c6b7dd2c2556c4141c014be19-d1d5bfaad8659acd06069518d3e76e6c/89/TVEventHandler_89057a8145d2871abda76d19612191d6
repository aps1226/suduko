90c37f20d4dbd7ff6c16c817ecae50be
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _NativeTVNavigationEventEmitter = _interopRequireDefault(require("./NativeTVNavigationEventEmitter"));

var Platform = require("../../Utilities/Platform");

var NativeEventEmitter = require("../../EventEmitter/NativeEventEmitter");

var TVEventHandler = function () {
  function TVEventHandler() {
    (0, _classCallCheck2.default)(this, TVEventHandler);
    this.__nativeTVNavigationEventListener = null;
    this.__nativeTVNavigationEventEmitter = null;
  }

  (0, _createClass2.default)(TVEventHandler, [{
    key: "enable",
    value: function enable(component, callback) {
      if (Platform.OS === 'ios' && !_NativeTVNavigationEventEmitter.default) {
        return;
      }

      this.__nativeTVNavigationEventEmitter = new NativeEventEmitter(_NativeTVNavigationEventEmitter.default);
      this.__nativeTVNavigationEventListener = this.__nativeTVNavigationEventEmitter.addListener('onHWKeyEvent', function (data) {
        if (callback) {
          callback(component, data);
        }
      });
    }
  }, {
    key: "disable",
    value: function disable() {
      if (this.__nativeTVNavigationEventListener) {
        this.__nativeTVNavigationEventListener.remove();

        delete this.__nativeTVNavigationEventListener;
      }

      if (this.__nativeTVNavigationEventEmitter) {
        delete this.__nativeTVNavigationEventEmitter;
      }
    }
  }]);
  return TVEventHandler;
}();

module.exports = TVEventHandler;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRWRXZlbnRIYW5kbGVyLmpzIl0sIm5hbWVzIjpbIlBsYXRmb3JtIiwicmVxdWlyZSIsIk5hdGl2ZUV2ZW50RW1pdHRlciIsIlRWRXZlbnRIYW5kbGVyIiwiX19uYXRpdmVUVk5hdmlnYXRpb25FdmVudExpc3RlbmVyIiwiX19uYXRpdmVUVk5hdmlnYXRpb25FdmVudEVtaXR0ZXIiLCJjb21wb25lbnQiLCJjYWxsYmFjayIsIk9TIiwiTmF0aXZlVFZOYXZpZ2F0aW9uRXZlbnRFbWl0dGVyIiwiYWRkTGlzdGVuZXIiLCJkYXRhIiwicmVtb3ZlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBVUE7Ozs7Ozs7O0FBS0E7O0FBSEEsSUFBTUEsUUFBUSxHQUFHQyxPQUFPLDRCQUF4Qjs7QUFDQSxJQUFNQyxrQkFBa0IsR0FBR0QsT0FBTyx5Q0FBbEM7O0lBS01FLGM7OztTQUNKQyxpQyxHQUEwRCxJO1NBQzFEQyxnQyxHQUF3RCxJOzs7OztXQUV4RCxnQkFBT0MsU0FBUCxFQUF3QkMsUUFBeEIsRUFBa0Q7QUFDaEQsVUFBSVAsUUFBUSxDQUFDUSxFQUFULEtBQWdCLEtBQWhCLElBQXlCLENBQUNDLHVDQUE5QixFQUE4RDtBQUM1RDtBQUNEOztBQUVELFdBQUtKLGdDQUFMLEdBQXdDLElBQUlILGtCQUFKLENBQ3RDTyx1Q0FEc0MsQ0FBeEM7QUFHQSxXQUFLTCxpQ0FBTCxHQUF5QyxLQUFLQyxnQ0FBTCxDQUFzQ0ssV0FBdEMsQ0FDdkMsY0FEdUMsRUFFdkMsVUFBQUMsSUFBSSxFQUFJO0FBQ04sWUFBSUosUUFBSixFQUFjO0FBQ1pBLFVBQUFBLFFBQVEsQ0FBQ0QsU0FBRCxFQUFZSyxJQUFaLENBQVI7QUFDRDtBQUNGLE9BTnNDLENBQXpDO0FBUUQ7OztXQUVELG1CQUFnQjtBQUNkLFVBQUksS0FBS1AsaUNBQVQsRUFBNEM7QUFDMUMsYUFBS0EsaUNBQUwsQ0FBdUNRLE1BQXZDOztBQUNBLGVBQU8sS0FBS1IsaUNBQVo7QUFDRDs7QUFDRCxVQUFJLEtBQUtDLGdDQUFULEVBQTJDO0FBQ3pDLGVBQU8sS0FBS0EsZ0NBQVo7QUFDRDtBQUNGOzs7OztBQUdIUSxNQUFNLENBQUNDLE9BQVAsR0FBaUJYLGNBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBAZmxvd1xuICovXG5cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgUGxhdGZvcm0gPSByZXF1aXJlKCcuLi8uLi9VdGlsaXRpZXMvUGxhdGZvcm0nKTtcbmNvbnN0IE5hdGl2ZUV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJy4uLy4uL0V2ZW50RW1pdHRlci9OYXRpdmVFdmVudEVtaXR0ZXInKTtcblxuaW1wb3J0IE5hdGl2ZVRWTmF2aWdhdGlvbkV2ZW50RW1pdHRlciBmcm9tICcuL05hdGl2ZVRWTmF2aWdhdGlvbkV2ZW50RW1pdHRlcic7XG5pbXBvcnQgdHlwZSBFbWl0dGVyU3Vic2NyaXB0aW9uIGZyb20gJy4uLy4uL3ZlbmRvci9lbWl0dGVyL0VtaXR0ZXJTdWJzY3JpcHRpb24nO1xuXG5jbGFzcyBUVkV2ZW50SGFuZGxlciB7XG4gIF9fbmF0aXZlVFZOYXZpZ2F0aW9uRXZlbnRMaXN0ZW5lcjogP0VtaXR0ZXJTdWJzY3JpcHRpb24gPSBudWxsO1xuICBfX25hdGl2ZVRWTmF2aWdhdGlvbkV2ZW50RW1pdHRlcjogP05hdGl2ZUV2ZW50RW1pdHRlciA9IG51bGw7XG5cbiAgZW5hYmxlKGNvbXBvbmVudDogP2FueSwgY2FsbGJhY2s6IEZ1bmN0aW9uKTogdm9pZCB7XG4gICAgaWYgKFBsYXRmb3JtLk9TID09PSAnaW9zJyAmJiAhTmF0aXZlVFZOYXZpZ2F0aW9uRXZlbnRFbWl0dGVyKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5fX25hdGl2ZVRWTmF2aWdhdGlvbkV2ZW50RW1pdHRlciA9IG5ldyBOYXRpdmVFdmVudEVtaXR0ZXIoXG4gICAgICBOYXRpdmVUVk5hdmlnYXRpb25FdmVudEVtaXR0ZXIsXG4gICAgKTtcbiAgICB0aGlzLl9fbmF0aXZlVFZOYXZpZ2F0aW9uRXZlbnRMaXN0ZW5lciA9IHRoaXMuX19uYXRpdmVUVk5hdmlnYXRpb25FdmVudEVtaXR0ZXIuYWRkTGlzdGVuZXIoXG4gICAgICAnb25IV0tleUV2ZW50JyxcbiAgICAgIGRhdGEgPT4ge1xuICAgICAgICBpZiAoY2FsbGJhY2spIHtcbiAgICAgICAgICBjYWxsYmFjayhjb21wb25lbnQsIGRhdGEpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICk7XG4gIH1cblxuICBkaXNhYmxlKCk6IHZvaWQge1xuICAgIGlmICh0aGlzLl9fbmF0aXZlVFZOYXZpZ2F0aW9uRXZlbnRMaXN0ZW5lcikge1xuICAgICAgdGhpcy5fX25hdGl2ZVRWTmF2aWdhdGlvbkV2ZW50TGlzdGVuZXIucmVtb3ZlKCk7XG4gICAgICBkZWxldGUgdGhpcy5fX25hdGl2ZVRWTmF2aWdhdGlvbkV2ZW50TGlzdGVuZXI7XG4gICAgfVxuICAgIGlmICh0aGlzLl9fbmF0aXZlVFZOYXZpZ2F0aW9uRXZlbnRFbWl0dGVyKSB7XG4gICAgICBkZWxldGUgdGhpcy5fX25hdGl2ZVRWTmF2aWdhdGlvbkV2ZW50RW1pdHRlcjtcbiAgICB9XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBUVkV2ZW50SGFuZGxlcjtcbiJdfQ==