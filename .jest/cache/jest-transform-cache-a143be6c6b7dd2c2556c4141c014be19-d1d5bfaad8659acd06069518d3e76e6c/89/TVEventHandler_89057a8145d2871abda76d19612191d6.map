{"version":3,"sources":["TVEventHandler.js"],"names":["Platform","require","NativeEventEmitter","TVEventHandler","__nativeTVNavigationEventListener","__nativeTVNavigationEventEmitter","component","callback","OS","NativeTVNavigationEventEmitter","addListener","data","remove","module","exports"],"mappings":"AAUA;;;;;;;;AAKA;;AAHA,IAAMA,QAAQ,GAAGC,OAAO,4BAAxB;;AACA,IAAMC,kBAAkB,GAAGD,OAAO,yCAAlC;;IAKME,c;;;SACJC,iC,GAA0D,I;SAC1DC,gC,GAAwD,I;;;;;WAExD,gBAAOC,SAAP,EAAwBC,QAAxB,EAAkD;AAChD,UAAIP,QAAQ,CAACQ,EAAT,KAAgB,KAAhB,IAAyB,CAACC,uCAA9B,EAA8D;AAC5D;AACD;;AAED,WAAKJ,gCAAL,GAAwC,IAAIH,kBAAJ,CACtCO,uCADsC,CAAxC;AAGA,WAAKL,iCAAL,GAAyC,KAAKC,gCAAL,CAAsCK,WAAtC,CACvC,cADuC,EAEvC,UAAAC,IAAI,EAAI;AACN,YAAIJ,QAAJ,EAAc;AACZA,UAAAA,QAAQ,CAACD,SAAD,EAAYK,IAAZ,CAAR;AACD;AACF,OANsC,CAAzC;AAQD;;;WAED,mBAAgB;AACd,UAAI,KAAKP,iCAAT,EAA4C;AAC1C,aAAKA,iCAAL,CAAuCQ,MAAvC;;AACA,eAAO,KAAKR,iCAAZ;AACD;;AACD,UAAI,KAAKC,gCAAT,EAA2C;AACzC,eAAO,KAAKA,gCAAZ;AACD;AACF;;;;;AAGHQ,MAAM,CAACC,OAAP,GAAiBX,cAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst Platform = require('../../Utilities/Platform');\nconst NativeEventEmitter = require('../../EventEmitter/NativeEventEmitter');\n\nimport NativeTVNavigationEventEmitter from './NativeTVNavigationEventEmitter';\nimport type EmitterSubscription from '../../vendor/emitter/EmitterSubscription';\n\nclass TVEventHandler {\n  __nativeTVNavigationEventListener: ?EmitterSubscription = null;\n  __nativeTVNavigationEventEmitter: ?NativeEventEmitter = null;\n\n  enable(component: ?any, callback: Function): void {\n    if (Platform.OS === 'ios' && !NativeTVNavigationEventEmitter) {\n      return;\n    }\n\n    this.__nativeTVNavigationEventEmitter = new NativeEventEmitter(\n      NativeTVNavigationEventEmitter,\n    );\n    this.__nativeTVNavigationEventListener = this.__nativeTVNavigationEventEmitter.addListener(\n      'onHWKeyEvent',\n      data => {\n        if (callback) {\n          callback(component, data);\n        }\n      },\n    );\n  }\n\n  disable(): void {\n    if (this.__nativeTVNavigationEventListener) {\n      this.__nativeTVNavigationEventListener.remove();\n      delete this.__nativeTVNavigationEventListener;\n    }\n    if (this.__nativeTVNavigationEventEmitter) {\n      delete this.__nativeTVNavigationEventEmitter;\n    }\n  }\n}\n\nmodule.exports = TVEventHandler;\n"]}