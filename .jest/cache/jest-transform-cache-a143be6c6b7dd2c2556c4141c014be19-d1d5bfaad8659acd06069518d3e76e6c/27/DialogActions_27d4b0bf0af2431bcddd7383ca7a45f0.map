{"version":3,"sources":["DialogActions.tsx"],"names":["DialogActions","props","styles","React","child","compact","container","flexDirection","alignItems","justifyContent","padding"],"mappings":";;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA,IAAMA,aAAa,GAAIC,SAAjBD,aAAiBC,CAAAA,KAAD;AAAA,SACpB,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAAiB,IAAA,KAAK,EAAE,CAACC,MAAM,CAAP,SAAA,EAAmBD,KAAK,CAAxB,KAAA;AAAxB,GAAA,CAAA,EACGE,KAAK,CAALA,QAAAA,CAAAA,GAAAA,CAAmBF,KAAK,CAAxBE,QAAAA,EAAoCC,UAAAA,KAAD;AAAA,WAClC,KAAK,CAAL,cAAA,CAAA,KAAA,IACI,KAAK,CAAL,YAAA,CAAA,KAAA,EAA0B;AACxBC,MAAAA,OAAO,EAAE;AADe,KAA1B,CADJ,GAHN,KAEwC;AAAA,GAAnCF,CADH,CADoB;AAAA,CAAtB;;AAYAH,aAAa,CAAbA,WAAAA,GAAAA,gBAAAA;;AAEA,IAAME,MAAM,GAAG,YAAA,CAAA,UAAA,CAAA,MAAA,CAAkB;AAC/BI,EAAAA,SAAS,EAAE;AACTC,IAAAA,aAAa,EADJ,KAAA;AAETC,IAAAA,UAAU,EAFD,QAAA;AAGTC,IAAAA,cAAc,EAHL,UAAA;AAITC,IAAAA,OAAO,EAAE;AAJA;AADoB,CAAlB,CAAf;;eASeV,a","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `DialogActions`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to show a list of actions in a Dialog.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/dialog-actions.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Button, Dialog, Portal } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Portal>\n *       <Dialog visible={visible} onDismiss={hideDialog}>\n *         <Dialog.Actions>\n *           <Button onPress={() => console.log('Cancel')}>Cancel</Button>\n *           <Button onPress={() => console.log('Ok')}>Ok</Button>\n *         </Dialog.Actions>\n *       </Dialog>\n *     </Portal>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DialogActions = (props: Props) => (\n  <View {...props} style={[styles.container, props.style]}>\n    {React.Children.map(props.children, (child) =>\n      React.isValidElement(child)\n        ? React.cloneElement(child, {\n            compact: true,\n          })\n        : child\n    )}\n  </View>\n);\n\nDialogActions.displayName = 'Dialog.Actions';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: 8,\n  },\n});\n\nexport default DialogActions;\n"]}