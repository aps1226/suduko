4341baf758ed3dbb9f1c4ce3617ffc3e
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var registerGeneratedViewConfig = require("../../Utilities/registerGeneratedViewConfig");

var requireNativeComponent = require("../../ReactNative/requireNativeComponent");

var AndroidHorizontalScrollViewViewConfig = {
  uiViewClassName: 'AndroidHorizontalScrollView',
  bubblingEventTypes: {},
  directEventTypes: {},
  validAttributes: {
    decelerationRate: true,
    disableIntervalMomentum: true,
    endFillColor: {
      process: require("../../StyleSheet/processColor")
    },
    fadingEdgeLength: true,
    nestedScrollEnabled: true,
    overScrollMode: true,
    pagingEnabled: true,
    persistentScrollbar: true,
    scrollEnabled: true,
    scrollPerfTag: true,
    sendMomentumEvents: true,
    showsHorizontalScrollIndicator: true,
    snapToEnd: true,
    snapToInterval: true,
    snapToStart: true,
    snapToOffsets: true
  }
};
var AndroidHorizontalScrollViewNativeComponent;

if (global.RN$Bridgeless) {
  registerGeneratedViewConfig('AndroidHorizontalScrollView', AndroidHorizontalScrollViewViewConfig);
  AndroidHorizontalScrollViewNativeComponent = 'AndroidHorizontalScrollView';
} else {
  AndroidHorizontalScrollViewNativeComponent = requireNativeComponent('AndroidHorizontalScrollView');
}

var _default = AndroidHorizontalScrollViewNativeComponent;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFuZHJvaWRIb3Jpem9udGFsU2Nyb2xsVmlld05hdGl2ZUNvbXBvbmVudC5qcyJdLCJuYW1lcyI6WyJyZWdpc3RlckdlbmVyYXRlZFZpZXdDb25maWciLCJyZXF1aXJlIiwicmVxdWlyZU5hdGl2ZUNvbXBvbmVudCIsIkFuZHJvaWRIb3Jpem9udGFsU2Nyb2xsVmlld1ZpZXdDb25maWciLCJ1aVZpZXdDbGFzc05hbWUiLCJidWJibGluZ0V2ZW50VHlwZXMiLCJkaXJlY3RFdmVudFR5cGVzIiwidmFsaWRBdHRyaWJ1dGVzIiwiZGVjZWxlcmF0aW9uUmF0ZSIsImRpc2FibGVJbnRlcnZhbE1vbWVudHVtIiwiZW5kRmlsbENvbG9yIiwicHJvY2VzcyIsImZhZGluZ0VkZ2VMZW5ndGgiLCJuZXN0ZWRTY3JvbGxFbmFibGVkIiwib3ZlclNjcm9sbE1vZGUiLCJwYWdpbmdFbmFibGVkIiwicGVyc2lzdGVudFNjcm9sbGJhciIsInNjcm9sbEVuYWJsZWQiLCJzY3JvbGxQZXJmVGFnIiwic2VuZE1vbWVudHVtRXZlbnRzIiwic2hvd3NIb3Jpem9udGFsU2Nyb2xsSW5kaWNhdG9yIiwic25hcFRvRW5kIiwic25hcFRvSW50ZXJ2YWwiLCJzbmFwVG9TdGFydCIsInNuYXBUb09mZnNldHMiLCJBbmRyb2lkSG9yaXpvbnRhbFNjcm9sbFZpZXdOYXRpdmVDb21wb25lbnQiLCJnbG9iYWwiLCJSTiRCcmlkZ2VsZXNzIl0sIm1hcHBpbmdzIjoiQUFVQTs7Ozs7OztBQUVBLElBQU1BLDJCQUEyQixHQUFHQyxPQUFPLCtDQUEzQzs7QUFDQSxJQUFNQyxzQkFBc0IsR0FBR0QsT0FBTyw0Q0FBdEM7O0FBS0EsSUFBTUUscUNBQXFDLEdBQUc7QUFDNUNDLEVBQUFBLGVBQWUsRUFBRSw2QkFEMkI7QUFFNUNDLEVBQUFBLGtCQUFrQixFQUFFLEVBRndCO0FBRzVDQyxFQUFBQSxnQkFBZ0IsRUFBRSxFQUgwQjtBQUk1Q0MsRUFBQUEsZUFBZSxFQUFFO0FBQ2ZDLElBQUFBLGdCQUFnQixFQUFFLElBREg7QUFFZkMsSUFBQUEsdUJBQXVCLEVBQUUsSUFGVjtBQUdmQyxJQUFBQSxZQUFZLEVBQUU7QUFBQ0MsTUFBQUEsT0FBTyxFQUFFVixPQUFPO0FBQWpCLEtBSEM7QUFJZlcsSUFBQUEsZ0JBQWdCLEVBQUUsSUFKSDtBQUtmQyxJQUFBQSxtQkFBbUIsRUFBRSxJQUxOO0FBTWZDLElBQUFBLGNBQWMsRUFBRSxJQU5EO0FBT2ZDLElBQUFBLGFBQWEsRUFBRSxJQVBBO0FBUWZDLElBQUFBLG1CQUFtQixFQUFFLElBUk47QUFTZkMsSUFBQUEsYUFBYSxFQUFFLElBVEE7QUFVZkMsSUFBQUEsYUFBYSxFQUFFLElBVkE7QUFXZkMsSUFBQUEsa0JBQWtCLEVBQUUsSUFYTDtBQVlmQyxJQUFBQSw4QkFBOEIsRUFBRSxJQVpqQjtBQWFmQyxJQUFBQSxTQUFTLEVBQUUsSUFiSTtBQWNmQyxJQUFBQSxjQUFjLEVBQUUsSUFkRDtBQWVmQyxJQUFBQSxXQUFXLEVBQUUsSUFmRTtBQWdCZkMsSUFBQUEsYUFBYSxFQUFFO0FBaEJBO0FBSjJCLENBQTlDO0FBd0JBLElBQUlDLDBDQUFKOztBQUNBLElBQUlDLE1BQU0sQ0FBQ0MsYUFBWCxFQUEwQjtBQUN4QjNCLEVBQUFBLDJCQUEyQixDQUN6Qiw2QkFEeUIsRUFFekJHLHFDQUZ5QixDQUEzQjtBQUlBc0IsRUFBQUEsMENBQTBDLEdBQUcsNkJBQTdDO0FBQ0QsQ0FORCxNQU1PO0FBQ0xBLEVBQUFBLDBDQUEwQyxHQUFHdkIsc0JBQXNCLENBQ2pFLDZCQURpRSxDQUFuRTtBQUdEOztlQUVnQnVCLDBDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBAZmxvd1xuICovXG5cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgcmVnaXN0ZXJHZW5lcmF0ZWRWaWV3Q29uZmlnID0gcmVxdWlyZSgnLi4vLi4vVXRpbGl0aWVzL3JlZ2lzdGVyR2VuZXJhdGVkVmlld0NvbmZpZycpO1xuY29uc3QgcmVxdWlyZU5hdGl2ZUNvbXBvbmVudCA9IHJlcXVpcmUoJy4uLy4uL1JlYWN0TmF0aXZlL3JlcXVpcmVOYXRpdmVDb21wb25lbnQnKTtcblxuaW1wb3J0IHR5cGUge0hvc3RDb21wb25lbnR9IGZyb20gJy4uLy4uL1JlbmRlcmVyL3NoaW1zL1JlYWN0TmF0aXZlVHlwZXMnO1xuaW1wb3J0IHR5cGUge1Njcm9sbFZpZXdOYXRpdmVQcm9wc30gZnJvbSAnLi9TY3JvbGxWaWV3TmF0aXZlQ29tcG9uZW50VHlwZSc7XG5cbmNvbnN0IEFuZHJvaWRIb3Jpem9udGFsU2Nyb2xsVmlld1ZpZXdDb25maWcgPSB7XG4gIHVpVmlld0NsYXNzTmFtZTogJ0FuZHJvaWRIb3Jpem9udGFsU2Nyb2xsVmlldycsXG4gIGJ1YmJsaW5nRXZlbnRUeXBlczoge30sXG4gIGRpcmVjdEV2ZW50VHlwZXM6IHt9LFxuICB2YWxpZEF0dHJpYnV0ZXM6IHtcbiAgICBkZWNlbGVyYXRpb25SYXRlOiB0cnVlLFxuICAgIGRpc2FibGVJbnRlcnZhbE1vbWVudHVtOiB0cnVlLFxuICAgIGVuZEZpbGxDb2xvcjoge3Byb2Nlc3M6IHJlcXVpcmUoJy4uLy4uL1N0eWxlU2hlZXQvcHJvY2Vzc0NvbG9yJyl9LFxuICAgIGZhZGluZ0VkZ2VMZW5ndGg6IHRydWUsXG4gICAgbmVzdGVkU2Nyb2xsRW5hYmxlZDogdHJ1ZSxcbiAgICBvdmVyU2Nyb2xsTW9kZTogdHJ1ZSxcbiAgICBwYWdpbmdFbmFibGVkOiB0cnVlLFxuICAgIHBlcnNpc3RlbnRTY3JvbGxiYXI6IHRydWUsXG4gICAgc2Nyb2xsRW5hYmxlZDogdHJ1ZSxcbiAgICBzY3JvbGxQZXJmVGFnOiB0cnVlLFxuICAgIHNlbmRNb21lbnR1bUV2ZW50czogdHJ1ZSxcbiAgICBzaG93c0hvcml6b250YWxTY3JvbGxJbmRpY2F0b3I6IHRydWUsXG4gICAgc25hcFRvRW5kOiB0cnVlLFxuICAgIHNuYXBUb0ludGVydmFsOiB0cnVlLFxuICAgIHNuYXBUb1N0YXJ0OiB0cnVlLFxuICAgIHNuYXBUb09mZnNldHM6IHRydWUsXG4gIH0sXG59O1xuXG5sZXQgQW5kcm9pZEhvcml6b250YWxTY3JvbGxWaWV3TmF0aXZlQ29tcG9uZW50O1xuaWYgKGdsb2JhbC5STiRCcmlkZ2VsZXNzKSB7XG4gIHJlZ2lzdGVyR2VuZXJhdGVkVmlld0NvbmZpZyhcbiAgICAnQW5kcm9pZEhvcml6b250YWxTY3JvbGxWaWV3JyxcbiAgICBBbmRyb2lkSG9yaXpvbnRhbFNjcm9sbFZpZXdWaWV3Q29uZmlnLFxuICApO1xuICBBbmRyb2lkSG9yaXpvbnRhbFNjcm9sbFZpZXdOYXRpdmVDb21wb25lbnQgPSAnQW5kcm9pZEhvcml6b250YWxTY3JvbGxWaWV3Jztcbn0gZWxzZSB7XG4gIEFuZHJvaWRIb3Jpem9udGFsU2Nyb2xsVmlld05hdGl2ZUNvbXBvbmVudCA9IHJlcXVpcmVOYXRpdmVDb21wb25lbnQ8U2Nyb2xsVmlld05hdGl2ZVByb3BzPihcbiAgICAnQW5kcm9pZEhvcml6b250YWxTY3JvbGxWaWV3JyxcbiAgKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgKChBbmRyb2lkSG9yaXpvbnRhbFNjcm9sbFZpZXdOYXRpdmVDb21wb25lbnQ6IGFueSk6IEhvc3RDb21wb25lbnQ8U2Nyb2xsVmlld05hdGl2ZVByb3BzPik7XG4iXX0=