af33e5d294c040f3a3cc5cb1109d153b
/* istanbul ignore next */
function cov_1lz6qh5kr9() {
  var path = "C:\\Users\\ashee\\Documents\\Javascript\\React\\React Native\\suduko\\src\\state\\index.ts";
  var hash = "adfa5dac6cf215e29835cda8f12199c7c8b10530";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\ashee\\Documents\\Javascript\\React\\React Native\\suduko\\src\\state\\index.ts",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 3,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "2": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 16,
          column: 3
        }
      },
      "3": {
        start: {
          line: 8,
          column: 2
        },
        end: {
          line: 8,
          column: 56
        }
      },
      "4": {
        start: {
          line: 8,
          column: 49
        },
        end: {
          line: 8,
          column: 56
        }
      },
      "5": {
        start: {
          line: 9,
          column: 2
        },
        end: {
          line: 9,
          column: 63
        }
      },
      "6": {
        start: {
          line: 9,
          column: 56
        },
        end: {
          line: 9,
          column: 63
        }
      },
      "7": {
        start: {
          line: 10,
          column: 2
        },
        end: {
          line: 15,
          column: 5
        }
      },
      "8": {
        start: {
          line: 13,
          column: 6
        },
        end: {
          line: 13,
          column: 27
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 31
          }
        },
        loc: {
          start: {
            line: 7,
            column: 45
          },
          end: {
            line: 16,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "get",
        decl: {
          start: {
            line: 12,
            column: 18
          },
          end: {
            line: 12,
            column: 21
          }
        },
        loc: {
          start: {
            line: 12,
            column: 24
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 2
          },
          end: {
            line: 8,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 8,
            column: 2
          },
          end: {
            line: 8,
            column: 56
          }
        }, {
          start: {
            line: 8,
            column: 2
          },
          end: {
            line: 8,
            column: 56
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 8,
            column: 6
          },
          end: {
            line: 8,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 6
          },
          end: {
            line: 8,
            column: 23
          }
        }, {
          start: {
            line: 8,
            column: 27
          },
          end: {
            line: 8,
            column: 47
          }
        }],
        line: 8
      },
      "2": {
        loc: {
          start: {
            line: 9,
            column: 2
          },
          end: {
            line: 9,
            column: 63
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 2
          },
          end: {
            line: 9,
            column: 63
          }
        }, {
          start: {
            line: 9,
            column: 2
          },
          end: {
            line: 9,
            column: 63
          }
        }],
        line: 9
      },
      "3": {
        loc: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 20
          }
        }, {
          start: {
            line: 9,
            column: 24
          },
          end: {
            line: 9,
            column: 54
          }
        }],
        line: 9
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\ashee\\Documents\\Javascript\\React\\React Native\\suduko\\src\\state\\index.ts"],
      names: [],
      mappings: ";;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA",
      sourcesContent: ["export * from './actions/actions';"]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "adfa5dac6cf215e29835cda8f12199c7c8b10530"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1lz6qh5kr9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1lz6qh5kr9();
cov_1lz6qh5kr9().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

var _actions =
/* istanbul ignore next */
(cov_1lz6qh5kr9().s[1]++, require("./actions/actions"));

/* istanbul ignore next */
cov_1lz6qh5kr9().s[2]++;
Object.keys(_actions).forEach(function (key) {
  /* istanbul ignore next */
  cov_1lz6qh5kr9().f[0]++;
  cov_1lz6qh5kr9().s[3]++;

  if (
  /* istanbul ignore next */
  (cov_1lz6qh5kr9().b[1][0]++, key === "default") ||
  /* istanbul ignore next */
  (cov_1lz6qh5kr9().b[1][1]++, key === "__esModule")) {
    /* istanbul ignore next */
    cov_1lz6qh5kr9().b[0][0]++;
    cov_1lz6qh5kr9().s[4]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_1lz6qh5kr9().b[0][1]++;
  }

  cov_1lz6qh5kr9().s[5]++;

  if (
  /* istanbul ignore next */
  (cov_1lz6qh5kr9().b[3][0]++, key in exports) &&
  /* istanbul ignore next */
  (cov_1lz6qh5kr9().b[3][1]++, exports[key] === _actions[key])) {
    /* istanbul ignore next */
    cov_1lz6qh5kr9().b[2][0]++;
    cov_1lz6qh5kr9().s[6]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_1lz6qh5kr9().b[2][1]++;
  }

  cov_1lz6qh5kr9().s[7]++;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      /* istanbul ignore next */
      cov_1lz6qh5kr9().f[1]++;
      cov_1lz6qh5kr9().s[8]++;
      return _actions[key];
    }
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYXNoZWVcXERvY3VtZW50c1xcSmF2YXNjcmlwdFxcUmVhY3RcXFJlYWN0IE5hdGl2ZVxcc3VkdWtvXFxzcmNcXHN0YXRlXFxpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7OztBQUFBLElBQUEsUUFBQTtBQUFBO0FBQUEsMEJBQUEsT0FBQSxDQUFBLG1CQUFBLENBQUEsQ0FBQTs7OztBQUFBLE1BQUEsQ0FBQSxJQUFBLENBQUEsUUFBQSxFQUFBLE9BQUEsQ0FBQSxVQUFBLEdBQUEsRUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUEsK0JBQUEsR0FBQSxLQUFBLFNBQUE7QUFBQTtBQUFBLCtCQUFBLEdBQUEsS0FBQSxZQUFBLENBQUEsRUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUFBOztBQUFBO0FBQUE7QUFBQSwrQkFBQSxHQUFBLElBQUEsT0FBQTtBQUFBO0FBQUEsK0JBQUEsT0FBQSxDQUFBLEdBQUEsQ0FBQSxLQUFBLFFBQUEsQ0FBQSxHQUFBLENBQUEsQ0FBQSxFQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQSxFQUFBLE1BQUEsQ0FBQSxjQUFBLENBQUEsT0FBQSxFQUFBLEdBQUEsRUFBQTtBQUFBLElBQUEsVUFBQSxFQUFBLElBQUE7QUFBQSxJQUFBLEdBQUEsRUFBQSxTQUFBLEdBQUEsR0FBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGFBQUEsUUFBQSxDQUFBLEdBQUEsQ0FBQTtBQUFBO0FBQUEsR0FBQTtBQUFBLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICcuL2FjdGlvbnMvYWN0aW9ucyc7Il19