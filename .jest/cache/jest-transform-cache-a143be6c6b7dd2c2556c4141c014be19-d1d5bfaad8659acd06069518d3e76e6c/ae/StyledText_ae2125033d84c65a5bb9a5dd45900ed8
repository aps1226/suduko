433814ede4cd776cd0af40628868eb17
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");

var _defineProperty2 = _interopRequireDefault2(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault2(require("@babel/runtime/helpers/objectWithoutProperties"));

var _excluded = ["theme", "alpha", "family", "style"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _color = _interopRequireDefault(require("color"));

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _Text = _interopRequireDefault(require("./Text"));

var _theming = require("../../core/theming");

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var StyledText = function StyledText(_ref) {
  var theme = _ref.theme,
      alpha = _ref.alpha,
      family = _ref.family,
      style = _ref.style,
      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var textColor = (0, _color.default)(theme.colors.text).alpha(alpha).rgb().string();
  var font = theme.fonts[family];
  var writingDirection = _reactNative.I18nManager.isRTL ? 'rtl' : 'ltr';
  return React.createElement(_Text.default, _extends({}, rest, {
    style: [styles.text, _objectSpread(_objectSpread({
      color: textColor
    }, font), {}, {
      writingDirection: writingDirection
    }), style]
  }));
};

var styles = _reactNative.StyleSheet.create({
  text: {
    textAlign: 'left'
  }
});

var _default = (0, _theming.withTheme)(StyledText);

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlN0eWxlZFRleHQudHN4Il0sIm5hbWVzIjpbIlN0eWxlZFRleHQiLCJyZXN0IiwidGV4dENvbG9yIiwidGhlbWUiLCJmb250Iiwid3JpdGluZ0RpcmVjdGlvbiIsIkkxOG5NYW5hZ2VyIiwic3R5bGVzIiwiY29sb3IiLCJ0ZXh0IiwidGV4dEFsaWduIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBQSxNQUFBLEdBQUEsc0JBQUEsQ0FBQSxPQUFBLENBQUEsT0FBQSxDQUFBLENBQUE7O0FBQ0EsSUFBQSxLQUFBLEdBQUEsdUJBQUEsQ0FBQSxPQUFBLENBQUEsT0FBQSxDQUFBLENBQUE7O0FBQ0EsSUFBQSxZQUFBLEdBQUEsT0FBQSxDQUFBLGNBQUEsQ0FBQTs7QUFFQSxJQUFBLEtBQUEsR0FBQSxzQkFBQSxDQUFBLE9BQUEsVUFBQSxDQUFBOztBQUNBLElBQUEsUUFBQSxHQUFBLE9BQUEsc0JBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVNBLElBQU1BLFVBQVUsR0FBRyxTQUFiQSxVQUFhLE9BQXFEO0FBQUEsTUFBcEQsS0FBb0QsUUFBcEQsS0FBb0Q7QUFBQSxNQUFwRCxLQUFvRCxRQUFwRCxLQUFvRDtBQUFBLE1BQXBELE1BQW9ELFFBQXBELE1BQW9EO0FBQUEsTUFBcEQsS0FBb0QsUUFBcEQsS0FBb0Q7QUFBQSxNQUFsQkMsSUFBa0I7QUFDdEUsTUFBTUMsU0FBUyxHQUFHLENBQUEsR0FBQSxNQUFBLENBQUEsT0FBQSxFQUFNQyxLQUFLLENBQUxBLE1BQUFBLENBQU4sSUFBQSxFQUFBLEtBQUEsQ0FBQSxLQUFBLEVBQUEsR0FBQSxHQUFsQixNQUFrQixFQUFsQjtBQUNBLE1BQU1DLElBQUksR0FBR0QsS0FBSyxDQUFMQSxLQUFBQSxDQUFiLE1BQWFBLENBQWI7QUFDQSxNQUFNRSxnQkFBZ0IsR0FBR0MsWUFBQUEsQ0FBQUEsV0FBQUEsQ0FBQUEsS0FBQUEsR0FBQUEsS0FBQUEsR0FBekIsS0FBQTtBQUVBLFNBQ0UsS0FBQSxDQUFBLGFBQUEsQ0FBQyxLQUFBLENBQUQsT0FBQSxFQUFBLFFBQUEsQ0FBQSxFQUFBLEVBQUEsSUFBQSxFQUFBO0FBRUUsSUFBQSxLQUFLLEVBQUUsQ0FDTEMsTUFBTSxDQURELElBQUE7QUFFSEMsTUFBQUEsS0FBSyxFQUFQO0FBRkssT0FFTCxJQUZLO0FBRXdCSCxNQUFBQSxnQkFBQUEsRUFBQUE7QUFGeEIsUUFBQSxLQUFBO0FBRlQsR0FBQSxDQUFBLENBREY7QUFMRixDQUFBOztBQWlCQSxJQUFNRSxNQUFNLEdBQUcsWUFBQSxDQUFBLFVBQUEsQ0FBQSxNQUFBLENBQWtCO0FBQy9CRSxFQUFBQSxJQUFJLEVBQUU7QUFDSkMsSUFBQUEsU0FBUyxFQUFFO0FBRFA7QUFEeUIsQ0FBbEIsQ0FBZjs7ZUFNZSxDQUFBLEdBQUEsUUFBQSxDQUFBLFNBQUEsRUFBQSxVQUFBLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY29sb3IgZnJvbSAnY29sb3InO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgSTE4bk1hbmFnZXIsIFN0eWxlUHJvcCwgVGV4dFN0eWxlLCBTdHlsZVNoZWV0IH0gZnJvbSAncmVhY3QtbmF0aXZlJztcblxuaW1wb3J0IFRleHQgZnJvbSAnLi9UZXh0JztcbmltcG9ydCB7IHdpdGhUaGVtZSB9IGZyb20gJy4uLy4uL2NvcmUvdGhlbWluZyc7XG5cbnR5cGUgUHJvcHMgPSBSZWFjdC5Db21wb25lbnRQcm9wczx0eXBlb2YgVGV4dD4gJiB7XG4gIGFscGhhOiBudW1iZXI7XG4gIGZhbWlseTogJ3JlZ3VsYXInIHwgJ21lZGl1bScgfCAnbGlnaHQnIHwgJ3RoaW4nO1xuICBzdHlsZT86IFN0eWxlUHJvcDxUZXh0U3R5bGU+O1xuICB0aGVtZTogUmVhY3ROYXRpdmVQYXBlci5UaGVtZTtcbn07XG5cbmNvbnN0IFN0eWxlZFRleHQgPSAoeyB0aGVtZSwgYWxwaGEsIGZhbWlseSwgc3R5bGUsIC4uLnJlc3QgfTogUHJvcHMpID0+IHtcbiAgY29uc3QgdGV4dENvbG9yID0gY29sb3IodGhlbWUuY29sb3JzLnRleHQpLmFscGhhKGFscGhhKS5yZ2IoKS5zdHJpbmcoKTtcbiAgY29uc3QgZm9udCA9IHRoZW1lLmZvbnRzW2ZhbWlseV07XG4gIGNvbnN0IHdyaXRpbmdEaXJlY3Rpb24gPSBJMThuTWFuYWdlci5pc1JUTCA/ICdydGwnIDogJ2x0cic7XG5cbiAgcmV0dXJuIChcbiAgICA8VGV4dFxuICAgICAgey4uLnJlc3R9XG4gICAgICBzdHlsZT17W1xuICAgICAgICBzdHlsZXMudGV4dCxcbiAgICAgICAgeyBjb2xvcjogdGV4dENvbG9yLCAuLi5mb250LCB3cml0aW5nRGlyZWN0aW9uIH0sXG4gICAgICAgIHN0eWxlLFxuICAgICAgXX1cbiAgICAvPlxuICApO1xufTtcblxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICB0ZXh0OiB7XG4gICAgdGV4dEFsaWduOiAnbGVmdCcsXG4gIH0sXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgd2l0aFRoZW1lKFN0eWxlZFRleHQpO1xuIl19