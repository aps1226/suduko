0bc93c072e39440c92f261fd53f712cd
/* istanbul ignore next */
function cov_rnlulo2zf() {
  var path = "C:\\Users\\ashee\\Documents\\Javascript\\React\\React Native\\suduko\\components\\TextStroke.tsx";
  var hash = "fa5b0a9728cdb2a3c5aa1aec5cf9f9f71c8c1c85";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\ashee\\Documents\\Javascript\\React\\React Native\\suduko\\components\\TextStroke.tsx",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 29
        },
        end: {
          line: 1,
          column: 84
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "2": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 29
        }
      },
      "3": {
        start: {
          line: 8,
          column: 23
        },
        end: {
          line: 8,
          column: 95
        }
      },
      "4": {
        start: {
          line: 10,
          column: 12
        },
        end: {
          line: 10,
          column: 53
        }
      },
      "5": {
        start: {
          line: 12,
          column: 19
        },
        end: {
          line: 12,
          column: 42
        }
      },
      "6": {
        start: {
          line: 14,
          column: 49
        },
        end: {
          line: 14,
          column: 96
        }
      },
      "7": {
        start: {
          line: 14,
          column: 84
        },
        end: {
          line: 14,
          column: 96
        }
      },
      "8": {
        start: {
          line: 14,
          column: 121
        },
        end: {
          line: 14,
          column: 134
        }
      },
      "9": {
        start: {
          line: 14,
          column: 159
        },
        end: {
          line: 14,
          column: 172
        }
      },
      "10": {
        start: {
          line: 14,
          column: 174
        },
        end: {
          line: 14,
          column: 333
        }
      },
      "11": {
        start: {
          line: 14,
          column: 258
        },
        end: {
          line: 14,
          column: 316
        }
      },
      "12": {
        start: {
          line: 16,
          column: 53
        },
        end: {
          line: 16,
          column: 111
        }
      },
      "13": {
        start: {
          line: 16,
          column: 98
        },
        end: {
          line: 16,
          column: 109
        }
      },
      "14": {
        start: {
          line: 16,
          column: 112
        },
        end: {
          line: 16,
          column: 214
        }
      },
      "15": {
        start: {
          line: 16,
          column: 188
        },
        end: {
          line: 16,
          column: 212
        }
      },
      "16": {
        start: {
          line: 16,
          column: 227
        },
        end: {
          line: 16,
          column: 264
        }
      },
      "17": {
        start: {
          line: 16,
          column: 266
        },
        end: {
          line: 16,
          column: 321
        }
      },
      "18": {
        start: {
          line: 16,
          column: 297
        },
        end: {
          line: 16,
          column: 319
        }
      },
      "19": {
        start: {
          line: 16,
          column: 335
        },
        end: {
          line: 16,
          column: 337
        }
      },
      "20": {
        start: {
          line: 16,
          column: 367
        },
        end: {
          line: 16,
          column: 423
        }
      },
      "21": {
        start: {
          line: 16,
          column: 425
        },
        end: {
          line: 16,
          column: 726
        }
      },
      "22": {
        start: {
          line: 16,
          column: 448
        },
        end: {
          line: 16,
          column: 724
        }
      },
      "23": {
        start: {
          line: 16,
          column: 534
        },
        end: {
          line: 16,
          column: 606
        }
      },
      "24": {
        start: {
          line: 16,
          column: 608
        },
        end: {
          line: 16,
          column: 722
        }
      },
      "25": {
        start: {
          line: 16,
          column: 646
        },
        end: {
          line: 16,
          column: 687
        }
      },
      "26": {
        start: {
          line: 16,
          column: 697
        },
        end: {
          line: 16,
          column: 720
        }
      },
      "27": {
        start: {
          line: 16,
          column: 727
        },
        end: {
          line: 16,
          column: 748
        }
      },
      "28": {
        start: {
          line: 16,
          column: 749
        },
        end: {
          line: 16,
          column: 787
        }
      },
      "29": {
        start: {
          line: 16,
          column: 762
        },
        end: {
          line: 16,
          column: 785
        }
      },
      "30": {
        start: {
          line: 16,
          column: 788
        },
        end: {
          line: 16,
          column: 802
        }
      },
      "31": {
        start: {
          line: 18,
          column: 54
        },
        end: {
          line: 18,
          column: 73
        }
      },
      "32": {
        start: {
          line: 18,
          column: 75
        },
        end: {
          line: 18,
          column: 330
        }
      },
      "33": {
        start: {
          line: 18,
          column: 125
        },
        end: {
          line: 18,
          column: 161
        }
      },
      "34": {
        start: {
          line: 18,
          column: 163
        },
        end: {
          line: 18,
          column: 296
        }
      },
      "35": {
        start: {
          line: 18,
          column: 185
        },
        end: {
          line: 18,
          column: 294
        }
      },
      "36": {
        start: {
          line: 18,
          column: 227
        },
        end: {
          line: 18,
          column: 290
        }
      },
      "37": {
        start: {
          line: 18,
          column: 297
        },
        end: {
          line: 18,
          column: 328
        }
      },
      "38": {
        start: {
          line: 18,
          column: 331
        },
        end: {
          line: 18,
          column: 343
        }
      },
      "39": {
        start: {
          line: 20,
          column: 33
        },
        end: {
          line: 20,
          column: 531
        }
      },
      "40": {
        start: {
          line: 20,
          column: 46
        },
        end: {
          line: 20,
          column: 47
        }
      },
      "41": {
        start: {
          line: 20,
          column: 91
        },
        end: {
          line: 20,
          column: 131
        }
      },
      "42": {
        start: {
          line: 20,
          column: 133
        },
        end: {
          line: 20,
          column: 529
        }
      },
      "43": {
        start: {
          line: 20,
          column: 146
        },
        end: {
          line: 20,
          column: 261
        }
      },
      "44": {
        start: {
          line: 20,
          column: 201
        },
        end: {
          line: 20,
          column: 257
        }
      },
      "45": {
        start: {
          line: 20,
          column: 269
        },
        end: {
          line: 20,
          column: 529
        }
      },
      "46": {
        start: {
          line: 20,
          column: 309
        },
        end: {
          line: 20,
          column: 383
        }
      },
      "47": {
        start: {
          line: 20,
          column: 393
        },
        end: {
          line: 20,
          column: 527
        }
      },
      "48": {
        start: {
          line: 20,
          column: 442
        },
        end: {
          line: 20,
          column: 523
        }
      },
      "49": {
        start: {
          line: 20,
          column: 532
        },
        end: {
          line: 20,
          column: 546
        }
      },
      "50": {
        start: {
          line: 22,
          column: 13
        },
        end: {
          line: 26,
          column: 2
        }
      },
      "51": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 50,
          column: 3
        }
      },
      "52": {
        start: {
          line: 30,
          column: 19
        },
        end: {
          line: 30,
          column: 33
        }
      },
      "53": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 49,
          column: 7
        }
      },
      "54": {
        start: {
          line: 32,
          column: 6
        },
        end: {
          line: 48,
          column: 7
        }
      },
      "55": {
        start: {
          line: 33,
          column: 27
        },
        end: {
          line: 33,
          column: 38
        }
      },
      "56": {
        start: {
          line: 34,
          column: 27
        },
        end: {
          line: 34,
          column: 29
        }
      },
      "57": {
        start: {
          line: 36,
          column: 23
        },
        end: {
          line: 45,
          column: 10
        }
      },
      "58": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 56
        }
      },
      "59": {
        start: {
          line: 52,
          column: 14
        },
        end: {
          line: 52,
          column: 25
        }
      },
      "60": {
        start: {
          line: 53,
          column: 15
        },
        end: {
          line: 53,
          column: 27
        }
      },
      "61": {
        start: {
          line: 54,
          column: 17
        },
        end: {
          line: 54,
          column: 31
        }
      },
      "62": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 22
        }
      },
      "63": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 50
        }
      },
      "64": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 55
        }
      },
      "65": {
        start: {
          line: 58,
          column: 17
        },
        end: {
          line: 58,
          column: 55
        }
      },
      "66": {
        start: {
          line: 59,
          column: 14
        },
        end: {
          line: 59,
          column: 45
        }
      },
      "67": {
        start: {
          line: 60,
          column: 15
        },
        end: {
          line: 60,
          column: 46
        }
      },
      "68": {
        start: {
          line: 61,
          column: 19
        },
        end: {
          line: 61,
          column: 57
        }
      },
      "69": {
        start: {
          line: 62,
          column: 20
        },
        end: {
          line: 62,
          column: 57
        }
      },
      "70": {
        start: {
          line: 63,
          column: 13
        },
        end: {
          line: 63,
          column: 51
        }
      },
      "71": {
        start: {
          line: 64,
          column: 2
        },
        end: {
          line: 78,
          column: 31
        }
      }
    },
    fnMap: {
      "0": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 14,
            column: 9
          },
          end: {
            line: 14,
            column: 33
          }
        },
        loc: {
          start: {
            line: 14,
            column: 47
          },
          end: {
            line: 14,
            column: 335
          }
        },
        line: 14
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 14,
            column: 218
          },
          end: {
            line: 14,
            column: 242
          }
        },
        loc: {
          start: {
            line: 14,
            column: 256
          },
          end: {
            line: 14,
            column: 318
          }
        },
        line: 14
      },
      "2": {
        name: "_interopRequireWildcard",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 32
          }
        },
        loc: {
          start: {
            line: 16,
            column: 51
          },
          end: {
            line: 16,
            column: 804
          }
        },
        line: 16
      },
      "3": {
        name: "ownKeys",
        decl: {
          start: {
            line: 18,
            column: 9
          },
          end: {
            line: 18,
            column: 16
          }
        },
        loc: {
          start: {
            line: 18,
            column: 41
          },
          end: {
            line: 18,
            column: 345
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 18,
            column: 210
          },
          end: {
            line: 18,
            column: 211
          }
        },
        loc: {
          start: {
            line: 18,
            column: 225
          },
          end: {
            line: 18,
            column: 292
          }
        },
        line: 18
      },
      "5": {
        name: "_objectSpread",
        decl: {
          start: {
            line: 20,
            column: 9
          },
          end: {
            line: 20,
            column: 22
          }
        },
        loc: {
          start: {
            line: 20,
            column: 31
          },
          end: {
            line: 20,
            column: 548
          }
        },
        line: 20
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 20,
            column: 184
          },
          end: {
            line: 20,
            column: 185
          }
        },
        loc: {
          start: {
            line: 20,
            column: 199
          },
          end: {
            line: 20,
            column: 259
          }
        },
        line: 20
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 425
          },
          end: {
            line: 20,
            column: 426
          }
        },
        loc: {
          start: {
            line: 20,
            column: 440
          },
          end: {
            line: 20,
            column: 525
          }
        },
        line: 20
      },
      "8": {
        name: "TextStroke",
        decl: {
          start: {
            line: 28,
            column: 9
          },
          end: {
            line: 28,
            column: 19
          }
        },
        loc: {
          start: {
            line: 28,
            column: 27
          },
          end: {
            line: 79,
            column: 1
          }
        },
        line: 28
      },
      "9": {
        name: "createClones",
        decl: {
          start: {
            line: 29,
            column: 30
          },
          end: {
            line: 29,
            column: 42
          }
        },
        loc: {
          start: {
            line: 29,
            column: 56
          },
          end: {
            line: 50,
            column: 3
          }
        },
        line: 29
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 31,
            column: 40
          },
          end: {
            line: 31,
            column: 41
          }
        },
        loc: {
          start: {
            line: 31,
            column: 57
          },
          end: {
            line: 49,
            column: 5
          }
        },
        line: 31
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 49
          },
          end: {
            line: 14,
            column: 96
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 49
          },
          end: {
            line: 14,
            column: 96
          }
        }, {
          start: {
            line: 14,
            column: 49
          },
          end: {
            line: 14,
            column: 96
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 265
          },
          end: {
            line: 14,
            column: 315
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 14,
            column: 279
          },
          end: {
            line: 14,
            column: 295
          }
        }, {
          start: {
            line: 14,
            column: 298
          },
          end: {
            line: 14,
            column: 315
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 16,
            column: 53
          },
          end: {
            line: 16,
            column: 111
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 53
          },
          end: {
            line: 16,
            column: 111
          }
        }, {
          start: {
            line: 16,
            column: 53
          },
          end: {
            line: 16,
            column: 111
          }
        }],
        line: 16
      },
      "3": {
        loc: {
          start: {
            line: 16,
            column: 57
          },
          end: {
            line: 16,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 57
          },
          end: {
            line: 16,
            column: 69
          }
        }, {
          start: {
            line: 16,
            column: 73
          },
          end: {
            line: 16,
            column: 76
          }
        }, {
          start: {
            line: 16,
            column: 80
          },
          end: {
            line: 16,
            column: 94
          }
        }],
        line: 16
      },
      "4": {
        loc: {
          start: {
            line: 16,
            column: 112
          },
          end: {
            line: 16,
            column: 214
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 112
          },
          end: {
            line: 16,
            column: 214
          }
        }, {
          start: {
            line: 16,
            column: 112
          },
          end: {
            line: 16,
            column: 214
          }
        }],
        line: 16
      },
      "5": {
        loc: {
          start: {
            line: 16,
            column: 116
          },
          end: {
            line: 16,
            column: 184
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 116
          },
          end: {
            line: 16,
            column: 128
          }
        }, {
          start: {
            line: 16,
            column: 132
          },
          end: {
            line: 16,
            column: 155
          }
        }, {
          start: {
            line: 16,
            column: 159
          },
          end: {
            line: 16,
            column: 184
          }
        }],
        line: 16
      },
      "6": {
        loc: {
          start: {
            line: 16,
            column: 266
          },
          end: {
            line: 16,
            column: 321
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 266
          },
          end: {
            line: 16,
            column: 321
          }
        }, {
          start: {
            line: 16,
            column: 266
          },
          end: {
            line: 16,
            column: 321
          }
        }],
        line: 16
      },
      "7": {
        loc: {
          start: {
            line: 16,
            column: 270
          },
          end: {
            line: 16,
            column: 293
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 270
          },
          end: {
            line: 16,
            column: 275
          }
        }, {
          start: {
            line: 16,
            column: 279
          },
          end: {
            line: 16,
            column: 293
          }
        }],
        line: 16
      },
      "8": {
        loc: {
          start: {
            line: 16,
            column: 367
          },
          end: {
            line: 16,
            column: 423
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 367
          },
          end: {
            line: 16,
            column: 388
          }
        }, {
          start: {
            line: 16,
            column: 392
          },
          end: {
            line: 16,
            column: 423
          }
        }],
        line: 16
      },
      "9": {
        loc: {
          start: {
            line: 16,
            column: 448
          },
          end: {
            line: 16,
            column: 724
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 448
          },
          end: {
            line: 16,
            column: 724
          }
        }, {
          start: {
            line: 16,
            column: 448
          },
          end: {
            line: 16,
            column: 724
          }
        }],
        line: 16
      },
      "10": {
        loc: {
          start: {
            line: 16,
            column: 452
          },
          end: {
            line: 16,
            column: 519
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 452
          },
          end: {
            line: 16,
            column: 469
          }
        }, {
          start: {
            line: 16,
            column: 473
          },
          end: {
            line: 16,
            column: 519
          }
        }],
        line: 16
      },
      "11": {
        loc: {
          start: {
            line: 16,
            column: 534
          },
          end: {
            line: 16,
            column: 606
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 16,
            column: 558
          },
          end: {
            line: 16,
            column: 599
          }
        }, {
          start: {
            line: 16,
            column: 602
          },
          end: {
            line: 16,
            column: 606
          }
        }],
        line: 16
      },
      "12": {
        loc: {
          start: {
            line: 16,
            column: 608
          },
          end: {
            line: 16,
            column: 722
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 608
          },
          end: {
            line: 16,
            column: 722
          }
        }, {
          start: {
            line: 16,
            column: 608
          },
          end: {
            line: 16,
            column: 722
          }
        }],
        line: 16
      },
      "13": {
        loc: {
          start: {
            line: 16,
            column: 612
          },
          end: {
            line: 16,
            column: 642
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 612
          },
          end: {
            line: 16,
            column: 616
          }
        }, {
          start: {
            line: 16,
            column: 621
          },
          end: {
            line: 16,
            column: 629
          }
        }, {
          start: {
            line: 16,
            column: 633
          },
          end: {
            line: 16,
            column: 641
          }
        }],
        line: 16
      },
      "14": {
        loc: {
          start: {
            line: 16,
            column: 749
          },
          end: {
            line: 16,
            column: 787
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 749
          },
          end: {
            line: 16,
            column: 787
          }
        }, {
          start: {
            line: 16,
            column: 749
          },
          end: {
            line: 16,
            column: 787
          }
        }],
        line: 16
      },
      "15": {
        loc: {
          start: {
            line: 18,
            column: 75
          },
          end: {
            line: 18,
            column: 330
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 75
          },
          end: {
            line: 18,
            column: 330
          }
        }, {
          start: {
            line: 18,
            column: 75
          },
          end: {
            line: 18,
            column: 330
          }
        }],
        line: 18
      },
      "16": {
        loc: {
          start: {
            line: 18,
            column: 163
          },
          end: {
            line: 18,
            column: 296
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 163
          },
          end: {
            line: 18,
            column: 296
          }
        }, {
          start: {
            line: 18,
            column: 163
          },
          end: {
            line: 18,
            column: 296
          }
        }],
        line: 18
      },
      "17": {
        loc: {
          start: {
            line: 20,
            column: 91
          },
          end: {
            line: 20,
            column: 131
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 20,
            column: 114
          },
          end: {
            line: 20,
            column: 126
          }
        }, {
          start: {
            line: 20,
            column: 129
          },
          end: {
            line: 20,
            column: 131
          }
        }],
        line: 20
      },
      "18": {
        loc: {
          start: {
            line: 20,
            column: 133
          },
          end: {
            line: 20,
            column: 529
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 133
          },
          end: {
            line: 20,
            column: 529
          }
        }, {
          start: {
            line: 20,
            column: 133
          },
          end: {
            line: 20,
            column: 529
          }
        }],
        line: 20
      },
      "19": {
        loc: {
          start: {
            line: 20,
            column: 269
          },
          end: {
            line: 20,
            column: 529
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 269
          },
          end: {
            line: 20,
            column: 529
          }
        }, {
          start: {
            line: 20,
            column: 269
          },
          end: {
            line: 20,
            column: 529
          }
        }],
        line: 20
      },
      "20": {
        loc: {
          start: {
            line: 32,
            column: 6
          },
          end: {
            line: 48,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 6
          },
          end: {
            line: 48,
            column: 7
          }
        }, {
          start: {
            line: 32,
            column: 6
          },
          end: {
            line: 48,
            column: 7
          }
        }],
        line: 32
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\ashee\\Documents\\Javascript\\React\\React Native\\suduko\\components\\TextStroke.tsx"],
      names: [],
      mappings: "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",
      sourcesContent: ["import * as React from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { Children, cloneElement, isValidElement } from \"react\";\r\n\r\ntype Props = {\r\n  children: any,\r\n  color: string,\r\n  stroke: number\r\n}\r\nconst styles = StyleSheet.create({\r\n  outline: {\r\n    position: 'absolute'\r\n  },\r\n});\r\n\r\nexport default function TextStroke(props:Props){\r\n  const createClones = (w: number, h: number, color?: string) => {\r\n    const { children } = props;\r\n    return Children.map(children, child => {\r\n      if (isValidElement(child)) {\r\n        const currentProps = child.props as any;\r\n        const currentStyle = {};\r\n        const newProps = {\r\n          ...currentProps,\r\n          style: {\r\n            ...currentStyle,\r\n            textShadowOffset: {\r\n              width: w,\r\n              height: h\r\n            },\r\n            textShadowColor: color,\r\n            textShadowRadius: 1\r\n          }\r\n        }\r\n        return cloneElement(child, newProps)\r\n      }\r\n    });\r\n  }\r\n\r\n  const {color, stroke, children} = props;\r\n  const strokeW = stroke;\r\n  const top = createClones(0, -strokeW * 1.2, color);\r\n  const topLeft = createClones(-strokeW, -strokeW, color);\r\n  const topRight = createClones(strokeW, -strokeW, color);\r\n  const right = createClones(strokeW, 0, color);\r\n  const bottom = createClones(0, strokeW, color);\r\n  const bottomLeft = createClones(-strokeW, strokeW, color);\r\n  const bottomRight = createClones(strokeW, strokeW, color);\r\n  const left = createClones(-strokeW * 1.2, 0, color);\r\n\r\n  return (\r\n    <View>\r\n      <View style={ styles.outline }>{ left }</View>\r\n      <View style={ styles.outline }>{ right }</View>\r\n      <View style={ styles.outline }>{ bottom }</View>\r\n      <View style={ styles.outline }>{ top }</View>\r\n      <View style={ styles.outline }>{ topLeft }</View>\r\n      <View style={ styles.outline }>{ topRight }</View>\r\n      <View style={ styles.outline }>{ bottomLeft }</View>\r\n      { bottomRight }\r\n    </View>\r\n  );\r\n  }\r\n"]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fa5b0a9728cdb2a3c5aa1aec5cf9f9f71c8c1c85"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_rnlulo2zf = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_rnlulo2zf();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_rnlulo2zf().s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_rnlulo2zf().s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_rnlulo2zf().s[2]++;
exports.default = TextStroke;

var _defineProperty2 =
/* istanbul ignore next */
(cov_rnlulo2zf().s[3]++, _interopRequireDefault(require("@babel/runtime/helpers/defineProperty")));

var React =
/* istanbul ignore next */
(cov_rnlulo2zf().s[4]++, _interopRequireWildcard(require("react")));

var _reactNative =
/* istanbul ignore next */
(cov_rnlulo2zf().s[5]++, require("react-native"));

function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_rnlulo2zf().f[0]++;
  cov_rnlulo2zf().s[6]++;

  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_rnlulo2zf().b[0][0]++;
    cov_rnlulo2zf().s[7]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_rnlulo2zf().b[0][1]++;
  }

  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_rnlulo2zf().s[8]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_rnlulo2zf().s[9]++, new WeakMap());

  /* istanbul ignore next */
  cov_rnlulo2zf().s[10]++;
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    /* istanbul ignore next */
    cov_rnlulo2zf().f[1]++;
    cov_rnlulo2zf().s[11]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_rnlulo2zf().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_rnlulo2zf().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}

function _interopRequireWildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_rnlulo2zf().f[2]++;
  cov_rnlulo2zf().s[12]++;

  if (
  /* istanbul ignore next */
  (cov_rnlulo2zf().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_rnlulo2zf().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_rnlulo2zf().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_rnlulo2zf().b[2][0]++;
    cov_rnlulo2zf().s[13]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_rnlulo2zf().b[2][1]++;
  }

  cov_rnlulo2zf().s[14]++;

  if (
  /* istanbul ignore next */
  (cov_rnlulo2zf().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_rnlulo2zf().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_rnlulo2zf().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_rnlulo2zf().b[4][0]++;
    cov_rnlulo2zf().s[15]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_rnlulo2zf().b[4][1]++;
  }

  var cache =
  /* istanbul ignore next */
  (cov_rnlulo2zf().s[16]++, _getRequireWildcardCache(nodeInterop));

  /* istanbul ignore next */
  cov_rnlulo2zf().s[17]++;

  if (
  /* istanbul ignore next */
  (cov_rnlulo2zf().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_rnlulo2zf().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_rnlulo2zf().b[6][0]++;
    cov_rnlulo2zf().s[18]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_rnlulo2zf().b[6][1]++;
  }

  var newObj =
  /* istanbul ignore next */
  (cov_rnlulo2zf().s[19]++, {});
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_rnlulo2zf().s[20]++,
  /* istanbul ignore next */
  (cov_rnlulo2zf().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_rnlulo2zf().b[8][1]++, Object.getOwnPropertyDescriptor));

  /* istanbul ignore next */
  cov_rnlulo2zf().s[21]++;

  for (var key in obj) {
    /* istanbul ignore next */
    cov_rnlulo2zf().s[22]++;

    if (
    /* istanbul ignore next */
    (cov_rnlulo2zf().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_rnlulo2zf().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_rnlulo2zf().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_rnlulo2zf().s[23]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_rnlulo2zf().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_rnlulo2zf().b[11][1]++, null));

      /* istanbul ignore next */
      cov_rnlulo2zf().s[24]++;

      if (
      /* istanbul ignore next */
      (cov_rnlulo2zf().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_rnlulo2zf().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_rnlulo2zf().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_rnlulo2zf().b[12][0]++;
        cov_rnlulo2zf().s[25]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_rnlulo2zf().b[12][1]++;
        cov_rnlulo2zf().s[26]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_rnlulo2zf().b[9][1]++;
    }
  }

  /* istanbul ignore next */
  cov_rnlulo2zf().s[27]++;
  newObj.default = obj;

  /* istanbul ignore next */
  cov_rnlulo2zf().s[28]++;

  if (cache) {
    /* istanbul ignore next */
    cov_rnlulo2zf().b[14][0]++;
    cov_rnlulo2zf().s[29]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_rnlulo2zf().b[14][1]++;
  }

  cov_rnlulo2zf().s[30]++;
  return newObj;
}

function ownKeys(object, enumerableOnly) {
  /* istanbul ignore next */
  cov_rnlulo2zf().f[3]++;
  var keys =
  /* istanbul ignore next */
  (cov_rnlulo2zf().s[31]++, Object.keys(object));

  /* istanbul ignore next */
  cov_rnlulo2zf().s[32]++;

  if (Object.getOwnPropertySymbols) {
    /* istanbul ignore next */
    cov_rnlulo2zf().b[15][0]++;
    var symbols =
    /* istanbul ignore next */
    (cov_rnlulo2zf().s[33]++, Object.getOwnPropertySymbols(object));

    /* istanbul ignore next */
    cov_rnlulo2zf().s[34]++;

    if (enumerableOnly) {
      /* istanbul ignore next */
      cov_rnlulo2zf().b[16][0]++;
      cov_rnlulo2zf().s[35]++;
      symbols = symbols.filter(function (sym) {
        /* istanbul ignore next */
        cov_rnlulo2zf().f[4]++;
        cov_rnlulo2zf().s[36]++;
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    } else
    /* istanbul ignore next */
    {
      cov_rnlulo2zf().b[16][1]++;
    }

    cov_rnlulo2zf().s[37]++;
    keys.push.apply(keys, symbols);
  } else
  /* istanbul ignore next */
  {
    cov_rnlulo2zf().b[15][1]++;
  }

  cov_rnlulo2zf().s[38]++;
  return keys;
}

function _objectSpread(target) {
  /* istanbul ignore next */
  cov_rnlulo2zf().f[5]++;
  cov_rnlulo2zf().s[39]++;

  for (var i =
  /* istanbul ignore next */
  (cov_rnlulo2zf().s[40]++, 1); i < arguments.length; i++) {
    var source =
    /* istanbul ignore next */
    (cov_rnlulo2zf().s[41]++, arguments[i] != null ?
    /* istanbul ignore next */
    (cov_rnlulo2zf().b[17][0]++, arguments[i]) :
    /* istanbul ignore next */
    (cov_rnlulo2zf().b[17][1]++, {}));

    /* istanbul ignore next */
    cov_rnlulo2zf().s[42]++;

    if (i % 2) {
      /* istanbul ignore next */
      cov_rnlulo2zf().b[18][0]++;
      cov_rnlulo2zf().s[43]++;
      ownKeys(Object(source), true).forEach(function (key) {
        /* istanbul ignore next */
        cov_rnlulo2zf().f[6]++;
        cov_rnlulo2zf().s[44]++;
        (0, _defineProperty2.default)(target, key, source[key]);
      });
    } else {
      /* istanbul ignore next */
      cov_rnlulo2zf().b[18][1]++;
      cov_rnlulo2zf().s[45]++;

      if (Object.getOwnPropertyDescriptors) {
        /* istanbul ignore next */
        cov_rnlulo2zf().b[19][0]++;
        cov_rnlulo2zf().s[46]++;
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        /* istanbul ignore next */
        cov_rnlulo2zf().b[19][1]++;
        cov_rnlulo2zf().s[47]++;
        ownKeys(Object(source)).forEach(function (key) {
          /* istanbul ignore next */
          cov_rnlulo2zf().f[7]++;
          cov_rnlulo2zf().s[48]++;
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }
  }

  /* istanbul ignore next */
  cov_rnlulo2zf().s[49]++;
  return target;
}

var styles =
/* istanbul ignore next */
(cov_rnlulo2zf().s[50]++, _reactNative.StyleSheet.create({
  outline: {
    position: 'absolute'
  }
}));

function TextStroke(props) {
  /* istanbul ignore next */
  cov_rnlulo2zf().f[8]++;
  cov_rnlulo2zf().s[51]++;

  var createClones = function createClones(w, h, color) {
    /* istanbul ignore next */
    cov_rnlulo2zf().f[9]++;
    var children =
    /* istanbul ignore next */
    (cov_rnlulo2zf().s[52]++, props.children);

    /* istanbul ignore next */
    cov_rnlulo2zf().s[53]++;
    return React.Children.map(children, function (child) {
      /* istanbul ignore next */
      cov_rnlulo2zf().f[10]++;
      cov_rnlulo2zf().s[54]++;

      if ((0, React.isValidElement)(child)) {
        /* istanbul ignore next */
        cov_rnlulo2zf().b[20][0]++;
        var currentProps =
        /* istanbul ignore next */
        (cov_rnlulo2zf().s[55]++, child.props);
        var currentStyle =
        /* istanbul ignore next */
        (cov_rnlulo2zf().s[56]++, {});
        var newProps =
        /* istanbul ignore next */
        (cov_rnlulo2zf().s[57]++, _objectSpread(_objectSpread({}, currentProps), {}, {
          style: _objectSpread(_objectSpread({}, currentStyle), {}, {
            textShadowOffset: {
              width: w,
              height: h
            },
            textShadowColor: color,
            textShadowRadius: 1
          })
        }));

        /* istanbul ignore next */
        cov_rnlulo2zf().s[58]++;
        return (0, React.cloneElement)(child, newProps);
      } else
      /* istanbul ignore next */
      {
        cov_rnlulo2zf().b[20][1]++;
      }
    });
  };

  var color =
  /* istanbul ignore next */
  (cov_rnlulo2zf().s[59]++, props.color),
      stroke =
  /* istanbul ignore next */
  (cov_rnlulo2zf().s[60]++, props.stroke),
      children =
  /* istanbul ignore next */
  (cov_rnlulo2zf().s[61]++, props.children);
  var strokeW =
  /* istanbul ignore next */
  (cov_rnlulo2zf().s[62]++, stroke);
  var top =
  /* istanbul ignore next */
  (cov_rnlulo2zf().s[63]++, createClones(0, -strokeW * 1.2, color));
  var topLeft =
  /* istanbul ignore next */
  (cov_rnlulo2zf().s[64]++, createClones(-strokeW, -strokeW, color));
  var topRight =
  /* istanbul ignore next */
  (cov_rnlulo2zf().s[65]++, createClones(strokeW, -strokeW, color));
  var right =
  /* istanbul ignore next */
  (cov_rnlulo2zf().s[66]++, createClones(strokeW, 0, color));
  var bottom =
  /* istanbul ignore next */
  (cov_rnlulo2zf().s[67]++, createClones(0, strokeW, color));
  var bottomLeft =
  /* istanbul ignore next */
  (cov_rnlulo2zf().s[68]++, createClones(-strokeW, strokeW, color));
  var bottomRight =
  /* istanbul ignore next */
  (cov_rnlulo2zf().s[69]++, createClones(strokeW, strokeW, color));
  var left =
  /* istanbul ignore next */
  (cov_rnlulo2zf().s[70]++, createClones(-strokeW * 1.2, 0, color));

  /* istanbul ignore next */
  cov_rnlulo2zf().s[71]++;
  return React.createElement(_reactNative.View, null, React.createElement(_reactNative.View, {
    style: styles.outline
  }, left), React.createElement(_reactNative.View, {
    style: styles.outline
  }, right), React.createElement(_reactNative.View, {
    style: styles.outline
  }, bottom), React.createElement(_reactNative.View, {
    style: styles.outline
  }, top), React.createElement(_reactNative.View, {
    style: styles.outline
  }, topLeft), React.createElement(_reactNative.View, {
    style: styles.outline
  }, topRight), React.createElement(_reactNative.View, {
    style: styles.outline
  }, bottomLeft), bottomRight);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,