5fc0fd1f867a31d8b4c2cd7b65b63dec
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.zoomOutRight = exports.zoomOutLeft = exports.zoomOutUp = exports.zoomOutDown = exports.zoomOut = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _reactNative = require("react-native");

function makeZoomOutTranslation(translationType, pivotPoint) {
  var modifier = Math.min(1, Math.max(-1, pivotPoint));
  return {
    easing: _reactNative.Easing.bezier(0.175, 0.885, 0.32, 1),
    0: (0, _defineProperty2.default)({
      opacity: 1,
      scale: 1
    }, translationType, 0),
    0.4: (0, _defineProperty2.default)({
      opacity: 1,
      scale: 0.457
    }, translationType, pivotPoint),
    1: (0, _defineProperty2.default)({
      opacity: 0,
      scale: 0.1
    }, translationType, modifier * -1000)
  };
}

var zoomOut = {
  from: {
    opacity: 1,
    scale: 1
  },
  0.5: {
    opacity: 1,
    scale: 0.3
  },
  to: {
    opacity: 0,
    scale: 0
  }
};
exports.zoomOut = zoomOut;
var zoomOutDown = makeZoomOutTranslation('translateY', 60);
exports.zoomOutDown = zoomOutDown;
var zoomOutUp = makeZoomOutTranslation('translateY', -60);
exports.zoomOutUp = zoomOutUp;
var zoomOutLeft = makeZoomOutTranslation('translateX', 10);
exports.zoomOutLeft = zoomOutLeft;
var zoomOutRight = makeZoomOutTranslation('translateX', -10);
exports.zoomOutRight = zoomOutRight;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInpvb21pbmctZXhpdHMuanMiXSwibmFtZXMiOlsibWFrZVpvb21PdXRUcmFuc2xhdGlvbiIsInRyYW5zbGF0aW9uVHlwZSIsInBpdm90UG9pbnQiLCJtb2RpZmllciIsIk1hdGgiLCJtaW4iLCJtYXgiLCJlYXNpbmciLCJFYXNpbmciLCJiZXppZXIiLCJvcGFjaXR5Iiwic2NhbGUiLCJ6b29tT3V0IiwiZnJvbSIsInRvIiwiem9vbU91dERvd24iLCJ6b29tT3V0VXAiLCJ6b29tT3V0TGVmdCIsInpvb21PdXRSaWdodCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBRUEsU0FBU0Esc0JBQVQsQ0FBZ0NDLGVBQWhDLEVBQWlEQyxVQUFqRCxFQUE2RDtBQUMzRCxNQUFNQyxRQUFRLEdBQUdDLElBQUksQ0FBQ0MsR0FBTCxDQUFTLENBQVQsRUFBWUQsSUFBSSxDQUFDRSxHQUFMLENBQVMsQ0FBQyxDQUFWLEVBQWFKLFVBQWIsQ0FBWixDQUFqQjtBQUNBLFNBQU87QUFDTEssSUFBQUEsTUFBTSxFQUFFQyxvQkFBT0MsTUFBUCxDQUFjLEtBQWQsRUFBcUIsS0FBckIsRUFBNEIsSUFBNUIsRUFBa0MsQ0FBbEMsQ0FESDtBQUVMO0FBQ0VDLE1BQUFBLE9BQU8sRUFBRSxDQURYO0FBRUVDLE1BQUFBLEtBQUssRUFBRTtBQUZULE9BR0dWLGVBSEgsRUFHcUIsQ0FIckIsQ0FGSztBQU9MO0FBQ0VTLE1BQUFBLE9BQU8sRUFBRSxDQURYO0FBRUVDLE1BQUFBLEtBQUssRUFBRTtBQUZULE9BR0dWLGVBSEgsRUFHcUJDLFVBSHJCLENBUEs7QUFZTDtBQUNFUSxNQUFBQSxPQUFPLEVBQUUsQ0FEWDtBQUVFQyxNQUFBQSxLQUFLLEVBQUU7QUFGVCxPQUdHVixlQUhILEVBR3FCRSxRQUFRLEdBQUcsQ0FBQyxJQUhqQztBQVpLLEdBQVA7QUFrQkQ7O0FBRU0sSUFBTVMsT0FBTyxHQUFHO0FBQ3JCQyxFQUFBQSxJQUFJLEVBQUU7QUFDSkgsSUFBQUEsT0FBTyxFQUFFLENBREw7QUFFSkMsSUFBQUEsS0FBSyxFQUFFO0FBRkgsR0FEZTtBQUtyQixPQUFLO0FBQ0hELElBQUFBLE9BQU8sRUFBRSxDQUROO0FBRUhDLElBQUFBLEtBQUssRUFBRTtBQUZKLEdBTGdCO0FBU3JCRyxFQUFBQSxFQUFFLEVBQUU7QUFDRkosSUFBQUEsT0FBTyxFQUFFLENBRFA7QUFFRkMsSUFBQUEsS0FBSyxFQUFFO0FBRkw7QUFUaUIsQ0FBaEI7O0FBZUEsSUFBTUksV0FBVyxHQUFHZixzQkFBc0IsQ0FBQyxZQUFELEVBQWUsRUFBZixDQUExQzs7QUFFQSxJQUFNZ0IsU0FBUyxHQUFHaEIsc0JBQXNCLENBQUMsWUFBRCxFQUFlLENBQUMsRUFBaEIsQ0FBeEM7O0FBRUEsSUFBTWlCLFdBQVcsR0FBR2pCLHNCQUFzQixDQUFDLFlBQUQsRUFBZSxFQUFmLENBQTFDOztBQUVBLElBQU1rQixZQUFZLEdBQUdsQixzQkFBc0IsQ0FBQyxZQUFELEVBQWUsQ0FBQyxFQUFoQixDQUEzQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVhc2luZyB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5cbmZ1bmN0aW9uIG1ha2Vab29tT3V0VHJhbnNsYXRpb24odHJhbnNsYXRpb25UeXBlLCBwaXZvdFBvaW50KSB7XG4gIGNvbnN0IG1vZGlmaWVyID0gTWF0aC5taW4oMSwgTWF0aC5tYXgoLTEsIHBpdm90UG9pbnQpKTtcbiAgcmV0dXJuIHtcbiAgICBlYXNpbmc6IEVhc2luZy5iZXppZXIoMC4xNzUsIDAuODg1LCAwLjMyLCAxKSxcbiAgICAwOiB7XG4gICAgICBvcGFjaXR5OiAxLFxuICAgICAgc2NhbGU6IDEsXG4gICAgICBbdHJhbnNsYXRpb25UeXBlXTogMCxcbiAgICB9LFxuICAgIDAuNDoge1xuICAgICAgb3BhY2l0eTogMSxcbiAgICAgIHNjYWxlOiAwLjQ1NyxcbiAgICAgIFt0cmFuc2xhdGlvblR5cGVdOiBwaXZvdFBvaW50LFxuICAgIH0sXG4gICAgMToge1xuICAgICAgb3BhY2l0eTogMCxcbiAgICAgIHNjYWxlOiAwLjEsXG4gICAgICBbdHJhbnNsYXRpb25UeXBlXTogbW9kaWZpZXIgKiAtMTAwMCxcbiAgICB9LFxuICB9O1xufVxuXG5leHBvcnQgY29uc3Qgem9vbU91dCA9IHtcbiAgZnJvbToge1xuICAgIG9wYWNpdHk6IDEsXG4gICAgc2NhbGU6IDEsXG4gIH0sXG4gIDAuNToge1xuICAgIG9wYWNpdHk6IDEsXG4gICAgc2NhbGU6IDAuMyxcbiAgfSxcbiAgdG86IHtcbiAgICBvcGFjaXR5OiAwLFxuICAgIHNjYWxlOiAwLFxuICB9LFxufTtcblxuZXhwb3J0IGNvbnN0IHpvb21PdXREb3duID0gbWFrZVpvb21PdXRUcmFuc2xhdGlvbigndHJhbnNsYXRlWScsIDYwKTtcblxuZXhwb3J0IGNvbnN0IHpvb21PdXRVcCA9IG1ha2Vab29tT3V0VHJhbnNsYXRpb24oJ3RyYW5zbGF0ZVknLCAtNjApO1xuXG5leHBvcnQgY29uc3Qgem9vbU91dExlZnQgPSBtYWtlWm9vbU91dFRyYW5zbGF0aW9uKCd0cmFuc2xhdGVYJywgMTApO1xuXG5leHBvcnQgY29uc3Qgem9vbU91dFJpZ2h0ID0gbWFrZVpvb21PdXRUcmFuc2xhdGlvbigndHJhbnNsYXRlWCcsIC0xMCk7XG4iXX0=