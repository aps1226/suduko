54d5443d50f3f49dffd527a18ec12573
/* istanbul ignore next */
function cov_21q9389883() {
  var path = "C:\\Users\\ashee\\Documents\\Javascript\\React\\React Native\\suduko\\src\\state\\boardController.ts";
  var hash = "a4c40478abe9870554ae80f3b940e0d4e3dba091";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\ashee\\Documents\\Javascript\\React\\React Native\\suduko\\src\\state\\boardController.ts",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 29
        },
        end: {
          line: 1,
          column: 84
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "2": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 26
        }
      },
      "3": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 26
        }
      },
      "4": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 38
        }
      },
      "5": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 38
        }
      },
      "6": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 30
        }
      },
      "7": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 34
        }
      },
      "8": {
        start: {
          line: 13,
          column: 26
        },
        end: {
          line: 13,
          column: 101
        }
      },
      "9": {
        start: {
          line: 16,
          column: 21
        },
        end: {
          line: 16,
          column: 33
        }
      },
      "10": {
        start: {
          line: 19,
          column: 2
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "11": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 59
        }
      },
      "12": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 19
        }
      },
      "13": {
        start: {
          line: 22,
          column: 15
        },
        end: {
          line: 22,
          column: 56
        }
      },
      "14": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 34
        }
      },
      "15": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 33
        }
      },
      "16": {
        start: {
          line: 27,
          column: 2
        },
        end: {
          line: 27,
          column: 15
        }
      },
      "17": {
        start: {
          line: 31,
          column: 2
        },
        end: {
          line: 38,
          column: 3
        }
      },
      "18": {
        start: {
          line: 31,
          column: 15
        },
        end: {
          line: 31,
          column: 16
        }
      },
      "19": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 55
        }
      },
      "20": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 43
        }
      },
      "21": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "22": {
        start: {
          line: 36,
          column: 6
        },
        end: {
          line: 36,
          column: 19
        }
      },
      "23": {
        start: {
          line: 40,
          column: 2
        },
        end: {
          line: 40,
          column: 14
        }
      },
      "24": {
        start: {
          line: 44,
          column: 2
        },
        end: {
          line: 64,
          column: 3
        }
      },
      "25": {
        start: {
          line: 44,
          column: 15
        },
        end: {
          line: 44,
          column: 16
        }
      },
      "26": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "27": {
        start: {
          line: 45,
          column: 17
        },
        end: {
          line: 45,
          column: 18
        }
      },
      "28": {
        start: {
          line: 46,
          column: 6
        },
        end: {
          line: 62,
          column: 7
        }
      },
      "29": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "30": {
        start: {
          line: 47,
          column: 21
        },
        end: {
          line: 47,
          column: 22
        }
      },
      "31": {
        start: {
          line: 48,
          column: 10
        },
        end: {
          line: 58,
          column: 11
        }
      },
      "32": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 27
        }
      },
      "33": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 57,
          column: 13
        }
      },
      "34": {
        start: {
          line: 52,
          column: 14
        },
        end: {
          line: 52,
          column: 40
        }
      },
      "35": {
        start: {
          line: 54,
          column: 14
        },
        end: {
          line: 54,
          column: 41
        }
      },
      "36": {
        start: {
          line: 56,
          column: 14
        },
        end: {
          line: 56,
          column: 32
        }
      },
      "37": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 20
        }
      },
      "38": {
        start: {
          line: 66,
          column: 2
        },
        end: {
          line: 66,
          column: 14
        }
      },
      "39": {
        start: {
          line: 70,
          column: 2
        },
        end: {
          line: 95,
          column: 3
        }
      },
      "40": {
        start: {
          line: 70,
          column: 15
        },
        end: {
          line: 70,
          column: 16
        }
      },
      "41": {
        start: {
          line: 71,
          column: 14
        },
        end: {
          line: 71,
          column: 23
        }
      },
      "42": {
        start: {
          line: 72,
          column: 14
        },
        end: {
          line: 72,
          column: 23
        }
      },
      "43": {
        start: {
          line: 73,
          column: 14
        },
        end: {
          line: 73,
          column: 23
        }
      },
      "44": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 94,
          column: 5
        }
      },
      "45": {
        start: {
          line: 75,
          column: 17
        },
        end: {
          line: 75,
          column: 18
        }
      },
      "46": {
        start: {
          line: 76,
          column: 17
        },
        end: {
          line: 76,
          column: 28
        }
      },
      "47": {
        start: {
          line: 77,
          column: 17
        },
        end: {
          line: 77,
          column: 28
        }
      },
      "48": {
        start: {
          line: 78,
          column: 17
        },
        end: {
          line: 78,
          column: 86
        }
      },
      "49": {
        start: {
          line: 80,
          column: 6
        },
        end: {
          line: 83,
          column: 7
        }
      },
      "50": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 40
        }
      },
      "51": {
        start: {
          line: 81,
          column: 27
        },
        end: {
          line: 81,
          column: 40
        }
      },
      "52": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 22
        }
      },
      "53": {
        start: {
          line: 85,
          column: 6
        },
        end: {
          line: 88,
          column: 7
        }
      },
      "54": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 40
        }
      },
      "55": {
        start: {
          line: 86,
          column: 27
        },
        end: {
          line: 86,
          column: 40
        }
      },
      "56": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 22
        }
      },
      "57": {
        start: {
          line: 90,
          column: 6
        },
        end: {
          line: 93,
          column: 7
        }
      },
      "58": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 40
        }
      },
      "59": {
        start: {
          line: 91,
          column: 27
        },
        end: {
          line: 91,
          column: 40
        }
      },
      "60": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 22
        }
      },
      "61": {
        start: {
          line: 97,
          column: 2
        },
        end: {
          line: 97,
          column: 14
        }
      },
      "62": {
        start: {
          line: 103,
          column: 14
        },
        end: {
          line: 103,
          column: 44
        }
      },
      "63": {
        start: {
          line: 105,
          column: 2
        },
        end: {
          line: 121,
          column: 3
        }
      },
      "64": {
        start: {
          line: 107,
          column: 6
        },
        end: {
          line: 107,
          column: 57
        }
      },
      "65": {
        start: {
          line: 108,
          column: 6
        },
        end: {
          line: 108,
          column: 12
        }
      },
      "66": {
        start: {
          line: 111,
          column: 6
        },
        end: {
          line: 111,
          column: 57
        }
      },
      "67": {
        start: {
          line: 112,
          column: 6
        },
        end: {
          line: 112,
          column: 12
        }
      },
      "68": {
        start: {
          line: 115,
          column: 6
        },
        end: {
          line: 115,
          column: 56
        }
      },
      "69": {
        start: {
          line: 116,
          column: 6
        },
        end: {
          line: 116,
          column: 12
        }
      },
      "70": {
        start: {
          line: 119,
          column: 6
        },
        end: {
          line: 119,
          column: 17
        }
      },
      "71": {
        start: {
          line: 120,
          column: 6
        },
        end: {
          line: 120,
          column: 12
        }
      },
      "72": {
        start: {
          line: 123,
          column: 2
        },
        end: {
          line: 135,
          column: 3
        }
      },
      "73": {
        start: {
          line: 123,
          column: 15
        },
        end: {
          line: 123,
          column: 16
        }
      },
      "74": {
        start: {
          line: 124,
          column: 14
        },
        end: {
          line: 124,
          column: 43
        }
      },
      "75": {
        start: {
          line: 125,
          column: 14
        },
        end: {
          line: 125,
          column: 43
        }
      },
      "76": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 129,
          column: 5
        }
      },
      "77": {
        start: {
          line: 128,
          column: 6
        },
        end: {
          line: 128,
          column: 79
        }
      },
      "78": {
        start: {
          line: 131,
          column: 22
        },
        end: {
          line: 133,
          column: 6
        }
      },
      "79": {
        start: {
          line: 132,
          column: 6
        },
        end: {
          line: 132,
          column: 51
        }
      },
      "80": {
        start: {
          line: 134,
          column: 4
        },
        end: {
          line: 134,
          column: 30
        }
      },
      "81": {
        start: {
          line: 137,
          column: 2
        },
        end: {
          line: 137,
          column: 18
        }
      },
      "82": {
        start: {
          line: 141,
          column: 2
        },
        end: {
          line: 143,
          column: 3
        }
      },
      "83": {
        start: {
          line: 141,
          column: 15
        },
        end: {
          line: 141,
          column: 16
        }
      },
      "84": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 142,
          column: 46
        }
      },
      "85": {
        start: {
          line: 142,
          column: 33
        },
        end: {
          line: 142,
          column: 46
        }
      },
      "86": {
        start: {
          line: 145,
          column: 2
        },
        end: {
          line: 145,
          column: 14
        }
      }
    },
    fnMap: {
      "0": {
        name: "shuffle",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 16
          }
        },
        loc: {
          start: {
            line: 15,
            column: 24
          },
          end: {
            line: 28,
            column: 1
          }
        },
        line: 15
      },
      "1": {
        name: "isValid",
        decl: {
          start: {
            line: 30,
            column: 9
          },
          end: {
            line: 30,
            column: 16
          }
        },
        loc: {
          start: {
            line: 30,
            column: 37
          },
          end: {
            line: 41,
            column: 1
          }
        },
        line: 30
      },
      "2": {
        name: "generateBoard",
        decl: {
          start: {
            line: 43,
            column: 9
          },
          end: {
            line: 43,
            column: 22
          }
        },
        loc: {
          start: {
            line: 43,
            column: 29
          },
          end: {
            line: 67,
            column: 1
          }
        },
        line: 43
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 51,
            column: 42
          },
          end: {
            line: 51,
            column: 43
          }
        },
        loc: {
          start: {
            line: 51,
            column: 57
          },
          end: {
            line: 53,
            column: 13
          }
        },
        line: 51
      },
      "4": {
        name: "isValidSudoku",
        decl: {
          start: {
            line: 69,
            column: 9
          },
          end: {
            line: 69,
            column: 22
          }
        },
        loc: {
          start: {
            line: 69,
            column: 30
          },
          end: {
            line: 98,
            column: 1
          }
        },
        line: 69
      },
      "5": {
        name: "initBoard",
        decl: {
          start: {
            line: 102,
            column: 9
          },
          end: {
            line: 102,
            column: 18
          }
        },
        loc: {
          start: {
            line: 102,
            column: 41
          },
          end: {
            line: 138,
            column: 1
          }
        },
        line: 102
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 131,
            column: 35
          },
          end: {
            line: 131,
            column: 36
          }
        },
        loc: {
          start: {
            line: 131,
            column: 50
          },
          end: {
            line: 133,
            column: 5
          }
        },
        line: 131
      },
      "7": {
        name: "isCompleted",
        decl: {
          start: {
            line: 140,
            column: 9
          },
          end: {
            line: 140,
            column: 20
          }
        },
        loc: {
          start: {
            line: 140,
            column: 28
          },
          end: {
            line: 146,
            column: 1
          }
        },
        line: 140
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        }, {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        }],
        line: 35
      },
      "1": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 26
          }
        }, {
          start: {
            line: 35,
            column: 30
          },
          end: {
            line: 35,
            column: 48
          }
        }, {
          start: {
            line: 35,
            column: 52
          },
          end: {
            line: 35,
            column: 68
          }
        }],
        line: 35
      },
      "2": {
        loc: {
          start: {
            line: 46,
            column: 6
          },
          end: {
            line: 62,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 6
          },
          end: {
            line: 62,
            column: 7
          }
        }, {
          start: {
            line: 46,
            column: 6
          },
          end: {
            line: 62,
            column: 7
          }
        }],
        line: 46
      },
      "3": {
        loc: {
          start: {
            line: 48,
            column: 10
          },
          end: {
            line: 58,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 10
          },
          end: {
            line: 58,
            column: 11
          }
        }, {
          start: {
            line: 48,
            column: 10
          },
          end: {
            line: 58,
            column: 11
          }
        }],
        line: 48
      },
      "4": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 57,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 57,
            column: 13
          }
        }, {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 57,
            column: 13
          }
        }],
        line: 51
      },
      "5": {
        loc: {
          start: {
            line: 80,
            column: 6
          },
          end: {
            line: 83,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 6
          },
          end: {
            line: 83,
            column: 7
          }
        }, {
          start: {
            line: 80,
            column: 6
          },
          end: {
            line: 83,
            column: 7
          }
        }],
        line: 80
      },
      "6": {
        loc: {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 81,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 81,
            column: 40
          }
        }, {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 81,
            column: 40
          }
        }],
        line: 81
      },
      "7": {
        loc: {
          start: {
            line: 85,
            column: 6
          },
          end: {
            line: 88,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 6
          },
          end: {
            line: 88,
            column: 7
          }
        }, {
          start: {
            line: 85,
            column: 6
          },
          end: {
            line: 88,
            column: 7
          }
        }],
        line: 85
      },
      "8": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 86,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 86,
            column: 40
          }
        }, {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 86,
            column: 40
          }
        }],
        line: 86
      },
      "9": {
        loc: {
          start: {
            line: 90,
            column: 6
          },
          end: {
            line: 93,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 6
          },
          end: {
            line: 93,
            column: 7
          }
        }, {
          start: {
            line: 90,
            column: 6
          },
          end: {
            line: 93,
            column: 7
          }
        }],
        line: 90
      },
      "10": {
        loc: {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 91,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 91,
            column: 40
          }
        }, {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 91,
            column: 40
          }
        }],
        line: 91
      },
      "11": {
        loc: {
          start: {
            line: 105,
            column: 2
          },
          end: {
            line: 121,
            column: 3
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 108,
            column: 12
          }
        }, {
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 112,
            column: 12
          }
        }, {
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 116,
            column: 12
          }
        }, {
          start: {
            line: 118,
            column: 4
          },
          end: {
            line: 120,
            column: 12
          }
        }],
        line: 105
      },
      "12": {
        loc: {
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 142,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 142,
            column: 46
          }
        }, {
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 142,
            column: 46
          }
        }],
        line: 142
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0, 0, 0],
      "12": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\ashee\\Documents\\Javascript\\React\\React Native\\suduko\\src\\state\\boardController.ts"],
      names: [],
      mappings: "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",
      sourcesContent: ["//Function shuffles array.\r\nexport function shuffle(array: number[]):number[] {\r\n  var currentIndex:number = array.length,  randomIndex:number;\r\n  // While there remain elements to shuffle...\r\n  while (0 !== currentIndex) {\r\n    // Pick a remaining element...\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n    // And swap it with the current element.\r\n    [array[currentIndex], array[randomIndex]] = [\r\n      array[randomIndex], array[currentIndex]];\r\n  }\r\n  return array;\r\n}\r\n\r\n//Helper function for generateBoard function to determine if respective row and column are valid inputs.\r\nexport function isValid(board:(number|null)[][], row:number, col:number, k:number) {\r\n  //Determine if the current value k exists with in the respective positions:\r\n    //row\r\n    //column\r\n    //sub-box\r\n  //If it does, the entry is not valid.\r\n  for (let i = 0; i < 9; i++) {\r\n      const m = 3 * Math.floor(row / 3) + Math.floor(i / 3);\r\n      const n = 3 * Math.floor(col / 3) + i % 3;\r\n      if (board[row][i] == k || board[i][col] == k || board[m][n] == k) {\r\n        return false;\r\n      }\r\n  }\r\n  return true;\r\n}\r\n\r\n//Function to generate game board.\r\nexport function generateBoard(data:(number|null)[][]):(number|null)[][] {\r\n  //Iterate through each row of board.\r\n  for (let i = 0; i < 9; i++) {\r\n    //Iterate through column of respective row.\r\n    for (let j = 0; j < 9; j++) {\r\n      //If current value needs an entry.\r\n      if (data[i][j] === null) {\r\n        //Iterate through possible values.\r\n        for (let k = 1; k <= 9; k++) {\r\n          //Determine if current value if valid for the board\r\n          //at the current position.\r\n          if (isValid(data, i, j, k)) {\r\n            data[i][j] = k;\r\n            //If the value is valid, recurse with the given value\r\n            //entered on the board.\r\n            if (!generateBoard(data).some(row => row.includes(null))) {\r\n              return generateBoard(data);\r\n            //If false is returned, iterate to the next value.\r\n            } else {\r\n              data[i][j] = null;\r\n            }\r\n          }\r\n        }\r\n        return data;\r\n      }\r\n    }\r\n  }\r\n  return data;\r\n}\r\n\r\n//Function determines if the current game board is valid.\r\nexport function isValidSudoku(board:(number|null)[][]):boolean {\r\n  for (let i = 0; i < 9; i++) {\r\n    let row = new Set(),\r\n        col = new Set(),\r\n        box = new Set();\r\n\r\n    for (let j = 0; j < 9; j++) {\r\n      let _row = board[i][j];\r\n      let _col = board[j][i];\r\n      let _box = board[3*Math.floor(i/3)+Math.floor(j/3)][3*(i%3)+(j%3)]\r\n      \r\n      if (_row !== null) {\r\n        if (row.has(_row)) return false;\r\n        row.add(_row);\r\n      }\r\n      if (_col !== null) {\r\n        if (col.has(_col)) return false;\r\n        col.add(_col);\r\n      }\r\n      \r\n      if (_box !== null) {\r\n        if (box.has(_box)) return false;\r\n        box.add(_box);\r\n      } \r\n    }\r\n  }\r\n  return true\r\n};\r\n////*Not needed.\r\n////Function determines if the current game board is solvable.\r\n// export function isSolvable(data:(number|null)[][]):boolean {\r\n//   //Iterate through each row of board.\r\n//   for (let i = 0; i < 9; i++) {\r\n//     //Iterate through column of respective row.\r\n//     for (let j = 0; j < 9; j++) {\r\n//       //If current value needs an entry.\r\n//       if (data[i][j] == null) {\r\n//         //Iterate through possible values.\r\n//         for (let k = 1; k <= 9; k++) {\r\n//           //Determine if current value if valid for the board\r\n//           //at the current position.\r\n//           if (isValid(data, i, j, k)) {\r\n//             data[i][j] = k;\r\n//             //If the value is valid, recurse with the given value\r\n//             //entered on the board.\r\n//             if (isSolvable(data)) {\r\n//               return true;\r\n//             //If false is returned, iterate to the next value.\r\n//             } else {\r\n//               data[i][j] = null;\r\n//             }\r\n//           }\r\n//         }\r\n//         return false;\r\n//       }\r\n//     }\r\n//   }\r\n//   return true;\r\n// }\r\n\r\n//Function initializes game board based on difficulty input.\r\nexport function initBoard(curBoard: (number|null)[][], difficulty:number):(number|null)[][]{\r\n  let blank:number = Math.floor(37 * Math.random());\r\n  switch(difficulty){\r\n    //Easy selection.\r\n    case 0:\r\n      //Board should be initialized with (37, 46) non-null values.\r\n      blank = 81 - (37 + Math.floor(10 * Math.random()));\r\n      break;\r\n    //Medium selection.\r\n    case 1:\r\n      //Board should be initialized with (27, 36) non-null values.\r\n      blank = 81 - (27 + Math.floor(10 * Math.random()));\r\n      break;\r\n    //Hard selection.\r\n    case 2:\r\n      //Board should be initialized with (19, 26) non-null values.\r\n      blank = 81 - (19 + Math.floor(7 * Math.random()));\r\n      break;\r\n    //Extreme selection.\r\n    case 3:\r\n      //Board should be initialized with 18 non-null values.\r\n      blank = 63;\r\n      break;\r\n  }\r\n\r\n  for(let i = 0; i < blank; i++){\r\n    let row:number = Math.floor(9*Math.random());\r\n    let col:number = Math.floor(9*Math.random());\r\n    while(!curBoard[row][col]) row = Math.floor(9*Math.random()),col = Math.floor(9*Math.random());\r\n    const clonedBoard = curBoard.map(arr => [...arr])\r\n    ////*Not needed.\r\n    // while(!isSolvable(clonedBoard)){\r\n    //   clonedBoard[row][col] = curBoard[row][col];\r\n    //   row = Math.floor(9*Math.random());\r\n    //   col = Math.floor(9*Math.random());\r\n    //   while(!curBoard[row][col]) row = Math.floor(9*Math.random()),col = Math.floor(9*Math.random());\r\n    //   clonedBoard[row][col] = null;\r\n    // }\r\n    curBoard[row][col] = null;\r\n  }\r\n  return curBoard;\r\n}\r\n\r\n//Function determines if the board has been solved.\r\nexport function isCompleted(board:(number|null)[][]):boolean{\r\n  for(let i = 0; i < board.length; i++){\r\n    if(board[i].includes(null)) return false;\r\n  }\r\n  return true;\r\n}"]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a4c40478abe9870554ae80f3b940e0d4e3dba091"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_21q9389883 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_21q9389883();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_21q9389883().s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_21q9389883().s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_21q9389883().s[2]++;
exports.shuffle = shuffle;

/* istanbul ignore next */
cov_21q9389883().s[3]++;
exports.isValid = isValid;

/* istanbul ignore next */
cov_21q9389883().s[4]++;
exports.generateBoard = generateBoard;

/* istanbul ignore next */
cov_21q9389883().s[5]++;
exports.isValidSudoku = isValidSudoku;

/* istanbul ignore next */
cov_21q9389883().s[6]++;
exports.initBoard = initBoard;

/* istanbul ignore next */
cov_21q9389883().s[7]++;
exports.isCompleted = isCompleted;

var _toConsumableArray2 =
/* istanbul ignore next */
(cov_21q9389883().s[8]++, _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray")));

function shuffle(array) {
  /* istanbul ignore next */
  cov_21q9389883().f[0]++;
  var currentIndex =
  /* istanbul ignore next */
  (cov_21q9389883().s[9]++, array.length),
      randomIndex;

  /* istanbul ignore next */
  cov_21q9389883().s[10]++;

  while (0 !== currentIndex) {
    /* istanbul ignore next */
    cov_21q9389883().s[11]++;
    randomIndex = Math.floor(Math.random() * currentIndex);

    /* istanbul ignore next */
    cov_21q9389883().s[12]++;
    currentIndex--;

    var _ref =
    /* istanbul ignore next */
    (cov_21q9389883().s[13]++, [array[randomIndex], array[currentIndex]]);

    /* istanbul ignore next */
    cov_21q9389883().s[14]++;
    array[currentIndex] = _ref[0];

    /* istanbul ignore next */
    cov_21q9389883().s[15]++;
    array[randomIndex] = _ref[1];
  }

  /* istanbul ignore next */
  cov_21q9389883().s[16]++;
  return array;
}

function isValid(board, row, col, k) {
  /* istanbul ignore next */
  cov_21q9389883().f[1]++;
  cov_21q9389883().s[17]++;

  for (var i =
  /* istanbul ignore next */
  (cov_21q9389883().s[18]++, 0); i < 9; i++) {
    var m =
    /* istanbul ignore next */
    (cov_21q9389883().s[19]++, 3 * Math.floor(row / 3) + Math.floor(i / 3));
    var n =
    /* istanbul ignore next */
    (cov_21q9389883().s[20]++, 3 * Math.floor(col / 3) + i % 3);

    /* istanbul ignore next */
    cov_21q9389883().s[21]++;

    if (
    /* istanbul ignore next */
    (cov_21q9389883().b[1][0]++, board[row][i] == k) ||
    /* istanbul ignore next */
    (cov_21q9389883().b[1][1]++, board[i][col] == k) ||
    /* istanbul ignore next */
    (cov_21q9389883().b[1][2]++, board[m][n] == k)) {
      /* istanbul ignore next */
      cov_21q9389883().b[0][0]++;
      cov_21q9389883().s[22]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_21q9389883().b[0][1]++;
    }
  }

  /* istanbul ignore next */
  cov_21q9389883().s[23]++;
  return true;
}

function generateBoard(data) {
  /* istanbul ignore next */
  cov_21q9389883().f[2]++;
  cov_21q9389883().s[24]++;

  for (var i =
  /* istanbul ignore next */
  (cov_21q9389883().s[25]++, 0); i < 9; i++) {
    /* istanbul ignore next */
    cov_21q9389883().s[26]++;

    for (var j =
    /* istanbul ignore next */
    (cov_21q9389883().s[27]++, 0); j < 9; j++) {
      /* istanbul ignore next */
      cov_21q9389883().s[28]++;

      if (data[i][j] === null) {
        /* istanbul ignore next */
        cov_21q9389883().b[2][0]++;
        cov_21q9389883().s[29]++;

        for (var k =
        /* istanbul ignore next */
        (cov_21q9389883().s[30]++, 1); k <= 9; k++) {
          /* istanbul ignore next */
          cov_21q9389883().s[31]++;

          if (isValid(data, i, j, k)) {
            /* istanbul ignore next */
            cov_21q9389883().b[3][0]++;
            cov_21q9389883().s[32]++;
            data[i][j] = k;

            /* istanbul ignore next */
            cov_21q9389883().s[33]++;

            if (!generateBoard(data).some(function (row) {
              /* istanbul ignore next */
              cov_21q9389883().f[3]++;
              cov_21q9389883().s[34]++;
              return row.includes(null);
            })) {
              /* istanbul ignore next */
              cov_21q9389883().b[4][0]++;
              cov_21q9389883().s[35]++;
              return generateBoard(data);
            } else {
              /* istanbul ignore next */
              cov_21q9389883().b[4][1]++;
              cov_21q9389883().s[36]++;
              data[i][j] = null;
            }
          } else
          /* istanbul ignore next */
          {
            cov_21q9389883().b[3][1]++;
          }
        }

        /* istanbul ignore next */
        cov_21q9389883().s[37]++;
        return data;
      } else
      /* istanbul ignore next */
      {
        cov_21q9389883().b[2][1]++;
      }
    }
  }

  /* istanbul ignore next */
  cov_21q9389883().s[38]++;
  return data;
}

function isValidSudoku(board) {
  /* istanbul ignore next */
  cov_21q9389883().f[4]++;
  cov_21q9389883().s[39]++;

  for (var i =
  /* istanbul ignore next */
  (cov_21q9389883().s[40]++, 0); i < 9; i++) {
    var row =
    /* istanbul ignore next */
    (cov_21q9389883().s[41]++, new Set()),
        col =
    /* istanbul ignore next */
    (cov_21q9389883().s[42]++, new Set()),
        box =
    /* istanbul ignore next */
    (cov_21q9389883().s[43]++, new Set());

    /* istanbul ignore next */
    cov_21q9389883().s[44]++;

    for (var j =
    /* istanbul ignore next */
    (cov_21q9389883().s[45]++, 0); j < 9; j++) {
      var _row =
      /* istanbul ignore next */
      (cov_21q9389883().s[46]++, board[i][j]);

      var _col =
      /* istanbul ignore next */
      (cov_21q9389883().s[47]++, board[j][i]);

      var _box =
      /* istanbul ignore next */
      (cov_21q9389883().s[48]++, board[3 * Math.floor(i / 3) + Math.floor(j / 3)][3 * (i % 3) + j % 3]);

      /* istanbul ignore next */
      cov_21q9389883().s[49]++;

      if (_row !== null) {
        /* istanbul ignore next */
        cov_21q9389883().b[5][0]++;
        cov_21q9389883().s[50]++;

        if (row.has(_row)) {
          /* istanbul ignore next */
          cov_21q9389883().b[6][0]++;
          cov_21q9389883().s[51]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_21q9389883().b[6][1]++;
        }

        cov_21q9389883().s[52]++;
        row.add(_row);
      } else
      /* istanbul ignore next */
      {
        cov_21q9389883().b[5][1]++;
      }

      cov_21q9389883().s[53]++;

      if (_col !== null) {
        /* istanbul ignore next */
        cov_21q9389883().b[7][0]++;
        cov_21q9389883().s[54]++;

        if (col.has(_col)) {
          /* istanbul ignore next */
          cov_21q9389883().b[8][0]++;
          cov_21q9389883().s[55]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_21q9389883().b[8][1]++;
        }

        cov_21q9389883().s[56]++;
        col.add(_col);
      } else
      /* istanbul ignore next */
      {
        cov_21q9389883().b[7][1]++;
      }

      cov_21q9389883().s[57]++;

      if (_box !== null) {
        /* istanbul ignore next */
        cov_21q9389883().b[9][0]++;
        cov_21q9389883().s[58]++;

        if (box.has(_box)) {
          /* istanbul ignore next */
          cov_21q9389883().b[10][0]++;
          cov_21q9389883().s[59]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_21q9389883().b[10][1]++;
        }

        cov_21q9389883().s[60]++;
        box.add(_box);
      } else
      /* istanbul ignore next */
      {
        cov_21q9389883().b[9][1]++;
      }
    }
  }

  /* istanbul ignore next */
  cov_21q9389883().s[61]++;
  return true;
}

;

function initBoard(curBoard, difficulty) {
  /* istanbul ignore next */
  cov_21q9389883().f[5]++;
  var blank =
  /* istanbul ignore next */
  (cov_21q9389883().s[62]++, Math.floor(37 * Math.random()));

  /* istanbul ignore next */
  cov_21q9389883().s[63]++;

  switch (difficulty) {
    case 0:
      /* istanbul ignore next */
      cov_21q9389883().b[11][0]++;
      cov_21q9389883().s[64]++;
      blank = 81 - (37 + Math.floor(10 * Math.random()));

      /* istanbul ignore next */
      cov_21q9389883().s[65]++;
      break;

    case 1:
      /* istanbul ignore next */
      cov_21q9389883().b[11][1]++;
      cov_21q9389883().s[66]++;
      blank = 81 - (27 + Math.floor(10 * Math.random()));

      /* istanbul ignore next */
      cov_21q9389883().s[67]++;
      break;

    case 2:
      /* istanbul ignore next */
      cov_21q9389883().b[11][2]++;
      cov_21q9389883().s[68]++;
      blank = 81 - (19 + Math.floor(7 * Math.random()));

      /* istanbul ignore next */
      cov_21q9389883().s[69]++;
      break;

    case 3:
      /* istanbul ignore next */
      cov_21q9389883().b[11][3]++;
      cov_21q9389883().s[70]++;
      blank = 63;

      /* istanbul ignore next */
      cov_21q9389883().s[71]++;
      break;
  }

  /* istanbul ignore next */
  cov_21q9389883().s[72]++;

  for (var i =
  /* istanbul ignore next */
  (cov_21q9389883().s[73]++, 0); i < blank; i++) {
    var row =
    /* istanbul ignore next */
    (cov_21q9389883().s[74]++, Math.floor(9 * Math.random()));
    var col =
    /* istanbul ignore next */
    (cov_21q9389883().s[75]++, Math.floor(9 * Math.random()));

    /* istanbul ignore next */
    cov_21q9389883().s[76]++;

    while (!curBoard[row][col]) {
      /* istanbul ignore next */
      cov_21q9389883().s[77]++;
      row = Math.floor(9 * Math.random()), col = Math.floor(9 * Math.random());
    }

    var clonedBoard =
    /* istanbul ignore next */
    (cov_21q9389883().s[78]++, curBoard.map(function (arr) {
      /* istanbul ignore next */
      cov_21q9389883().f[6]++;
      cov_21q9389883().s[79]++;
      return (0, _toConsumableArray2.default)(arr);
    }));

    /* istanbul ignore next */
    cov_21q9389883().s[80]++;
    curBoard[row][col] = null;
  }

  /* istanbul ignore next */
  cov_21q9389883().s[81]++;
  return curBoard;
}

function isCompleted(board) {
  /* istanbul ignore next */
  cov_21q9389883().f[7]++;
  cov_21q9389883().s[82]++;

  for (var i =
  /* istanbul ignore next */
  (cov_21q9389883().s[83]++, 0); i < board.length; i++) {
    /* istanbul ignore next */
    cov_21q9389883().s[84]++;

    if (board[i].includes(null)) {
      /* istanbul ignore next */
      cov_21q9389883().b[12][0]++;
      cov_21q9389883().s[85]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_21q9389883().b[12][1]++;
    }
  }

  /* istanbul ignore next */
  cov_21q9389883().s[86]++;
  return true;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYXNoZWVcXERvY3VtZW50c1xcSmF2YXNjcmlwdFxcUmVhY3RcXFJlYWN0IE5hdGl2ZVxcc3VkdWtvXFxzcmNcXHN0YXRlXFxib2FyZENvbnRyb2xsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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QTs7QUFDbkMsUUFBRyxLQUFLLENBQUwsQ0FBSyxDQUFMLENBQUEsUUFBQSxDQUFILElBQUcsQ0FBSCxFQUE0QjtBQUFBO0FBQUE7QUFBQTtBQUFBLGFBQUEsS0FBQTtBQUFBLEtBQTVCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDRDs7QUFIZ0Q7QUFBQTtBQUlqRCxTQUFBLElBQUE7QUFDRCIsInNvdXJjZXNDb250ZW50IjpbIi8vRnVuY3Rpb24gc2h1ZmZsZXMgYXJyYXkuXHJcbmV4cG9ydCBmdW5jdGlvbiBzaHVmZmxlKGFycmF5OiBudW1iZXJbXSk6bnVtYmVyW10ge1xyXG4gIHZhciBjdXJyZW50SW5kZXg6bnVtYmVyID0gYXJyYXkubGVuZ3RoLCAgcmFuZG9tSW5kZXg6bnVtYmVyO1xyXG4gIC8vIFdoaWxlIHRoZXJlIHJlbWFpbiBlbGVtZW50cyB0byBzaHVmZmxlLi4uXHJcbiAgd2hpbGUgKDAgIT09IGN1cnJlbnRJbmRleCkge1xyXG4gICAgLy8gUGljayBhIHJlbWFpbmluZyBlbGVtZW50Li4uXHJcbiAgICByYW5kb21JbmRleCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGN1cnJlbnRJbmRleCk7XHJcbiAgICBjdXJyZW50SW5kZXgtLTtcclxuICAgIC8vIEFuZCBzd2FwIGl0IHdpdGggdGhlIGN1cnJlbnQgZWxlbWVudC5cclxuICAgIFthcnJheVtjdXJyZW50SW5kZXhdLCBhcnJheVtyYW5kb21JbmRleF1dID0gW1xyXG4gICAgICBhcnJheVtyYW5kb21JbmRleF0sIGFycmF5W2N1cnJlbnRJbmRleF1dO1xyXG4gIH1cclxuICByZXR1cm4gYXJyYXk7XHJcbn1cclxuXHJcbi8vSGVscGVyIGZ1bmN0aW9uIGZvciBnZW5lcmF0ZUJvYXJkIGZ1bmN0aW9uIHRvIGRldGVybWluZSBpZiByZXNwZWN0aXZlIHJvdyBhbmQgY29sdW1uIGFyZSB2YWxpZCBpbnB1dHMuXHJcbmV4cG9ydCBmdW5jdGlvbiBpc1ZhbGlkKGJvYXJkOihudW1iZXJ8bnVsbClbXVtdLCByb3c6bnVtYmVyLCBjb2w6bnVtYmVyLCBrOm51bWJlcikge1xyXG4gIC8vRGV0ZXJtaW5lIGlmIHRoZSBjdXJyZW50IHZhbHVlIGsgZXhpc3RzIHdpdGggaW4gdGhlIHJlc3BlY3RpdmUgcG9zaXRpb25zOlxyXG4gICAgLy9yb3dcclxuICAgIC8vY29sdW1uXHJcbiAgICAvL3N1Yi1ib3hcclxuICAvL0lmIGl0IGRvZXMsIHRoZSBlbnRyeSBpcyBub3QgdmFsaWQuXHJcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCA5OyBpKyspIHtcclxuICAgICAgY29uc3QgbSA9IDMgKiBNYXRoLmZsb29yKHJvdyAvIDMpICsgTWF0aC5mbG9vcihpIC8gMyk7XHJcbiAgICAgIGNvbnN0IG4gPSAzICogTWF0aC5mbG9vcihjb2wgLyAzKSArIGkgJSAzO1xyXG4gICAgICBpZiAoYm9hcmRbcm93XVtpXSA9PSBrIHx8IGJvYXJkW2ldW2NvbF0gPT0gayB8fCBib2FyZFttXVtuXSA9PSBrKSB7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICB9XHJcbiAgfVxyXG4gIHJldHVybiB0cnVlO1xyXG59XHJcblxyXG4vL0Z1bmN0aW9uIHRvIGdlbmVyYXRlIGdhbWUgYm9hcmQuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZW5lcmF0ZUJvYXJkKGRhdGE6KG51bWJlcnxudWxsKVtdW10pOihudW1iZXJ8bnVsbClbXVtdIHtcclxuICAvL0l0ZXJhdGUgdGhyb3VnaCBlYWNoIHJvdyBvZiBib2FyZC5cclxuICBmb3IgKGxldCBpID0gMDsgaSA8IDk7IGkrKykge1xyXG4gICAgLy9JdGVyYXRlIHRocm91Z2ggY29sdW1uIG9mIHJlc3BlY3RpdmUgcm93LlxyXG4gICAgZm9yIChsZXQgaiA9IDA7IGogPCA5OyBqKyspIHtcclxuICAgICAgLy9JZiBjdXJyZW50IHZhbHVlIG5lZWRzIGFuIGVudHJ5LlxyXG4gICAgICBpZiAoZGF0YVtpXVtqXSA9PT0gbnVsbCkge1xyXG4gICAgICAgIC8vSXRlcmF0ZSB0aHJvdWdoIHBvc3NpYmxlIHZhbHVlcy5cclxuICAgICAgICBmb3IgKGxldCBrID0gMTsgayA8PSA5OyBrKyspIHtcclxuICAgICAgICAgIC8vRGV0ZXJtaW5lIGlmIGN1cnJlbnQgdmFsdWUgaWYgdmFsaWQgZm9yIHRoZSBib2FyZFxyXG4gICAgICAgICAgLy9hdCB0aGUgY3VycmVudCBwb3NpdGlvbi5cclxuICAgICAgICAgIGlmIChpc1ZhbGlkKGRhdGEsIGksIGosIGspKSB7XHJcbiAgICAgICAgICAgIGRhdGFbaV1bal0gPSBrO1xyXG4gICAgICAgICAgICAvL0lmIHRoZSB2YWx1ZSBpcyB2YWxpZCwgcmVjdXJzZSB3aXRoIHRoZSBnaXZlbiB2YWx1ZVxyXG4gICAgICAgICAgICAvL2VudGVyZWQgb24gdGhlIGJvYXJkLlxyXG4gICAgICAgICAgICBpZiAoIWdlbmVyYXRlQm9hcmQoZGF0YSkuc29tZShyb3cgPT4gcm93LmluY2x1ZGVzKG51bGwpKSkge1xyXG4gICAgICAgICAgICAgIHJldHVybiBnZW5lcmF0ZUJvYXJkKGRhdGEpO1xyXG4gICAgICAgICAgICAvL0lmIGZhbHNlIGlzIHJldHVybmVkLCBpdGVyYXRlIHRvIHRoZSBuZXh0IHZhbHVlLlxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgIGRhdGFbaV1bal0gPSBudWxsO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBkYXRhO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiBkYXRhO1xyXG59XHJcblxyXG4vL0Z1bmN0aW9uIGRldGVybWluZXMgaWYgdGhlIGN1cnJlbnQgZ2FtZSBib2FyZCBpcyB2YWxpZC5cclxuZXhwb3J0IGZ1bmN0aW9uIGlzVmFsaWRTdWRva3UoYm9hcmQ6KG51bWJlcnxudWxsKVtdW10pOmJvb2xlYW4ge1xyXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgOTsgaSsrKSB7XHJcbiAgICBsZXQgcm93ID0gbmV3IFNldCgpLFxyXG4gICAgICAgIGNvbCA9IG5ldyBTZXQoKSxcclxuICAgICAgICBib3ggPSBuZXcgU2V0KCk7XHJcblxyXG4gICAgZm9yIChsZXQgaiA9IDA7IGogPCA5OyBqKyspIHtcclxuICAgICAgbGV0IF9yb3cgPSBib2FyZFtpXVtqXTtcclxuICAgICAgbGV0IF9jb2wgPSBib2FyZFtqXVtpXTtcclxuICAgICAgbGV0IF9ib3ggPSBib2FyZFszKk1hdGguZmxvb3IoaS8zKStNYXRoLmZsb29yKGovMyldWzMqKGklMykrKGolMyldXHJcbiAgICAgIFxyXG4gICAgICBpZiAoX3JvdyAhPT0gbnVsbCkge1xyXG4gICAgICAgIGlmIChyb3cuaGFzKF9yb3cpKSByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgcm93LmFkZChfcm93KTtcclxuICAgICAgfVxyXG4gICAgICBpZiAoX2NvbCAhPT0gbnVsbCkge1xyXG4gICAgICAgIGlmIChjb2wuaGFzKF9jb2wpKSByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgY29sLmFkZChfY29sKTtcclxuICAgICAgfVxyXG4gICAgICBcclxuICAgICAgaWYgKF9ib3ggIT09IG51bGwpIHtcclxuICAgICAgICBpZiAoYm94LmhhcyhfYm94KSkgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIGJveC5hZGQoX2JveCk7XHJcbiAgICAgIH0gXHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiB0cnVlXHJcbn07XHJcbi8vLy8qTm90IG5lZWRlZC5cclxuLy8vL0Z1bmN0aW9uIGRldGVybWluZXMgaWYgdGhlIGN1cnJlbnQgZ2FtZSBib2FyZCBpcyBzb2x2YWJsZS5cclxuLy8gZXhwb3J0IGZ1bmN0aW9uIGlzU29sdmFibGUoZGF0YToobnVtYmVyfG51bGwpW11bXSk6Ym9vbGVhbiB7XHJcbi8vICAgLy9JdGVyYXRlIHRocm91Z2ggZWFjaCByb3cgb2YgYm9hcmQuXHJcbi8vICAgZm9yIChsZXQgaSA9IDA7IGkgPCA5OyBpKyspIHtcclxuLy8gICAgIC8vSXRlcmF0ZSB0aHJvdWdoIGNvbHVtbiBvZiByZXNwZWN0aXZlIHJvdy5cclxuLy8gICAgIGZvciAobGV0IGogPSAwOyBqIDwgOTsgaisrKSB7XHJcbi8vICAgICAgIC8vSWYgY3VycmVudCB2YWx1ZSBuZWVkcyBhbiBlbnRyeS5cclxuLy8gICAgICAgaWYgKGRhdGFbaV1bal0gPT0gbnVsbCkge1xyXG4vLyAgICAgICAgIC8vSXRlcmF0ZSB0aHJvdWdoIHBvc3NpYmxlIHZhbHVlcy5cclxuLy8gICAgICAgICBmb3IgKGxldCBrID0gMTsgayA8PSA5OyBrKyspIHtcclxuLy8gICAgICAgICAgIC8vRGV0ZXJtaW5lIGlmIGN1cnJlbnQgdmFsdWUgaWYgdmFsaWQgZm9yIHRoZSBib2FyZFxyXG4vLyAgICAgICAgICAgLy9hdCB0aGUgY3VycmVudCBwb3NpdGlvbi5cclxuLy8gICAgICAgICAgIGlmIChpc1ZhbGlkKGRhdGEsIGksIGosIGspKSB7XHJcbi8vICAgICAgICAgICAgIGRhdGFbaV1bal0gPSBrO1xyXG4vLyAgICAgICAgICAgICAvL0lmIHRoZSB2YWx1ZSBpcyB2YWxpZCwgcmVjdXJzZSB3aXRoIHRoZSBnaXZlbiB2YWx1ZVxyXG4vLyAgICAgICAgICAgICAvL2VudGVyZWQgb24gdGhlIGJvYXJkLlxyXG4vLyAgICAgICAgICAgICBpZiAoaXNTb2x2YWJsZShkYXRhKSkge1xyXG4vLyAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4vLyAgICAgICAgICAgICAvL0lmIGZhbHNlIGlzIHJldHVybmVkLCBpdGVyYXRlIHRvIHRoZSBuZXh0IHZhbHVlLlxyXG4vLyAgICAgICAgICAgICB9IGVsc2Uge1xyXG4vLyAgICAgICAgICAgICAgIGRhdGFbaV1bal0gPSBudWxsO1xyXG4vLyAgICAgICAgICAgICB9XHJcbi8vICAgICAgICAgICB9XHJcbi8vICAgICAgICAgfVxyXG4vLyAgICAgICAgIHJldHVybiBmYWxzZTtcclxuLy8gICAgICAgfVxyXG4vLyAgICAgfVxyXG4vLyAgIH1cclxuLy8gICByZXR1cm4gdHJ1ZTtcclxuLy8gfVxyXG5cclxuLy9GdW5jdGlvbiBpbml0aWFsaXplcyBnYW1lIGJvYXJkIGJhc2VkIG9uIGRpZmZpY3VsdHkgaW5wdXQuXHJcbmV4cG9ydCBmdW5jdGlvbiBpbml0Qm9hcmQoY3VyQm9hcmQ6IChudW1iZXJ8bnVsbClbXVtdLCBkaWZmaWN1bHR5Om51bWJlcik6KG51bWJlcnxudWxsKVtdW117XHJcbiAgbGV0IGJsYW5rOm51bWJlciA9IE1hdGguZmxvb3IoMzcgKiBNYXRoLnJhbmRvbSgpKTtcclxuICBzd2l0Y2goZGlmZmljdWx0eSl7XHJcbiAgICAvL0Vhc3kgc2VsZWN0aW9uLlxyXG4gICAgY2FzZSAwOlxyXG4gICAgICAvL0JvYXJkIHNob3VsZCBiZSBpbml0aWFsaXplZCB3aXRoICgzNywgNDYpIG5vbi1udWxsIHZhbHVlcy5cclxuICAgICAgYmxhbmsgPSA4MSAtICgzNyArIE1hdGguZmxvb3IoMTAgKiBNYXRoLnJhbmRvbSgpKSk7XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgLy9NZWRpdW0gc2VsZWN0aW9uLlxyXG4gICAgY2FzZSAxOlxyXG4gICAgICAvL0JvYXJkIHNob3VsZCBiZSBpbml0aWFsaXplZCB3aXRoICgyNywgMzYpIG5vbi1udWxsIHZhbHVlcy5cclxuICAgICAgYmxhbmsgPSA4MSAtICgyNyArIE1hdGguZmxvb3IoMTAgKiBNYXRoLnJhbmRvbSgpKSk7XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgLy9IYXJkIHNlbGVjdGlvbi5cclxuICAgIGNhc2UgMjpcclxuICAgICAgLy9Cb2FyZCBzaG91bGQgYmUgaW5pdGlhbGl6ZWQgd2l0aCAoMTksIDI2KSBub24tbnVsbCB2YWx1ZXMuXHJcbiAgICAgIGJsYW5rID0gODEgLSAoMTkgKyBNYXRoLmZsb29yKDcgKiBNYXRoLnJhbmRvbSgpKSk7XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgLy9FeHRyZW1lIHNlbGVjdGlvbi5cclxuICAgIGNhc2UgMzpcclxuICAgICAgLy9Cb2FyZCBzaG91bGQgYmUgaW5pdGlhbGl6ZWQgd2l0aCAxOCBub24tbnVsbCB2YWx1ZXMuXHJcbiAgICAgIGJsYW5rID0gNjM7XHJcbiAgICAgIGJyZWFrO1xyXG4gIH1cclxuXHJcbiAgZm9yKGxldCBpID0gMDsgaSA8IGJsYW5rOyBpKyspe1xyXG4gICAgbGV0IHJvdzpudW1iZXIgPSBNYXRoLmZsb29yKDkqTWF0aC5yYW5kb20oKSk7XHJcbiAgICBsZXQgY29sOm51bWJlciA9IE1hdGguZmxvb3IoOSpNYXRoLnJhbmRvbSgpKTtcclxuICAgIHdoaWxlKCFjdXJCb2FyZFtyb3ddW2NvbF0pIHJvdyA9IE1hdGguZmxvb3IoOSpNYXRoLnJhbmRvbSgpKSxjb2wgPSBNYXRoLmZsb29yKDkqTWF0aC5yYW5kb20oKSk7XHJcbiAgICBjb25zdCBjbG9uZWRCb2FyZCA9IGN1ckJvYXJkLm1hcChhcnIgPT4gWy4uLmFycl0pXHJcbiAgICAvLy8vKk5vdCBuZWVkZWQuXHJcbiAgICAvLyB3aGlsZSghaXNTb2x2YWJsZShjbG9uZWRCb2FyZCkpe1xyXG4gICAgLy8gICBjbG9uZWRCb2FyZFtyb3ddW2NvbF0gPSBjdXJCb2FyZFtyb3ddW2NvbF07XHJcbiAgICAvLyAgIHJvdyA9IE1hdGguZmxvb3IoOSpNYXRoLnJhbmRvbSgpKTtcclxuICAgIC8vICAgY29sID0gTWF0aC5mbG9vcig5Kk1hdGgucmFuZG9tKCkpO1xyXG4gICAgLy8gICB3aGlsZSghY3VyQm9hcmRbcm93XVtjb2xdKSByb3cgPSBNYXRoLmZsb29yKDkqTWF0aC5yYW5kb20oKSksY29sID0gTWF0aC5mbG9vcig5Kk1hdGgucmFuZG9tKCkpO1xyXG4gICAgLy8gICBjbG9uZWRCb2FyZFtyb3ddW2NvbF0gPSBudWxsO1xyXG4gICAgLy8gfVxyXG4gICAgY3VyQm9hcmRbcm93XVtjb2xdID0gbnVsbDtcclxuICB9XHJcbiAgcmV0dXJuIGN1ckJvYXJkO1xyXG59XHJcblxyXG4vL0Z1bmN0aW9uIGRldGVybWluZXMgaWYgdGhlIGJvYXJkIGhhcyBiZWVuIHNvbHZlZC5cclxuZXhwb3J0IGZ1bmN0aW9uIGlzQ29tcGxldGVkKGJvYXJkOihudW1iZXJ8bnVsbClbXVtdKTpib29sZWFue1xyXG4gIGZvcihsZXQgaSA9IDA7IGkgPCBib2FyZC5sZW5ndGg7IGkrKyl7XHJcbiAgICBpZihib2FyZFtpXS5pbmNsdWRlcyhudWxsKSkgcmV0dXJuIGZhbHNlO1xyXG4gIH1cclxuICByZXR1cm4gdHJ1ZTtcclxufSJdfQ==