14eab8bfeb2e4831d9f9b0f116305312
"use strict";var _excluded = ["children", "size", "style", "theme", "visible"],_excluded2 = ["backgroundColor"];function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) {symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});}keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {require("@babel/runtime/helpers/defineProperty")(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}

Object.defineProperty(exports, "__esModule", {
  value: true });

exports.default = void 0;

var React = _interopRequireWildcard(require("react"));







var _getContrastingColor = _interopRequireDefault(require("../utils/getContrastingColor"));

function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

function _getRequireWildcardCache() {if (typeof WeakMap !== "function") return null;var cache = new WeakMap();_getRequireWildcardCache = function _getRequireWildcardCache() {return cache;};return cache;}

function _interopRequireWildcard(obj) {if (obj && obj.__esModule) {return obj;}if (obj === null || typeof obj !== "object" && typeof obj !== "function") {return { default: obj };}var cache = _getRequireWildcardCache();if (cache && cache.has(obj)) {return cache.get(obj);}var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {if (Object.prototype.hasOwnProperty.call(obj, key)) {var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}newObj.default = obj;if (cache) {cache.set(obj, newObj);}return newObj;}

function _extends() {_extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};return _extends.apply(this, arguments);}

var defaultSize = 20;




























var Badge = function Badge(_ref)






{var children = _ref.children,_ref$size = _ref.size,size = _ref$size === void 0 ? defaultSize : _ref$size,style = _ref.style,theme = _ref.theme,_ref$visible = _ref.visible,visible = _ref$visible === void 0 ? true : _ref$visible,rest = require("@babel/runtime/helpers/objectWithoutProperties")(_ref, _excluded);
  var _React$useRef =

  React.useRef(new (require("react-native").Animated.Value)(visible ? 1 : 0)),opacity = _React$useRef.current;
  var isFirstRendering = React.useRef(true);
  var

  scale =

  theme.animation.scale;
  React.useEffect(function () {

    if (isFirstRendering.current) {
      isFirstRendering.current = false;
      return;
    }

    require("react-native").Animated.timing(opacity, {
      toValue: visible ? 1 : 0,
      duration: 150 * scale,
      useNativeDriver: true }).
    start();
  }, [visible, opacity, scale]);
  var _ref2 =


  require("react-native").StyleSheet.flatten(style) || {},_ref2$backgroundColor = _ref2.backgroundColor,backgroundColor = _ref2$backgroundColor === void 0 ? theme.colors.notification : _ref2$backgroundColor,restStyle = require("@babel/runtime/helpers/objectWithoutProperties")(_ref2, _excluded2);
  var textColor = (0, _getContrastingColor.default)(backgroundColor, require("../styles/colors").white, require("../styles/colors").black);
  var borderRadius = size / 2;
  return React.createElement(require("react-native").Animated.Text, _extends({
    numberOfLines: 1,
    style: [_objectSpread(_objectSpread({
      opacity: opacity,
      backgroundColor: backgroundColor,
      color: textColor,
      fontSize: size * 0.5 },
    theme.fonts.regular), {}, {
      lineHeight: size,
      height: size,
      minWidth: size,
      borderRadius: borderRadius }),
    styles.container, restStyle] },
  rest), children);
};

var _default = (0, require("../core/theming").withTheme)(Badge);

exports.default = _default;

var styles = require("react-native").StyleSheet.create({
  container: {
    alignSelf: 'flex-end',
    textAlign: 'center',
    textAlignVertical: 'center',
    paddingHorizontal: 4,
    overflow: 'hidden' } });