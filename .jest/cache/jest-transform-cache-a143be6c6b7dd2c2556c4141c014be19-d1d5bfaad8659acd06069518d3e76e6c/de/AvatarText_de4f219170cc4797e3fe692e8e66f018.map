{"version":3,"sources":["AvatarText.tsx"],"names":["defaultSize","AvatarText","size","color","rest","backgroundColor","theme","restStyle","StyleSheet","textColor","customColor","white","width","height","borderRadius","styles","fontSize","lineHeight","container","justifyContent","alignItems","text","textAlign","textAlignVertical"],"mappings":";;;;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AAOA,IAAA,KAAA,GAAA,sBAAA,CAAA,OAAA,sBAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,sBAAA;;AACA,IAAA,OAAA,GAAA,OAAA,uBAAA;;AACA,IAAA,oBAAA,GAAA,sBAAA,CAAA,OAAA,mCAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,WAAW,GAAjB,EAAA;;AAgDA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAQN;AAAA,MARO,KAQP,QARO,KAQP;AAAA,uBANXC,IAMW;AAAA,MANXA,IAMW,0BARO,WAQP;AAAA,MARO,KAQP,QARO,KAQP;AAAA,MARO,KAQP,QARO,KAQP;AAAA,MARO,UAQP,QARO,UAQP;AAAA,MARO,WAQP,QAFXC,KAEW;AAAA,MADRC,IACQ;;AACX,cACEI,YAAAA,CAAAA,UAAAA,CAAAA,OAAAA,CAAAA,KAAAA,KADF,EAAA;AAAA,oCAAQH,eAAR;AAAA,MAAQA,eAAR,sCAA0BC,KAAK,CAALA,MAAAA,CAApB,OAAN;AAAA,MAAmDC,SAAnD;;AAEA,MAAME,SAAS,GACbC,WADa,KAAA,IACbA,IAAAA,WADa,KAAA,KAAA,CACbA,GADa,WACbA,GACA,CAAA,GAAA,oBAAA,CAAA,OAAA,EAAA,eAAA,EAAqCC,OAAAA,CAArC,KAAA,EAFF,oBAEE,CAFF;AAIA,SACE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,EAAA,QAAA,CAAA;AACE,IAAA,KAAK,EAAE,CACL;AACEC,MAAAA,KAAK,EADP,IAAA;AAEEC,MAAAA,MAAM,EAFR,IAAA;AAGEC,MAAAA,YAAY,EAAEZ,IAAI,GAHpB,CAAA;AAIEG,MAAAA,eAAAA,EAAAA;AAJF,KADK,EAOLU,MAAM,CAPD,SAAA,EAAA,SAAA;AADT,GAAA,EAAA,IAAA,CAAA,EAaE,KAAA,CAAA,aAAA,CAAC,KAAA,CAAD,OAAA,EAAA;AACE,IAAA,KAAK,EAAE,CACLA,MAAM,CADD,IAAA,EAEL;AACEZ,MAAAA,KAAK,EADP,SAAA;AAEEa,MAAAA,QAAQ,EAAEd,IAAI,GAFhB,CAAA;AAGEe,MAAAA,UAAU,EAAEf;AAHd,KAFK,EADT,UACS,CADT;AAUE,IAAA,aAAa,EAAE;AAVjB,GAAA,EAdJ,KAcI,CAbF,CADF;AAfF,CAAA;;AA+CAD,UAAU,CAAVA,WAAAA,GAAAA,aAAAA;;AAEA,IAAMc,MAAM,GAAG,YAAA,CAAA,UAAA,CAAA,MAAA,CAAkB;AAC/BG,EAAAA,SAAS,EAAE;AACTC,IAAAA,cAAc,EADL,QAAA;AAETC,IAAAA,UAAU,EAAE;AAFH,GADoB;AAK/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EADL,QAAA;AAEJC,IAAAA,iBAAiB,EAAE;AAFf;AALyB,CAAlB,CAAf;;eAWe,CAAA,GAAA,QAAA,CAAA,SAAA,EAAA,UAAA,C","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  ViewStyle,\n  StyleSheet,\n  StyleProp,\n  TextStyle,\n} from 'react-native';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport { white } from '../../styles/colors';\nimport getContrastingColor from '../../utils/getContrastingColor';\n\nconst defaultSize = 64;\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Initials to show as the text in the `Avatar`.\n   */\n  label: string;\n  /**\n   * Size of the avatar.\n   */\n  size?: number;\n  /**\n   * Custom color for the text.\n   */\n  color?: string;\n  /**\n   * Style for text container\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the title.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-text.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Text size={24} label=\"XD\" />\n * );\n * ```\n */\nconst AvatarText = ({\n  label,\n  size = defaultSize,\n  style,\n  theme,\n  labelStyle,\n  color: customColor,\n  ...rest\n}: Props) => {\n  const { backgroundColor = theme.colors.primary, ...restStyle } =\n    StyleSheet.flatten(style) || {};\n  const textColor =\n    customColor ??\n    getContrastingColor(backgroundColor, white, 'rgba(0, 0, 0, .54)');\n\n  return (\n    <View\n      style={[\n        {\n          width: size,\n          height: size,\n          borderRadius: size / 2,\n          backgroundColor,\n        },\n        styles.container,\n        restStyle,\n      ]}\n      {...rest}\n    >\n      <Text\n        style={[\n          styles.text,\n          {\n            color: textColor,\n            fontSize: size / 2,\n            lineHeight: size,\n          },\n          labelStyle,\n        ]}\n        numberOfLines={1}\n      >\n        {label}\n      </Text>\n    </View>\n  );\n};\n\nAvatarText.displayName = 'Avatar.Text';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  text: {\n    textAlign: 'center',\n    textAlignVertical: 'center',\n  },\n});\n\nexport default withTheme(AvatarText);\n"]}