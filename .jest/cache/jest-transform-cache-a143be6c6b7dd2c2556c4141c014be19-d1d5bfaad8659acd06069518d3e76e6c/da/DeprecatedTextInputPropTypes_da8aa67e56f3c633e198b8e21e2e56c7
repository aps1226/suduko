e63f59d122f6369b0f6d1e5ea4a829c7










'use strict';function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) {symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});}keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {require("@babel/runtime/helpers/defineProperty")(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}






var DataDetectorTypes = [
'phoneNumber',
'link',
'address',
'calendarEvent',
'none',
'all'];


module.exports = _objectSpread(_objectSpread({}, require("./DeprecatedViewPropTypes")), {}, {









  autoCapitalize: require('prop-types').oneOf([
  'none',
  'sentences',
  'words',
  'characters']),

























  autoCompleteType: require('prop-types').oneOf([
  'cc-csc',
  'cc-exp',
  'cc-exp-month',
  'cc-exp-year',
  'cc-number',
  'email',
  'name',
  'password',
  'postal-code',
  'street-address',
  'tel',
  'username',
  'off']),


















  autoCorrect: require('prop-types').bool,





  spellCheck: require('prop-types').bool,




  autoFocus: require('prop-types').bool,




  allowFontScaling: require('prop-types').bool,







  maxFontSizeMultiplier: require('prop-types').number,



  editable: require('prop-types').bool,






























  keyboardType: require('prop-types').oneOf([

  'default',
  'email-address',
  'numeric',
  'phone-pad',
  'number-pad',

  'ascii-capable',
  'numbers-and-punctuation',
  'url',
  'name-phone-pad',
  'decimal-pad',
  'twitter',
  'web-search',

  'ascii-capable-number-pad',

  'visible-password']),




















  keyboardAppearance: require('prop-types').oneOf([
  'default',
  'light',
  'dark']),

































  returnKeyType: require('prop-types').oneOf([

  'done',
  'go',
  'next',
  'search',
  'send',

  'none',
  'previous',

  'default',
  'emergency-call',
  'google',
  'join',
  'route',
  'yahoo']),



















  returnKeyLabel: require('prop-types').string,




  maxLength: require('prop-types').number,





  numberOfLines: require('prop-types').number,








  disableFullscreenUI: require('prop-types').bool,





  enablesReturnKeyAutomatically: require('prop-types').bool,




  multiline: require('prop-types').bool,





  textBreakStrategy: require('prop-types').oneOf([
  'simple',
  'highQuality',
  'balanced']),




  onBlur: require('prop-types').func,



  onFocus: require('prop-types').func,



  onChange: require('prop-types').func,




  onChangeText: require('prop-types').func,







  onContentSizeChange: require('prop-types').func,
  onTextInput: require('prop-types').func,



  onEndEditing: require('prop-types').func,





  onSelectionChange: require('prop-types').func,




  onSubmitEditing: require('prop-types').func,







  onKeyPress: require('prop-types').func,



  onLayout: require('prop-types').func,





  onScroll: require('prop-types').func,



  placeholder: require('prop-types').string,



  placeholderTextColor: require("./DeprecatedColorPropType"),





  scrollEnabled: require('prop-types').bool,




  secureTextEntry: require('prop-types').bool,



  selectionColor: require("./DeprecatedColorPropType"),




  selection: require('prop-types').shape({
    start: require('prop-types').number.isRequired,
    end: require('prop-types').number }),














  value: require('prop-types').string,





  defaultValue: require('prop-types').string,





  clearButtonMode: require('prop-types').oneOf([
  'never',
  'while-editing',
  'unless-editing',
  'always']),







  clearTextOnFocus: require('prop-types').bool,



  selectTextOnFocus: require('prop-types').bool,







  blurOnSubmit: require('prop-types').bool,

















  style: require("../Text/Text").propTypes.style,




  underlineColorAndroid: require("./DeprecatedColorPropType"),












  inlineImageLeft: require('prop-types').string,





  inlineImagePadding: require('prop-types').number,








  rejectResponderTermination: require('prop-types').bool,



















  dataDetectorTypes: require('prop-types').oneOfType([
  require('prop-types').oneOf(DataDetectorTypes),
  require('prop-types').arrayOf(require('prop-types').oneOf(DataDetectorTypes))]),















  caretHidden: require('prop-types').bool,



  contextMenuHidden: require('prop-types').bool,






  inputAccessoryViewID: require('prop-types').string,





  textContentType: require('prop-types').oneOf([
  'none',
  'URL',
  'addressCity',
  'addressCityAndState',
  'addressState',
  'countryName',
  'creditCardNumber',
  'emailAddress',
  'familyName',
  'fullStreetAddress',
  'givenName',
  'jobTitle',
  'location',
  'middleName',
  'name',
  'namePrefix',
  'nameSuffix',
  'nickname',
  'organizationName',
  'postalCode',
  'streetAddressLine1',
  'streetAddressLine2',
  'sublocality',
  'telephoneNumber',
  'username',
  'password',
  'newPassword',
  'oneTimeCode']),



































  showSoftInputOnFocus: require('prop-types').bool });