{"version":3,"sources":["TextInputOutlined.tsx"],"names":["OUTLINE_MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","MIN_HEIGHT","MIN_DENSE_HEIGHT","INPUT_PADDING_HORIZONTAL","TextInputOutlined","React","disabled","error","multiline","editable","render","props","outlineColor","rest","adornmentConfig","left","right","fonts","font","hasActiveOutline","parentState","fontSize","backgroundColor","colors","viewStyle","StyleSheet","fontSizeStyle","MAXIMIZED_LABEL_FONT_SIZE","isTransparent","inputTextColor","activeColor","placeholderColor","customOutlineColor","errorColor","labelScale","MINIMIZED_LABEL_FONT_SIZE","fontScale","labelWidth","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","I18nManager","labelTranslationXOffset","isAdornmentLeftIcon","type","side","AdornmentSide","AdornmentType","ADORNMENT_SIZE","ADORNMENT_OFFSET","minInputHeight","dense","inputHeight","topPosition","height","console","paddingSettings","offset","label","scale","isAndroid","Platform","styles","pad","paddingOut","baseLabelTranslateY","placeholderOpacity","labelProps","onLayoutAnimatedText","placeholderStyle","fontWeight","wiggleOffsetX","LABEL_WIGGLE_X_OFFSET","minHeight","rightLayout","leftAffixTopPosition","affixHeight","leftLayout","labelYOffset","rightAffixTopPosition","iconTopPosition","rightAffixWidth","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","mode","affixTopPosition","onAffixChange","onRightAffixLayoutChange","adornmentProps","forceFocus","isTextInputFocused","focused","textStyle","visible","labeled","paddingTop","LabelBackground","ref","onChangeText","placeholder","placeholderTextColor","selectionColor","onFocus","onBlur","underlineColorAndroid","style","color","textAlignVertical","textAlign","outline","Outline","borderRadius","theme","borderWidth","borderColor","position","paddingHorizontal","top","bottom","labelContainer","paddingBottom","input","flexGrow","margin","zIndex","inputOutlined","inputOutlinedDense"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n  ColorValue,\n} from 'react-native';\nimport color from 'color';\nimport TextInputAdornment, {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\n\nimport InputLabel from './Label/InputLabel';\nimport LabelBackground from './Label/LabelBackground';\nimport type { RenderProps, ChildTextInputProps } from './types';\n\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n  ADORNMENT_SIZE,\n  ADORNMENT_OFFSET,\n} from './constants';\n\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingOut,\n  Padding,\n  interpolatePlaceholder,\n  calculateOutlinedIconAndAffixTopPosition,\n} from './helpers';\nimport { AdornmentType, AdornmentSide } from './Adornment/enums';\n\nconst OUTLINE_MINIMIZED_LABEL_Y_OFFSET = -6;\nconst LABEL_PADDING_TOP = 8;\nconst MIN_HEIGHT = 64;\nconst MIN_DENSE_HEIGHT = 48;\nconst INPUT_PADDING_HORIZONTAL = 14;\n\nclass TextInputOutlined extends React.Component<ChildTextInputProps> {\n  static defaultProps = {\n    disabled: false,\n    error: false,\n    multiline: false,\n    editable: true,\n    render: (props: RenderProps) => <NativeTextInput {...props} />,\n  };\n\n  render() {\n    const {\n      disabled,\n      editable,\n      label,\n      error,\n      selectionColor,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      underlineColor,\n      outlineColor: customOutlineColor,\n      dense,\n      style,\n      theme,\n      render,\n      multiline,\n      parentState,\n      innerRef,\n      onFocus,\n      forceFocus,\n      onBlur,\n      onChangeText,\n      onLayoutAnimatedText,\n      onLeftAffixLayoutChange,\n      onRightAffixLayoutChange,\n      left,\n      right,\n      placeholderTextColor,\n      ...rest\n    } = this.props;\n\n    const adornmentConfig = getAdornmentConfig({ left, right });\n\n    const { colors, fonts } = theme;\n    const font = fonts.regular;\n    const hasActiveOutline = parentState.focused || error;\n\n    const {\n      fontSize: fontSizeStyle,\n      fontWeight,\n      height,\n      backgroundColor = colors.background,\n      textAlign,\n      ...viewStyle\n    } = (StyleSheet.flatten(style) || {}) as TextStyle;\n    const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n    let inputTextColor, activeColor, outlineColor, placeholderColor, errorColor;\n\n    if (disabled) {\n      const isTransparent = color(customOutlineColor).alpha() === 0;\n\n      inputTextColor = activeColor = color(colors.text)\n        .alpha(0.54)\n        .rgb()\n        .string();\n      placeholderColor = colors.disabled;\n      outlineColor = isTransparent ? customOutlineColor : colors.disabled;\n    } else {\n      inputTextColor = colors.text;\n      activeColor = error ? colors.error : colors.primary;\n      placeholderColor = colors.placeholder;\n      outlineColor = customOutlineColor || colors.placeholder;\n      errorColor = colors.error;\n    }\n\n    const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n    const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n    const labelWidth = parentState.labelLayout.width;\n    const labelHeight = parentState.labelLayout.height;\n    const labelHalfWidth = labelWidth / 2;\n    const labelHalfHeight = labelHeight / 2;\n\n    const baseLabelTranslateX =\n      (I18nManager.isRTL ? 1 : -1) *\n      (labelHalfWidth -\n        (labelScale * labelWidth) / 2 -\n        (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n\n    let labelTranslationXOffset = 0;\n    const isAdornmentLeftIcon = adornmentConfig.some(\n      ({ side, type }) =>\n        side === AdornmentSide.Left && type === AdornmentType.Icon\n    );\n    if (isAdornmentLeftIcon) {\n      labelTranslationXOffset =\n        (I18nManager.isRTL ? -1 : 1) * (ADORNMENT_SIZE + ADORNMENT_OFFSET - 8);\n    }\n\n    const minInputHeight =\n      (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT) - LABEL_PADDING_TOP;\n\n    const inputHeight = calculateInputHeight(\n      labelHeight,\n      height,\n      minInputHeight\n    );\n\n    const topPosition = calculateLabelTopPosition(\n      labelHeight,\n      inputHeight,\n      LABEL_PADDING_TOP\n    );\n\n    if (height && typeof height !== 'number') {\n      // eslint-disable-next-line\n      console.warn('Currently we support only numbers in height prop');\n    }\n\n    const paddingSettings = {\n      height: height ? +height : null,\n      labelHalfHeight,\n      offset: LABEL_PADDING_TOP,\n      multiline: multiline ? multiline : null,\n      dense: dense ? dense : null,\n      topPosition,\n      fontSize,\n      label,\n      scale: fontScale,\n      isAndroid: Platform.OS === 'android',\n      styles: StyleSheet.flatten(\n        dense ? styles.inputOutlinedDense : styles.inputOutlined\n      ) as Padding,\n    };\n\n    const pad = calculatePadding(paddingSettings);\n\n    const paddingOut = adjustPaddingOut({ ...paddingSettings, pad });\n\n    const baseLabelTranslateY =\n      -labelHalfHeight - (topPosition + OUTLINE_MINIMIZED_LABEL_Y_OFFSET);\n\n    const placeholderOpacity = hasActiveOutline\n      ? interpolatePlaceholder(parentState.labeled, hasActiveOutline)\n      : parentState.labelLayout.measured\n      ? 1\n      : 0;\n\n    const labelProps = {\n      label,\n      onLayoutAnimatedText,\n      placeholderOpacity,\n      error,\n      placeholderStyle: styles.placeholder,\n      baseLabelTranslateY,\n      baseLabelTranslateX,\n      font,\n      fontSize,\n      fontWeight,\n      labelScale,\n      wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n      topPosition,\n      hasActiveOutline,\n      activeColor,\n      placeholderColor,\n      backgroundColor: backgroundColor as ColorValue,\n      errorColor,\n      labelTranslationXOffset,\n    };\n\n    const minHeight = (height ||\n      (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT)) as number;\n\n    const { leftLayout, rightLayout } = parentState;\n\n    const leftAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n      height: minHeight,\n      affixHeight: leftLayout.height || 0,\n      labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n    });\n\n    const rightAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n      height: minHeight,\n      affixHeight: rightLayout.height || 0,\n      labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n    });\n    const iconTopPosition = calculateOutlinedIconAndAffixTopPosition({\n      height: minHeight,\n      affixHeight: ADORNMENT_SIZE,\n      labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n    });\n\n    const rightAffixWidth = right\n      ? rightLayout.width || ADORNMENT_SIZE\n      : ADORNMENT_SIZE;\n\n    const leftAffixWidth = left\n      ? leftLayout.width || ADORNMENT_SIZE\n      : ADORNMENT_SIZE;\n\n    const adornmentStyleAdjustmentForNativeInput = getAdornmentStyleAdjustmentForNativeInput(\n      {\n        adornmentConfig,\n        rightAffixWidth,\n        leftAffixWidth,\n        mode: 'outlined',\n      }\n    );\n    const affixTopPosition = {\n      [AdornmentSide.Left]: leftAffixTopPosition,\n      [AdornmentSide.Right]: rightAffixTopPosition,\n    };\n    const onAffixChange = {\n      [AdornmentSide.Left]: onLeftAffixLayoutChange,\n      [AdornmentSide.Right]: onRightAffixLayoutChange,\n    };\n\n    let adornmentProps: TextInputAdornmentProps = {\n      adornmentConfig,\n      forceFocus,\n      topPosition: {\n        [AdornmentType.Icon]: iconTopPosition,\n        [AdornmentType.Affix]: affixTopPosition,\n      },\n      onAffixChange,\n      isTextInputFocused: parentState.focused,\n    };\n    if (adornmentConfig.length) {\n      adornmentProps = {\n        ...adornmentProps,\n        left,\n        right,\n        textStyle: { ...font, fontSize, fontWeight },\n        visible: this.props.parentState.labeled,\n      };\n    }\n\n    return (\n      <View style={viewStyle}>\n        {/*\n          Render the outline separately from the container\n          This is so that the label can overlap the outline\n          Otherwise the border will cut off the label on Android\n          */}\n        <View>\n          <Outline\n            theme={theme}\n            hasActiveOutline={hasActiveOutline}\n            activeColor={activeColor}\n            outlineColor={outlineColor}\n            backgroundColor={backgroundColor}\n          />\n          <View\n            style={[\n              styles.labelContainer,\n              {\n                paddingTop: LABEL_PADDING_TOP,\n                minHeight,\n              },\n            ]}\n          >\n            <InputLabel\n              parentState={parentState}\n              labelProps={labelProps}\n              labelBackground={LabelBackground}\n            />\n            {render?.({\n              ...rest,\n              ref: innerRef,\n              onChangeText,\n              placeholder: label\n                ? parentState.placeholder\n                : this.props.placeholder,\n              placeholderTextColor: placeholderTextColor || placeholderColor,\n              editable: !disabled && editable,\n              selectionColor:\n                typeof selectionColor === 'undefined'\n                  ? activeColor\n                  : selectionColor,\n              onFocus,\n              onBlur,\n              underlineColorAndroid: 'transparent',\n              multiline,\n              style: [\n                styles.input,\n                !multiline || (multiline && height)\n                  ? { height: inputHeight }\n                  : {},\n                paddingOut,\n                {\n                  ...font,\n                  fontSize,\n                  fontWeight,\n                  color: inputTextColor,\n                  textAlignVertical: multiline ? 'top' : 'center',\n                  textAlign: textAlign\n                    ? textAlign\n                    : I18nManager.isRTL\n                    ? 'right'\n                    : 'left',\n                },\n                Platform.OS === 'web' && { outline: 'none' },\n                adornmentStyleAdjustmentForNativeInput,\n              ],\n            } as RenderProps)}\n          </View>\n          <TextInputAdornment {...adornmentProps} />\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default TextInputOutlined;\n\ntype OutlineProps = {\n  activeColor: string;\n  hasActiveOutline?: boolean;\n  outlineColor?: string;\n  backgroundColor: ColorValue;\n  theme: ReactNativePaper.Theme;\n};\n\nconst Outline = ({\n  theme,\n  hasActiveOutline,\n  activeColor,\n  outlineColor,\n  backgroundColor,\n}: OutlineProps) => (\n  <View\n    pointerEvents=\"none\"\n    style={[\n      styles.outline,\n      // eslint-disable-next-line react-native/no-inline-styles\n      {\n        backgroundColor,\n        borderRadius: theme.roundness,\n        borderWidth: hasActiveOutline ? 2 : 1,\n        borderColor: hasActiveOutline ? activeColor : outlineColor,\n      },\n    ]}\n  />\n);\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n  },\n  outline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 6,\n    bottom: 0,\n  },\n  labelContainer: {\n    paddingBottom: 0,\n  },\n  input: {\n    flexGrow: 1,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n    margin: 0,\n    zIndex: 1,\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8,\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4,\n  },\n});\n"]}