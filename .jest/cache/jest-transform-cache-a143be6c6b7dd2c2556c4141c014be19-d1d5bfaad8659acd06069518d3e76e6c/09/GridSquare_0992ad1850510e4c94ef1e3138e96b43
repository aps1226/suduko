e228cd7ac9b17d3c17e3425c56cfcd24
/* istanbul ignore next */
function cov_2oqnxdj27y() {
  var path = "C:\\Users\\ashee\\Documents\\Javascript\\React\\React Native\\suduko\\components\\GridSquare.tsx";
  var hash = "8773f8aa94391cda9763c94a0789bcb8fa719e81";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\ashee\\Documents\\Javascript\\React\\React Native\\suduko\\components\\GridSquare.tsx",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 29
        },
        end: {
          line: 1,
          column: 84
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "2": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 29
        }
      },
      "3": {
        start: {
          line: 8,
          column: 16
        },
        end: {
          line: 8,
          column: 81
        }
      },
      "4": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 101
        }
      },
      "5": {
        start: {
          line: 12,
          column: 13
        },
        end: {
          line: 12,
          column: 53
        }
      },
      "6": {
        start: {
          line: 14,
          column: 19
        },
        end: {
          line: 14,
          column: 42
        }
      },
      "7": {
        start: {
          line: 16,
          column: 18
        },
        end: {
          line: 16,
          column: 40
        }
      },
      "8": {
        start: {
          line: 18,
          column: 13
        },
        end: {
          line: 18,
          column: 29
        }
      },
      "9": {
        start: {
          line: 20,
          column: 21
        },
        end: {
          line: 20,
          column: 75
        }
      },
      "10": {
        start: {
          line: 22,
          column: 23
        },
        end: {
          line: 22,
          column: 62
        }
      },
      "11": {
        start: {
          line: 24,
          column: 49
        },
        end: {
          line: 24,
          column: 96
        }
      },
      "12": {
        start: {
          line: 24,
          column: 84
        },
        end: {
          line: 24,
          column: 96
        }
      },
      "13": {
        start: {
          line: 24,
          column: 121
        },
        end: {
          line: 24,
          column: 134
        }
      },
      "14": {
        start: {
          line: 24,
          column: 159
        },
        end: {
          line: 24,
          column: 172
        }
      },
      "15": {
        start: {
          line: 24,
          column: 174
        },
        end: {
          line: 24,
          column: 333
        }
      },
      "16": {
        start: {
          line: 24,
          column: 258
        },
        end: {
          line: 24,
          column: 316
        }
      },
      "17": {
        start: {
          line: 26,
          column: 53
        },
        end: {
          line: 26,
          column: 111
        }
      },
      "18": {
        start: {
          line: 26,
          column: 98
        },
        end: {
          line: 26,
          column: 109
        }
      },
      "19": {
        start: {
          line: 26,
          column: 112
        },
        end: {
          line: 26,
          column: 214
        }
      },
      "20": {
        start: {
          line: 26,
          column: 188
        },
        end: {
          line: 26,
          column: 212
        }
      },
      "21": {
        start: {
          line: 26,
          column: 227
        },
        end: {
          line: 26,
          column: 264
        }
      },
      "22": {
        start: {
          line: 26,
          column: 266
        },
        end: {
          line: 26,
          column: 321
        }
      },
      "23": {
        start: {
          line: 26,
          column: 297
        },
        end: {
          line: 26,
          column: 319
        }
      },
      "24": {
        start: {
          line: 26,
          column: 335
        },
        end: {
          line: 26,
          column: 337
        }
      },
      "25": {
        start: {
          line: 26,
          column: 367
        },
        end: {
          line: 26,
          column: 423
        }
      },
      "26": {
        start: {
          line: 26,
          column: 425
        },
        end: {
          line: 26,
          column: 726
        }
      },
      "27": {
        start: {
          line: 26,
          column: 448
        },
        end: {
          line: 26,
          column: 724
        }
      },
      "28": {
        start: {
          line: 26,
          column: 534
        },
        end: {
          line: 26,
          column: 606
        }
      },
      "29": {
        start: {
          line: 26,
          column: 608
        },
        end: {
          line: 26,
          column: 722
        }
      },
      "30": {
        start: {
          line: 26,
          column: 646
        },
        end: {
          line: 26,
          column: 687
        }
      },
      "31": {
        start: {
          line: 26,
          column: 697
        },
        end: {
          line: 26,
          column: 720
        }
      },
      "32": {
        start: {
          line: 26,
          column: 727
        },
        end: {
          line: 26,
          column: 748
        }
      },
      "33": {
        start: {
          line: 26,
          column: 749
        },
        end: {
          line: 26,
          column: 787
        }
      },
      "34": {
        start: {
          line: 26,
          column: 762
        },
        end: {
          line: 26,
          column: 785
        }
      },
      "35": {
        start: {
          line: 26,
          column: 788
        },
        end: {
          line: 26,
          column: 802
        }
      },
      "36": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 31,
          column: 4
        }
      },
      "37": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 17
        }
      },
      "38": {
        start: {
          line: 32,
          column: 14
        },
        end: {
          line: 32,
          column: 32
        }
      },
      "39": {
        start: {
          line: 33,
          column: 15
        },
        end: {
          line: 33,
          column: 34
        }
      },
      "40": {
        start: {
          line: 34,
          column: 18
        },
        end: {
          line: 34,
          column: 40
        }
      },
      "41": {
        start: {
          line: 35,
          column: 18
        },
        end: {
          line: 35,
          column: 40
        }
      },
      "42": {
        start: {
          line: 36,
          column: 14
        },
        end: {
          line: 36,
          column: 32
        }
      },
      "43": {
        start: {
          line: 38,
          column: 17
        },
        end: {
          line: 38,
          column: 47
        }
      },
      "44": {
        start: {
          line: 40,
          column: 28
        },
        end: {
          line: 40,
          column: 84
        }
      },
      "45": {
        start: {
          line: 41,
          column: 20
        },
        end: {
          line: 41,
          column: 51
        }
      },
      "46": {
        start: {
          line: 42,
          column: 21
        },
        end: {
          line: 42,
          column: 53
        }
      },
      "47": {
        start: {
          line: 43,
          column: 17
        },
        end: {
          line: 43,
          column: 45
        }
      },
      "48": {
        start: {
          line: 44,
          column: 17
        },
        end: {
          line: 44,
          column: 45
        }
      },
      "49": {
        start: {
          line: 45,
          column: 21
        },
        end: {
          line: 45,
          column: 53
        }
      },
      "50": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 21
        }
      },
      "51": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 21
        }
      },
      "52": {
        start: {
          line: 49,
          column: 19
        },
        end: {
          line: 49,
          column: 42
        }
      },
      "53": {
        start: {
          line: 50,
          column: 14
        },
        end: {
          line: 50,
          column: 80
        }
      },
      "54": {
        start: {
          line: 52,
          column: 22
        },
        end: {
          line: 86,
          column: 3
        }
      },
      "55": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 85,
          column: 5
        }
      },
      "56": {
        start: {
          line: 54,
          column: 6
        },
        end: {
          line: 54,
          column: 43
        }
      },
      "57": {
        start: {
          line: 55,
          column: 6
        },
        end: {
          line: 55,
          column: 36
        }
      },
      "58": {
        start: {
          line: 56,
          column: 11
        },
        end: {
          line: 85,
          column: 5
        }
      },
      "59": {
        start: {
          line: 57,
          column: 21
        },
        end: {
          line: 59,
          column: 8
        }
      },
      "60": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 53
        }
      },
      "61": {
        start: {
          line: 60,
          column: 6
        },
        end: {
          line: 60,
          column: 45
        }
      },
      "62": {
        start: {
          line: 62,
          column: 6
        },
        end: {
          line: 75,
          column: 7
        }
      },
      "63": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 53
        }
      },
      "64": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 27
        }
      },
      "65": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "66": {
        start: {
          line: 68,
          column: 10
        },
        end: {
          line: 68,
          column: 55
        }
      },
      "67": {
        start: {
          line: 70,
          column: 10
        },
        end: {
          line: 73,
          column: 13
        }
      },
      "68": {
        start: {
          line: 76,
          column: 11
        },
        end: {
          line: 85,
          column: 5
        }
      },
      "69": {
        start: {
          line: 77,
          column: 21
        },
        end: {
          line: 77,
          column: 54
        }
      },
      "70": {
        start: {
          line: 78,
          column: 26
        },
        end: {
          line: 78,
          column: 40
        }
      },
      "71": {
        start: {
          line: 80,
          column: 6
        },
        end: {
          line: 82,
          column: 51
        }
      },
      "72": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 98
        }
      },
      "73": {
        start: {
          line: 81,
          column: 58
        },
        end: {
          line: 81,
          column: 98
        }
      },
      "74": {
        start: {
          line: 82,
          column: 13
        },
        end: {
          line: 82,
          column: 51
        }
      },
      "75": {
        start: {
          line: 84,
          column: 6
        },
        end: {
          line: 84,
          column: 25
        }
      },
      "76": {
        start: {
          line: 88,
          column: 20
        },
        end: {
          line: 118,
          column: 3
        }
      },
      "77": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 89,
          column: 103
        }
      },
      "78": {
        start: {
          line: 89,
          column: 42
        },
        end: {
          line: 89,
          column: 103
        }
      },
      "79": {
        start: {
          line: 90,
          column: 24
        },
        end: {
          line: 90,
          column: 45
        }
      },
      "80": {
        start: {
          line: 91,
          column: 19
        },
        end: {
          line: 91,
          column: 21
        }
      },
      "81": {
        start: {
          line: 93,
          column: 17
        },
        end: {
          line: 93,
          column: 19
        }
      },
      "82": {
        start: {
          line: 94,
          column: 18
        },
        end: {
          line: 94,
          column: 19
        }
      },
      "83": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 113,
          column: 5
        }
      },
      "84": {
        start: {
          line: 97,
          column: 6
        },
        end: {
          line: 101,
          column: 39
        }
      },
      "85": {
        start: {
          line: 103,
          column: 6
        },
        end: {
          line: 110,
          column: 7
        }
      },
      "86": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 107,
          column: 19
        }
      },
      "87": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 20
        }
      },
      "88": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 109,
          column: 32
        }
      },
      "89": {
        start: {
          line: 112,
          column: 6
        },
        end: {
          line: 112,
          column: 16
        }
      },
      "90": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 117,
          column: 17
        }
      },
      "91": {
        start: {
          line: 120,
          column: 2
        },
        end: {
          line: 149,
          column: 34
        }
      },
      "92": {
        start: {
          line: 152,
          column: 13
        },
        end: {
          line: 172,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 24,
            column: 9
          },
          end: {
            line: 24,
            column: 33
          }
        },
        loc: {
          start: {
            line: 24,
            column: 47
          },
          end: {
            line: 24,
            column: 335
          }
        },
        line: 24
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 24,
            column: 218
          },
          end: {
            line: 24,
            column: 242
          }
        },
        loc: {
          start: {
            line: 24,
            column: 256
          },
          end: {
            line: 24,
            column: 318
          }
        },
        line: 24
      },
      "2": {
        name: "_interopRequireWildcard",
        decl: {
          start: {
            line: 26,
            column: 9
          },
          end: {
            line: 26,
            column: 32
          }
        },
        loc: {
          start: {
            line: 26,
            column: 51
          },
          end: {
            line: 26,
            column: 804
          }
        },
        line: 26
      },
      "3": {
        name: "GridSquare",
        decl: {
          start: {
            line: 28,
            column: 9
          },
          end: {
            line: 28,
            column: 19
          }
        },
        loc: {
          start: {
            line: 28,
            column: 27
          },
          end: {
            line: 150,
            column: 1
          }
        },
        line: 28
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 29,
            column: 50
          },
          end: {
            line: 29,
            column: 51
          }
        },
        loc: {
          start: {
            line: 29,
            column: 67
          },
          end: {
            line: 31,
            column: 3
          }
        },
        line: 29
      },
      "5": {
        name: "handleOnPress",
        decl: {
          start: {
            line: 52,
            column: 31
          },
          end: {
            line: 52,
            column: 44
          }
        },
        loc: {
          start: {
            line: 52,
            column: 47
          },
          end: {
            line: 86,
            column: 3
          }
        },
        line: 52
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 57,
            column: 31
          },
          end: {
            line: 57,
            column: 32
          }
        },
        loc: {
          start: {
            line: 57,
            column: 46
          },
          end: {
            line: 59,
            column: 7
          }
        },
        line: 57
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 62,
            column: 59
          },
          end: {
            line: 62,
            column: 60
          }
        },
        loc: {
          start: {
            line: 62,
            column: 74
          },
          end: {
            line: 64,
            column: 7
          }
        },
        line: 62
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 67,
            column: 59
          },
          end: {
            line: 67,
            column: 60
          }
        },
        loc: {
          start: {
            line: 67,
            column: 74
          },
          end: {
            line: 69,
            column: 9
          }
        },
        line: 67
      },
      "9": {
        name: "renderNotes",
        decl: {
          start: {
            line: 88,
            column: 29
          },
          end: {
            line: 88,
            column: 40
          }
        },
        loc: {
          start: {
            line: 88,
            column: 43
          },
          end: {
            line: 118,
            column: 3
          }
        },
        line: 88
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 49
          },
          end: {
            line: 24,
            column: 96
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 49
          },
          end: {
            line: 24,
            column: 96
          }
        }, {
          start: {
            line: 24,
            column: 49
          },
          end: {
            line: 24,
            column: 96
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 265
          },
          end: {
            line: 24,
            column: 315
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 24,
            column: 279
          },
          end: {
            line: 24,
            column: 295
          }
        }, {
          start: {
            line: 24,
            column: 298
          },
          end: {
            line: 24,
            column: 315
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 26,
            column: 53
          },
          end: {
            line: 26,
            column: 111
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 53
          },
          end: {
            line: 26,
            column: 111
          }
        }, {
          start: {
            line: 26,
            column: 53
          },
          end: {
            line: 26,
            column: 111
          }
        }],
        line: 26
      },
      "3": {
        loc: {
          start: {
            line: 26,
            column: 57
          },
          end: {
            line: 26,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 57
          },
          end: {
            line: 26,
            column: 69
          }
        }, {
          start: {
            line: 26,
            column: 73
          },
          end: {
            line: 26,
            column: 76
          }
        }, {
          start: {
            line: 26,
            column: 80
          },
          end: {
            line: 26,
            column: 94
          }
        }],
        line: 26
      },
      "4": {
        loc: {
          start: {
            line: 26,
            column: 112
          },
          end: {
            line: 26,
            column: 214
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 112
          },
          end: {
            line: 26,
            column: 214
          }
        }, {
          start: {
            line: 26,
            column: 112
          },
          end: {
            line: 26,
            column: 214
          }
        }],
        line: 26
      },
      "5": {
        loc: {
          start: {
            line: 26,
            column: 116
          },
          end: {
            line: 26,
            column: 184
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 116
          },
          end: {
            line: 26,
            column: 128
          }
        }, {
          start: {
            line: 26,
            column: 132
          },
          end: {
            line: 26,
            column: 155
          }
        }, {
          start: {
            line: 26,
            column: 159
          },
          end: {
            line: 26,
            column: 184
          }
        }],
        line: 26
      },
      "6": {
        loc: {
          start: {
            line: 26,
            column: 266
          },
          end: {
            line: 26,
            column: 321
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 266
          },
          end: {
            line: 26,
            column: 321
          }
        }, {
          start: {
            line: 26,
            column: 266
          },
          end: {
            line: 26,
            column: 321
          }
        }],
        line: 26
      },
      "7": {
        loc: {
          start: {
            line: 26,
            column: 270
          },
          end: {
            line: 26,
            column: 293
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 270
          },
          end: {
            line: 26,
            column: 275
          }
        }, {
          start: {
            line: 26,
            column: 279
          },
          end: {
            line: 26,
            column: 293
          }
        }],
        line: 26
      },
      "8": {
        loc: {
          start: {
            line: 26,
            column: 367
          },
          end: {
            line: 26,
            column: 423
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 367
          },
          end: {
            line: 26,
            column: 388
          }
        }, {
          start: {
            line: 26,
            column: 392
          },
          end: {
            line: 26,
            column: 423
          }
        }],
        line: 26
      },
      "9": {
        loc: {
          start: {
            line: 26,
            column: 448
          },
          end: {
            line: 26,
            column: 724
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 448
          },
          end: {
            line: 26,
            column: 724
          }
        }, {
          start: {
            line: 26,
            column: 448
          },
          end: {
            line: 26,
            column: 724
          }
        }],
        line: 26
      },
      "10": {
        loc: {
          start: {
            line: 26,
            column: 452
          },
          end: {
            line: 26,
            column: 519
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 452
          },
          end: {
            line: 26,
            column: 469
          }
        }, {
          start: {
            line: 26,
            column: 473
          },
          end: {
            line: 26,
            column: 519
          }
        }],
        line: 26
      },
      "11": {
        loc: {
          start: {
            line: 26,
            column: 534
          },
          end: {
            line: 26,
            column: 606
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 26,
            column: 558
          },
          end: {
            line: 26,
            column: 599
          }
        }, {
          start: {
            line: 26,
            column: 602
          },
          end: {
            line: 26,
            column: 606
          }
        }],
        line: 26
      },
      "12": {
        loc: {
          start: {
            line: 26,
            column: 608
          },
          end: {
            line: 26,
            column: 722
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 608
          },
          end: {
            line: 26,
            column: 722
          }
        }, {
          start: {
            line: 26,
            column: 608
          },
          end: {
            line: 26,
            column: 722
          }
        }],
        line: 26
      },
      "13": {
        loc: {
          start: {
            line: 26,
            column: 612
          },
          end: {
            line: 26,
            column: 642
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 612
          },
          end: {
            line: 26,
            column: 616
          }
        }, {
          start: {
            line: 26,
            column: 621
          },
          end: {
            line: 26,
            column: 629
          }
        }, {
          start: {
            line: 26,
            column: 633
          },
          end: {
            line: 26,
            column: 641
          }
        }],
        line: 26
      },
      "14": {
        loc: {
          start: {
            line: 26,
            column: 749
          },
          end: {
            line: 26,
            column: 787
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 749
          },
          end: {
            line: 26,
            column: 787
          }
        }, {
          start: {
            line: 26,
            column: 749
          },
          end: {
            line: 26,
            column: 787
          }
        }],
        line: 26
      },
      "15": {
        loc: {
          start: {
            line: 50,
            column: 14
          },
          end: {
            line: 50,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 50,
            column: 35
          },
          end: {
            line: 50,
            column: 53
          }
        }, {
          start: {
            line: 50,
            column: 56
          },
          end: {
            line: 50,
            column: 80
          }
        }],
        line: 50
      },
      "16": {
        loc: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        }, {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        }],
        line: 53
      },
      "17": {
        loc: {
          start: {
            line: 56,
            column: 11
          },
          end: {
            line: 85,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 11
          },
          end: {
            line: 85,
            column: 5
          }
        }, {
          start: {
            line: 56,
            column: 11
          },
          end: {
            line: 85,
            column: 5
          }
        }],
        line: 56
      },
      "18": {
        loc: {
          start: {
            line: 56,
            column: 15
          },
          end: {
            line: 56,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 15
          },
          end: {
            line: 56,
            column: 24
          }
        }, {
          start: {
            line: 56,
            column: 28
          },
          end: {
            line: 56,
            column: 37
          }
        }],
        line: 56
      },
      "19": {
        loc: {
          start: {
            line: 62,
            column: 6
          },
          end: {
            line: 75,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 6
          },
          end: {
            line: 75,
            column: 7
          }
        }, {
          start: {
            line: 62,
            column: 6
          },
          end: {
            line: 75,
            column: 7
          }
        }],
        line: 62
      },
      "20": {
        loc: {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        }, {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        }],
        line: 67
      },
      "21": {
        loc: {
          start: {
            line: 76,
            column: 11
          },
          end: {
            line: 85,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 11
          },
          end: {
            line: 85,
            column: 5
          }
        }, {
          start: {
            line: 76,
            column: 11
          },
          end: {
            line: 85,
            column: 5
          }
        }],
        line: 76
      },
      "22": {
        loc: {
          start: {
            line: 76,
            column: 15
          },
          end: {
            line: 76,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 15
          },
          end: {
            line: 76,
            column: 24
          }
        }, {
          start: {
            line: 76,
            column: 28
          },
          end: {
            line: 76,
            column: 38
          }
        }],
        line: 76
      },
      "23": {
        loc: {
          start: {
            line: 80,
            column: 6
          },
          end: {
            line: 82,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 6
          },
          end: {
            line: 82,
            column: 51
          }
        }, {
          start: {
            line: 80,
            column: 6
          },
          end: {
            line: 82,
            column: 51
          }
        }],
        line: 80
      },
      "24": {
        loc: {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 81,
            column: 98
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 81,
            column: 98
          }
        }, {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 81,
            column: 98
          }
        }],
        line: 81
      },
      "25": {
        loc: {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 89,
            column: 103
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 89,
            column: 103
          }
        }, {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 89,
            column: 103
          }
        }],
        line: 89
      },
      "26": {
        loc: {
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 89,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 89,
            column: 14
          }
        }, {
          start: {
            line: 89,
            column: 18
          },
          end: {
            line: 89,
            column: 40
          }
        }],
        line: 89
      },
      "27": {
        loc: {
          start: {
            line: 103,
            column: 6
          },
          end: {
            line: 110,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 6
          },
          end: {
            line: 110,
            column: 7
          }
        }, {
          start: {
            line: 103,
            column: 6
          },
          end: {
            line: 110,
            column: 7
          }
        }],
        line: 103
      },
      "28": {
        loc: {
          start: {
            line: 103,
            column: 10
          },
          end: {
            line: 103,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 10
          },
          end: {
            line: 103,
            column: 27
          }
        }, {
          start: {
            line: 103,
            column: 31
          },
          end: {
            line: 103,
            column: 42
          }
        }],
        line: 103
      },
      "29": {
        loc: {
          start: {
            line: 142,
            column: 5
          },
          end: {
            line: 149,
            column: 29
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 142,
            column: 32
          },
          end: {
            line: 142,
            column: 45
          }
        }, {
          start: {
            line: 142,
            column: 48
          },
          end: {
            line: 149,
            column: 29
          }
        }],
        line: 142
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\ashee\\Documents\\Javascript\\React\\React Native\\suduko\\components\\GridSquare.tsx"],
      names: [],
      mappings: "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",
      sourcesContent: ["import React, {useEffect} from \"react\";\r\nimport { Alert, ImageBackground, StyleSheet, TouchableHighlight, Text, View } from \"react-native\";\r\nimport { useSelector, useDispatch } from \"react-redux\"; \r\nimport { bindActionCreators } from \"redux\";\r\nimport * as actionCreators from '../src/state/index';\r\nimport {isValidSudoku,isCompleted} from '../src/state/boardController'\r\nimport {IProps,Notes} from '../types';\r\nimport {RootState} from '../src/state/reducers/index';\r\n\r\nexport default function GridSquare(props:IProps) {\r\n  //Redux-state.\r\n  const {board,colors,selection, entryMode,notes} = useSelector((state:RootState) => state);\r\n  const dispatch = useDispatch();\r\n  //Redux action creators.\r\n  const { changeColor, setSelection, setBoard, setNotes, setGameState } = bindActionCreators(actionCreators,dispatch);\r\n  //Passed row and column props for respective square.\r\n  const {row,col} = props;\r\n  //Color for respective square based on current value.\r\n  const colorIndex:string = String(board[row][col]);\r\n  const color:string[] = colors[colorIndex] ? colors[colorIndex]: ['transparent','black'];\r\n  \r\n  const handleOnPress = ():void =>{\r\n    //If value of board selection is not null\r\n      //Change the color of the respective value to green for \r\n      //all displayed values on the board.\r\n      //Set selection prop equal to value.\r\n    if(board[row][col]){\r\n      changeColor(String(board[row][col]));\r\n      setSelection(board[row][col]);\r\n    }\r\n    //Else, determine if current selection placed at the respective\r\n    //location creates a valid board.\r\n    else if(selection && entryMode){\r\n      const newBoard:(number|null)[][] = board.map((arr:(number|null)[])=> [...arr]);\r\n      newBoard[row][col] = Number(selection);\r\n      //If board would be valid, modify board state.\r\n      if(isValidSudoku(newBoard.map((arr:(number|null)[])=> [...arr]))){\r\n        setBoard(newBoard);\r\n        //Check if board is completed.\r\n          //If complete, modify gameState property to where 'isComplete' index is true.\r\n        if(isCompleted(newBoard.map((arr:(number|null)[])=> [...arr]))){\r\n          setGameState({'isCompleted':true,'gameExists':false});\r\n        }\r\n      }\r\n    //Else if a number is selected and entryMode is set to 'notes'.\r\n    } else if(selection && !entryMode){\r\n      //Clone notes state. \r\n      const newNotes:Notes = Object.assign({},notes);\r\n      //Create variable for note index based on current row and column position.\r\n      const newNotesIndex:string = `${row}${col}`;\r\n      //If current square has existing notes within the note object:\r\n      if(newNotes[newNotesIndex]){\r\n        //If note object at current square index does not include the current selection,\r\n        //add the selection to the array at the index.\r\n        if(!newNotes[newNotesIndex].includes(selection)) newNotes[newNotesIndex].push(selection)\r\n      //Else, create the index within the note object initialized to current selection.\r\n      } else newNotes[newNotesIndex] = [selection];\r\n      //Set new notes state.\r\n      setNotes(newNotes);\r\n    }\r\n  }\r\n\r\n  //Function renders note for squares with null values on the board.\r\n  const renderNotes = ():JSX.Element =>{\r\n    //Return empty text element if notes or note[index] do not exist.\r\n    if(!notes || !notes[`${row}${col}`]) return (<Text></Text>);\r\n    //Initialize array of notes to be rendered from the notes object\r\n    //with respect to the current square position.\r\n    const notesToRender = notes[`${row}${col}`];\r\n    //Initialize array to hold all rows of notes.\r\n    const notesJSX:JSX.Element[] = [];\r\n    //Initialize variable to be populated with each row of notes.\r\n    let noteRows:JSX.Element;\r\n    //Initialize array to hold the current row of notes.\r\n    let curRow:JSX.Element[] = [];\r\n    //Initialize pointer to allow iteration through notesToRender array.\r\n    let pointer:number = 1;\r\n    //Iterate through notesToRender:\r\n    while(pointer <= 9){\r\n      //Push each number to JSX to display value.\r\n      curRow.push(\r\n        <View\r\n          key = {String(`Square[${row}${col}]_Note_${pointer - 1}`)}\r\n        >\r\n          <Text\r\n            style = {styles.noteText}\r\n          >\r\n            {notesToRender[pointer - 1]}\r\n          </Text>\r\n        </View>\r\n      )\r\n      //Create 3x3 grid of notes within square.\r\n      if(pointer % 3 === 0 && pointer > 0){\r\n        noteRows = (\r\n          <View\r\n            key = {String(`NoteRow_${pointer}`)} \r\n            style = {styles.noteRow}\r\n          >\r\n            {curRow}\r\n          </View>\r\n        )\r\n        curRow = [];\r\n        notesJSX.push(noteRows);\r\n      }\r\n      pointer ++;\r\n    }\r\n\r\n    //Return JSX.\r\n    return(\r\n      <View\r\n        style = {styles.noteContainer}\r\n      >\r\n        {notesJSX}\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TouchableHighlight\r\n        onPress = {handleOnPress}\r\n        testID = {`gridSquare_${row}${col}`}\r\n      >\r\n        <View \r\n          style={{\r\n            borderStyle:'solid',\r\n            backgroundColor:color[0],\r\n            width: 38,\r\n            height: 38,\r\n            borderWidth: 5,\r\n            borderLeftColor: 'rgba(255, 255, 255, 0.20)',\r\n            borderTopColor: 'rgba(255, 255, 255, 0.33)',\r\n            borderRightColor: 'rgba(0, 0, 0, 0.15)',\r\n            borderBottomColor: 'rgba(0, 0, 0, 0.5)',\r\n            alignItems:'center'\r\n          }}\r\n          testID = {`gridSquareView_${board[row][col]}`}\r\n        >\r\n          <ImageBackground\r\n            source = {require('../assets/images/square.jpg')}\r\n            style = {styles.backgroundImage}\r\n          >\r\n            {/* Render values based on ternary conditional respective of \r\n                if value is null or not. */}\r\n            {board[row][col] === null? \r\n              renderNotes()\r\n            :\r\n              <Text\r\n                style = {{\r\n                  color:color[1],\r\n                  textAlign:'center',\r\n                  marginTop:'20%',\r\n                }}\r\n                testID = {`gridSquareText_${board[row][col]}`}\r\n              >\r\n                {String(board[row][col])}\r\n              </Text>\r\n            }\r\n          </ImageBackground>\r\n        </View>\r\n      </TouchableHighlight>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n  },\r\n  noteContainer:{\r\n    flex:1,\r\n    flexDirection:'column',\r\n    alignItems:'center'\r\n  },\r\n  noteRow:{\r\n    flex:1,\r\n    flexDirection:'row',\r\n    alignItems:'flex-start'\r\n  },\r\n  noteText:{\r\n    fontSize:9,\r\n    fontFamily:'JustAnotherHand',\r\n  },\r\n  backgroundImage:{\r\n    width:'100%',\r\n    height:'100%'\r\n  }\r\n});"]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8773f8aa94391cda9763c94a0789bcb8fa719e81"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2oqnxdj27y = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_2oqnxdj27y();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_2oqnxdj27y().s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_2oqnxdj27y().s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_2oqnxdj27y().s[2]++;
exports.default = GridSquare;

var _extends2 =
/* istanbul ignore next */
(cov_2oqnxdj27y().s[3]++, _interopRequireDefault(require("@babel/runtime/helpers/extends")));

var _toConsumableArray2 =
/* istanbul ignore next */
(cov_2oqnxdj27y().s[4]++, _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray")));

var _react =
/* istanbul ignore next */
(cov_2oqnxdj27y().s[5]++, _interopRequireDefault(require("react")));

var _reactNative =
/* istanbul ignore next */
(cov_2oqnxdj27y().s[6]++, require("react-native"));

var _reactRedux =
/* istanbul ignore next */
(cov_2oqnxdj27y().s[7]++, require("react-redux"));

var _redux =
/* istanbul ignore next */
(cov_2oqnxdj27y().s[8]++, require("redux"));

var actionCreators =
/* istanbul ignore next */
(cov_2oqnxdj27y().s[9]++, _interopRequireWildcard(require("../src/state/index")));

var _boardController =
/* istanbul ignore next */
(cov_2oqnxdj27y().s[10]++, require("../src/state/boardController"));

function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_2oqnxdj27y().f[0]++;
  cov_2oqnxdj27y().s[11]++;

  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_2oqnxdj27y().b[0][0]++;
    cov_2oqnxdj27y().s[12]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_2oqnxdj27y().b[0][1]++;
  }

  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_2oqnxdj27y().s[13]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_2oqnxdj27y().s[14]++, new WeakMap());

  /* istanbul ignore next */
  cov_2oqnxdj27y().s[15]++;
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    /* istanbul ignore next */
    cov_2oqnxdj27y().f[1]++;
    cov_2oqnxdj27y().s[16]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_2oqnxdj27y().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_2oqnxdj27y().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}

function _interopRequireWildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_2oqnxdj27y().f[2]++;
  cov_2oqnxdj27y().s[17]++;

  if (
  /* istanbul ignore next */
  (cov_2oqnxdj27y().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_2oqnxdj27y().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_2oqnxdj27y().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_2oqnxdj27y().b[2][0]++;
    cov_2oqnxdj27y().s[18]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_2oqnxdj27y().b[2][1]++;
  }

  cov_2oqnxdj27y().s[19]++;

  if (
  /* istanbul ignore next */
  (cov_2oqnxdj27y().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_2oqnxdj27y().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_2oqnxdj27y().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_2oqnxdj27y().b[4][0]++;
    cov_2oqnxdj27y().s[20]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_2oqnxdj27y().b[4][1]++;
  }

  var cache =
  /* istanbul ignore next */
  (cov_2oqnxdj27y().s[21]++, _getRequireWildcardCache(nodeInterop));

  /* istanbul ignore next */
  cov_2oqnxdj27y().s[22]++;

  if (
  /* istanbul ignore next */
  (cov_2oqnxdj27y().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_2oqnxdj27y().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_2oqnxdj27y().b[6][0]++;
    cov_2oqnxdj27y().s[23]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_2oqnxdj27y().b[6][1]++;
  }

  var newObj =
  /* istanbul ignore next */
  (cov_2oqnxdj27y().s[24]++, {});
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_2oqnxdj27y().s[25]++,
  /* istanbul ignore next */
  (cov_2oqnxdj27y().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_2oqnxdj27y().b[8][1]++, Object.getOwnPropertyDescriptor));

  /* istanbul ignore next */
  cov_2oqnxdj27y().s[26]++;

  for (var key in obj) {
    /* istanbul ignore next */
    cov_2oqnxdj27y().s[27]++;

    if (
    /* istanbul ignore next */
    (cov_2oqnxdj27y().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_2oqnxdj27y().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_2oqnxdj27y().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_2oqnxdj27y().s[28]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_2oqnxdj27y().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_2oqnxdj27y().b[11][1]++, null));

      /* istanbul ignore next */
      cov_2oqnxdj27y().s[29]++;

      if (
      /* istanbul ignore next */
      (cov_2oqnxdj27y().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_2oqnxdj27y().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_2oqnxdj27y().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_2oqnxdj27y().b[12][0]++;
        cov_2oqnxdj27y().s[30]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_2oqnxdj27y().b[12][1]++;
        cov_2oqnxdj27y().s[31]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_2oqnxdj27y().b[9][1]++;
    }
  }

  /* istanbul ignore next */
  cov_2oqnxdj27y().s[32]++;
  newObj.default = obj;

  /* istanbul ignore next */
  cov_2oqnxdj27y().s[33]++;

  if (cache) {
    /* istanbul ignore next */
    cov_2oqnxdj27y().b[14][0]++;
    cov_2oqnxdj27y().s[34]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_2oqnxdj27y().b[14][1]++;
  }

  cov_2oqnxdj27y().s[35]++;
  return newObj;
}

function GridSquare(props) {
  /* istanbul ignore next */
  cov_2oqnxdj27y().f[3]++;

  var _useSelector =
  /* istanbul ignore next */
  (cov_2oqnxdj27y().s[36]++, (0, _reactRedux.useSelector)(function (state) {
    /* istanbul ignore next */
    cov_2oqnxdj27y().f[4]++;
    cov_2oqnxdj27y().s[37]++;
    return state;
  })),
      board =
  /* istanbul ignore next */
  (cov_2oqnxdj27y().s[38]++, _useSelector.board),
      colors =
  /* istanbul ignore next */
  (cov_2oqnxdj27y().s[39]++, _useSelector.colors),
      selection =
  /* istanbul ignore next */
  (cov_2oqnxdj27y().s[40]++, _useSelector.selection),
      entryMode =
  /* istanbul ignore next */
  (cov_2oqnxdj27y().s[41]++, _useSelector.entryMode),
      notes =
  /* istanbul ignore next */
  (cov_2oqnxdj27y().s[42]++, _useSelector.notes);

  var dispatch =
  /* istanbul ignore next */
  (cov_2oqnxdj27y().s[43]++, (0, _reactRedux.useDispatch)());

  var _bindActionCreators =
  /* istanbul ignore next */
  (cov_2oqnxdj27y().s[44]++, (0, _redux.bindActionCreators)(actionCreators, dispatch)),
      changeColor =
  /* istanbul ignore next */
  (cov_2oqnxdj27y().s[45]++, _bindActionCreators.changeColor),
      setSelection =
  /* istanbul ignore next */
  (cov_2oqnxdj27y().s[46]++, _bindActionCreators.setSelection),
      setBoard =
  /* istanbul ignore next */
  (cov_2oqnxdj27y().s[47]++, _bindActionCreators.setBoard),
      setNotes =
  /* istanbul ignore next */
  (cov_2oqnxdj27y().s[48]++, _bindActionCreators.setNotes),
      setGameState =
  /* istanbul ignore next */
  (cov_2oqnxdj27y().s[49]++, _bindActionCreators.setGameState);

  var row =
  /* istanbul ignore next */
  (cov_2oqnxdj27y().s[50]++, props.row),
      col =
  /* istanbul ignore next */
  (cov_2oqnxdj27y().s[51]++, props.col);
  var colorIndex =
  /* istanbul ignore next */
  (cov_2oqnxdj27y().s[52]++, String(board[row][col]));
  var color =
  /* istanbul ignore next */
  (cov_2oqnxdj27y().s[53]++, colors[colorIndex] ?
  /* istanbul ignore next */
  (cov_2oqnxdj27y().b[15][0]++, colors[colorIndex]) :
  /* istanbul ignore next */
  (cov_2oqnxdj27y().b[15][1]++, ['transparent', 'black']));

  /* istanbul ignore next */
  cov_2oqnxdj27y().s[54]++;

  var handleOnPress = function handleOnPress() {
    /* istanbul ignore next */
    cov_2oqnxdj27y().f[5]++;
    cov_2oqnxdj27y().s[55]++;

    if (board[row][col]) {
      /* istanbul ignore next */
      cov_2oqnxdj27y().b[16][0]++;
      cov_2oqnxdj27y().s[56]++;
      changeColor(String(board[row][col]));

      /* istanbul ignore next */
      cov_2oqnxdj27y().s[57]++;
      setSelection(board[row][col]);
    } else {
      /* istanbul ignore next */
      cov_2oqnxdj27y().b[16][1]++;
      cov_2oqnxdj27y().s[58]++;

      if (
      /* istanbul ignore next */
      (cov_2oqnxdj27y().b[18][0]++, selection) &&
      /* istanbul ignore next */
      (cov_2oqnxdj27y().b[18][1]++, entryMode)) {
        /* istanbul ignore next */
        cov_2oqnxdj27y().b[17][0]++;
        var newBoard =
        /* istanbul ignore next */
        (cov_2oqnxdj27y().s[59]++, board.map(function (arr) {
          /* istanbul ignore next */
          cov_2oqnxdj27y().f[6]++;
          cov_2oqnxdj27y().s[60]++;
          return (0, _toConsumableArray2.default)(arr);
        }));

        /* istanbul ignore next */
        cov_2oqnxdj27y().s[61]++;
        newBoard[row][col] = Number(selection);

        /* istanbul ignore next */
        cov_2oqnxdj27y().s[62]++;

        if ((0, _boardController.isValidSudoku)(newBoard.map(function (arr) {
          /* istanbul ignore next */
          cov_2oqnxdj27y().f[7]++;
          cov_2oqnxdj27y().s[63]++;
          return (0, _toConsumableArray2.default)(arr);
        }))) {
          /* istanbul ignore next */
          cov_2oqnxdj27y().b[19][0]++;
          cov_2oqnxdj27y().s[64]++;
          setBoard(newBoard);

          /* istanbul ignore next */
          cov_2oqnxdj27y().s[65]++;

          if ((0, _boardController.isCompleted)(newBoard.map(function (arr) {
            /* istanbul ignore next */
            cov_2oqnxdj27y().f[8]++;
            cov_2oqnxdj27y().s[66]++;
            return (0, _toConsumableArray2.default)(arr);
          }))) {
            /* istanbul ignore next */
            cov_2oqnxdj27y().b[20][0]++;
            cov_2oqnxdj27y().s[67]++;
            setGameState({
              'isCompleted': true,
              'gameExists': false
            });
          } else
          /* istanbul ignore next */
          {
            cov_2oqnxdj27y().b[20][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_2oqnxdj27y().b[19][1]++;
        }
      } else {
        /* istanbul ignore next */
        cov_2oqnxdj27y().b[17][1]++;
        cov_2oqnxdj27y().s[68]++;

        if (
        /* istanbul ignore next */
        (cov_2oqnxdj27y().b[22][0]++, selection) &&
        /* istanbul ignore next */
        (cov_2oqnxdj27y().b[22][1]++, !entryMode)) {
          /* istanbul ignore next */
          cov_2oqnxdj27y().b[21][0]++;
          var newNotes =
          /* istanbul ignore next */
          (cov_2oqnxdj27y().s[69]++, (0, _extends2.default)({}, notes));
          var newNotesIndex =
          /* istanbul ignore next */
          (cov_2oqnxdj27y().s[70]++, "" + row + col);

          /* istanbul ignore next */
          cov_2oqnxdj27y().s[71]++;

          if (newNotes[newNotesIndex]) {
            /* istanbul ignore next */
            cov_2oqnxdj27y().b[23][0]++;
            cov_2oqnxdj27y().s[72]++;

            if (!newNotes[newNotesIndex].includes(selection)) {
              /* istanbul ignore next */
              cov_2oqnxdj27y().b[24][0]++;
              cov_2oqnxdj27y().s[73]++;
              newNotes[newNotesIndex].push(selection);
            } else
            /* istanbul ignore next */
            {
              cov_2oqnxdj27y().b[24][1]++;
            }
          } else {
            /* istanbul ignore next */
            cov_2oqnxdj27y().b[23][1]++;
            cov_2oqnxdj27y().s[74]++;
            newNotes[newNotesIndex] = [selection];
          }

          /* istanbul ignore next */
          cov_2oqnxdj27y().s[75]++;
          setNotes(newNotes);
        } else
        /* istanbul ignore next */
        {
          cov_2oqnxdj27y().b[21][1]++;
        }
      }
    }
  };

  /* istanbul ignore next */
  cov_2oqnxdj27y().s[76]++;

  var renderNotes = function renderNotes() {
    /* istanbul ignore next */
    cov_2oqnxdj27y().f[9]++;
    cov_2oqnxdj27y().s[77]++;

    if (
    /* istanbul ignore next */
    (cov_2oqnxdj27y().b[26][0]++, !notes) ||
    /* istanbul ignore next */
    (cov_2oqnxdj27y().b[26][1]++, !notes["" + row + col])) {
      /* istanbul ignore next */
      cov_2oqnxdj27y().b[25][0]++;
      cov_2oqnxdj27y().s[78]++;
      return _react.default.createElement(_reactNative.Text, null);
    } else
    /* istanbul ignore next */
    {
      cov_2oqnxdj27y().b[25][1]++;
    }

    var notesToRender =
    /* istanbul ignore next */
    (cov_2oqnxdj27y().s[79]++, notes["" + row + col]);
    var notesJSX =
    /* istanbul ignore next */
    (cov_2oqnxdj27y().s[80]++, []);
    var noteRows;
    var curRow =
    /* istanbul ignore next */
    (cov_2oqnxdj27y().s[81]++, []);
    var pointer =
    /* istanbul ignore next */
    (cov_2oqnxdj27y().s[82]++, 1);

    /* istanbul ignore next */
    cov_2oqnxdj27y().s[83]++;

    while (pointer <= 9) {
      /* istanbul ignore next */
      cov_2oqnxdj27y().s[84]++;
      curRow.push(_react.default.createElement(_reactNative.View, {
        key: String("Square[" + row + col + "]_Note_" + (pointer - 1))
      }, _react.default.createElement(_reactNative.Text, {
        style: styles.noteText
      }, notesToRender[pointer - 1])));

      /* istanbul ignore next */
      cov_2oqnxdj27y().s[85]++;

      if (
      /* istanbul ignore next */
      (cov_2oqnxdj27y().b[28][0]++, pointer % 3 === 0) &&
      /* istanbul ignore next */
      (cov_2oqnxdj27y().b[28][1]++, pointer > 0)) {
        /* istanbul ignore next */
        cov_2oqnxdj27y().b[27][0]++;
        cov_2oqnxdj27y().s[86]++;
        noteRows = _react.default.createElement(_reactNative.View, {
          key: String("NoteRow_" + pointer),
          style: styles.noteRow
        }, curRow);

        /* istanbul ignore next */
        cov_2oqnxdj27y().s[87]++;
        curRow = [];

        /* istanbul ignore next */
        cov_2oqnxdj27y().s[88]++;
        notesJSX.push(noteRows);
      } else
      /* istanbul ignore next */
      {
        cov_2oqnxdj27y().b[27][1]++;
      }

      cov_2oqnxdj27y().s[89]++;
      pointer++;
    }

    /* istanbul ignore next */
    cov_2oqnxdj27y().s[90]++;
    return _react.default.createElement(_reactNative.View, {
      style: styles.noteContainer
    }, notesJSX);
  };

  /* istanbul ignore next */
  cov_2oqnxdj27y().s[91]++;
  return _react.default.createElement(_reactNative.View, {
    style: styles.container
  }, _react.default.createElement(_reactNative.TouchableHighlight, {
    onPress: handleOnPress,
    testID: "gridSquare_" + row + col
  }, _react.default.createElement(_reactNative.View, {
    style: {
      borderStyle: 'solid',
      backgroundColor: color[0],
      width: 38,
      height: 38,
      borderWidth: 5,
      borderLeftColor: 'rgba(255, 255, 255, 0.20)',
      borderTopColor: 'rgba(255, 255, 255, 0.33)',
      borderRightColor: 'rgba(0, 0, 0, 0.15)',
      borderBottomColor: 'rgba(0, 0, 0, 0.5)',
      alignItems: 'center'
    },
    testID: "gridSquareView_" + board[row][col]
  }, _react.default.createElement(_reactNative.ImageBackground, {
    source: require("../assets/images/square.jpg"),
    style: styles.backgroundImage
  }, board[row][col] === null ?
  /* istanbul ignore next */
  (cov_2oqnxdj27y().b[29][0]++, renderNotes()) :
  /* istanbul ignore next */
  (cov_2oqnxdj27y().b[29][1]++, _react.default.createElement(_reactNative.Text, {
    style: {
      color: color[1],
      textAlign: 'center',
      marginTop: '20%'
    },
    testID: "gridSquareText_" + board[row][col]
  }, String(board[row][col])))))));
}

var styles =
/* istanbul ignore next */
(cov_2oqnxdj27y().s[92]++, _reactNative.StyleSheet.create({
  container: {},
  noteContainer: {
    flex: 1,
    flexDirection: 'column',
    alignItems: 'center'
  },
  noteRow: {
    flex: 1,
    flexDirection: 'row',
    alignItems: 'flex-start'
  },
  noteText: {
    fontSize: 9,
    fontFamily: 'JustAnotherHand'
  },
  backgroundImage: {
    width: '100%',
    height: '100%'
  }
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,