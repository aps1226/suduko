{"version":3,"sources":["Divider.tsx"],"names":["Divider","rest","dark","isDarkTheme","styles","inset","light","backgroundColor","black","height","StyleSheet","hairlineWidth","white","marginLeft"],"mappings":";;;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,mBAAA;;AACA,IAAA,OAAA,GAAA,OAAA,oBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA,IAAMA,OAAO,GAAG,SAAVA,OAAU,OAA6C;AAAA,MAA5C,KAA4C,QAA5C,KAA4C;AAAA,MAA5C,KAA4C,QAA5C,KAA4C;AAAA,MAA5C,KAA4C,QAA5C,KAA4C;AAAA,MAAlBC,IAAkB;AAC3D,MAAcE,WAAd,GAAA,KAAA,CAAQD,IAAR;AACA,SACE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAEE,IAAA,KAAK,EAAE,CACLC,WAAW,GAAGC,MAAM,CAAT,IAAA,GAAiBA,MAAM,CAD7B,KAAA,EAELC,KAAK,IAAID,MAAM,CAFV,KAAA,EAAA,KAAA;AAFT,GAAA,CAAA,CADF;AAFF,CAAA;;AAcA,IAAMA,MAAM,GAAG,YAAA,CAAA,UAAA,CAAA,MAAA,CAAkB;AAC/BE,EAAAA,KAAK,EAAE;AACLC,IAAAA,eAAe,EAAE,CAAA,GAAA,MAAA,CAAA,OAAA,EAAMC,OAAAA,CAAN,KAAA,EAAA,KAAA,CAAA,IAAA,EAAA,GAAA,GADZ,MACY,EADZ;AAELC,IAAAA,MAAM,EAAEC,YAAAA,CAAAA,UAAAA,CAAWC;AAFd,GADwB;AAK/BT,EAAAA,IAAI,EAAE;AACJK,IAAAA,eAAe,EAAE,CAAA,GAAA,MAAA,CAAA,OAAA,EAAMK,OAAAA,CAAN,KAAA,EAAA,KAAA,CAAA,IAAA,EAAA,GAAA,GADb,MACa,EADb;AAEJH,IAAAA,MAAM,EAAEC,YAAAA,CAAAA,UAAAA,CAAWC;AAFf,GALyB;AAS/BN,EAAAA,KAAK,EAAE;AACLQ,IAAAA,UAAU,EAAE;AADP;AATwB,CAAlB,CAAf;;eAce,CAAA,GAAA,QAAA,CAAA,SAAA,EAAA,OAAA,C","sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport { StyleSheet, View, ViewStyle, StyleProp } from 'react-native';\nimport { withTheme } from '../core/theming';\nimport { black, white } from '../styles/colors';\nimport type { $RemoveChildren } from '../types';\n\ntype Props = $RemoveChildren<typeof View> & {\n  /**\n   *  Whether divider has a left inset.\n   */\n  inset?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A divider is a thin, lightweight separator that groups content in lists and page layouts.\n *\n * <div class=\"screenshots\">\n *  <figure>\n *    <img class=\"medium\" src=\"screenshots/divider.png\" />\n *  </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Divider, Text } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View>\n *     <Text>Lemon</Text>\n *     <Divider />\n *     <Text>Mango</Text>\n *     <Divider />\n *   </View>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Divider = ({ inset, style, theme, ...rest }: Props) => {\n  const { dark: isDarkTheme } = theme;\n  return (\n    <View\n      {...rest}\n      style={[\n        isDarkTheme ? styles.dark : styles.light,\n        inset && styles.inset,\n        style,\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  light: {\n    backgroundColor: color(black).alpha(0.12).rgb().string(),\n    height: StyleSheet.hairlineWidth,\n  },\n  dark: {\n    backgroundColor: color(white).alpha(0.12).rgb().string(),\n    height: StyleSheet.hairlineWidth,\n  },\n  inset: {\n    marginLeft: 72,\n  },\n});\n\nexport default withTheme(Divider);\n"]}