759733262bd0da81d84e3716087e156e










'use strict';function _createForOfIteratorHelperLoose(o, allowArrayLike) {var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];if (it) return (it = it.call(o)).next.bind(it);if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {if (it) o = it;var i = 0;return function () {if (i >= o.length) return { done: true };return { done: false, value: o[i++] };};}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === "string") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === "Object" && o.constructor) n = o.constructor.name;if (n === "Map" || n === "Set") return Array.from(o);if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}function _createSuper(Derived) {var hasNativeReflectConstruct = _isNativeReflectConstruct();return function _createSuperInternal() {var Super = require("@babel/runtime/helpers/getPrototypeOf")(Derived),result;if (hasNativeReflectConstruct) {var NewTarget = require("@babel/runtime/helpers/getPrototypeOf")(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return require("@babel/runtime/helpers/possibleConstructorReturn")(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === "undefined" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === "function") return true;try {Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));return true;} catch (e) {return false;}}var




AnimatedWithChildren = function (_AnimatedNode) {require("@babel/runtime/helpers/inherits")(AnimatedWithChildren, _AnimatedNode);var _super = _createSuper(AnimatedWithChildren);


  function AnimatedWithChildren() {var _this;require("@babel/runtime/helpers/classCallCheck")(this, AnimatedWithChildren);
    _this = _super.call(this);
    _this._children = [];return _this;
  }require("@babel/runtime/helpers/createClass")(AnimatedWithChildren, [{ key: "__makeNative", value:

    function __makeNative() {
      if (!this.__isNative) {
        this.__isNative = true;
        for (var _iterator = _createForOfIteratorHelperLoose(this._children), _step; !(_step = _iterator()).done;) {var child = _step.value;
          child.__makeNative();
          require("../NativeAnimatedHelper").API.connectAnimatedNodes(
          this.__getNativeTag(),
          child.__getNativeTag());

        }
      }
      require("@babel/runtime/helpers/get")(require("@babel/runtime/helpers/getPrototypeOf")(AnimatedWithChildren.prototype), "__makeNative", this).call(this);
    } }, { key: "__addChild", value:

    function __addChild(child) {
      if (this._children.length === 0) {
        this.__attach();
      }
      this._children.push(child);
      if (this.__isNative) {

        child.__makeNative();
        require("../NativeAnimatedHelper").API.connectAnimatedNodes(
        this.__getNativeTag(),
        child.__getNativeTag());

      }
    } }, { key: "__removeChild", value:

    function __removeChild(child) {
      var index = this._children.indexOf(child);
      if (index === -1) {
        console.warn("Trying to remove a child that doesn't exist");
        return;
      }
      if (this.__isNative && child.__isNative) {
        require("../NativeAnimatedHelper").API.disconnectAnimatedNodes(
        this.__getNativeTag(),
        child.__getNativeTag());

      }
      this._children.splice(index, 1);
      if (this._children.length === 0) {
        this.__detach();
      }
    } }, { key: "__getChildren", value:

    function __getChildren() {
      return this._children;
    } }, { key: "__callListeners", value:

    function __callListeners(value) {
      require("@babel/runtime/helpers/get")(require("@babel/runtime/helpers/getPrototypeOf")(AnimatedWithChildren.prototype), "__callListeners", this).call(this, value);
      if (!this.__isNative) {
        for (var _iterator2 = _createForOfIteratorHelperLoose(this._children), _step2; !(_step2 = _iterator2()).done;) {var child = _step2.value;
          if (child.__getValue) {
            child.__callListeners(child.__getValue());
          }
        }
      }
    } }]);return AnimatedWithChildren;}(require("./AnimatedNode"));


module.exports = AnimatedWithChildren;