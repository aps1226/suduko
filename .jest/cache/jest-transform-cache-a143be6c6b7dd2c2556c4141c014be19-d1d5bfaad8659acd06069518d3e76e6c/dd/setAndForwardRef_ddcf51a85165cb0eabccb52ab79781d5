fadd3e0e162b7045293a7ce4bb27208b
'use strict';

function setAndForwardRef(_ref) {
  var getForwardedRef = _ref.getForwardedRef,
      setLocalRef = _ref.setLocalRef;
  return function forwardRef(ref) {
    var forwardedRef = getForwardedRef();
    setLocalRef(ref);

    if (typeof forwardedRef === 'function') {
      forwardedRef(ref);
    } else if (typeof forwardedRef === 'object' && forwardedRef != null) {
      forwardedRef.current = ref;
    }
  };
}

module.exports = setAndForwardRef;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNldEFuZEZvcndhcmRSZWYuanMiXSwibmFtZXMiOlsic2V0QW5kRm9yd2FyZFJlZiIsImdldEZvcndhcmRlZFJlZiIsInNldExvY2FsUmVmIiwiZm9yd2FyZFJlZiIsInJlZiIsImZvcndhcmRlZFJlZiIsImN1cnJlbnQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFVQTs7QUF3Q0EsU0FBU0EsZ0JBQVQsT0FHeUM7QUFBQSxNQUZ2Q0MsZUFFdUMsUUFGdkNBLGVBRXVDO0FBQUEsTUFEdkNDLFdBQ3VDLFFBRHZDQSxXQUN1QztBQUN2QyxTQUFPLFNBQVNDLFVBQVQsQ0FBb0JDLEdBQXBCLEVBQTBDO0FBQy9DLFFBQU1DLFlBQVksR0FBR0osZUFBZSxFQUFwQztBQUVBQyxJQUFBQSxXQUFXLENBQUNFLEdBQUQsQ0FBWDs7QUFHQSxRQUFJLE9BQU9DLFlBQVAsS0FBd0IsVUFBNUIsRUFBd0M7QUFFdENBLE1BQUFBLFlBQVksQ0FBQ0QsR0FBRCxDQUFaO0FBQ0QsS0FIRCxNQUdPLElBQUksT0FBT0MsWUFBUCxLQUF3QixRQUF4QixJQUFvQ0EsWUFBWSxJQUFJLElBQXhELEVBQThEO0FBRW5FQSxNQUFBQSxZQUFZLENBQUNDLE9BQWIsR0FBdUJGLEdBQXZCO0FBQ0Q7QUFDRixHQWJEO0FBY0Q7O0FBRURHLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlIsZ0JBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBAZmxvd1xuICovXG5cbid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHR5cGUge0VsZW1lbnRSZWYsIFJlZn0gZnJvbSAncmVhY3QnO1xuXG50eXBlIEFyZ3MgPSAkUmVhZE9ubHk8e3xcbiAgZ2V0Rm9yd2FyZGVkUmVmOiAoKSA9PiA/UmVmPGFueT4sXG4gIHNldExvY2FsUmVmOiAocmVmOiBFbGVtZW50UmVmPGFueT4pID0+IG1peGVkLFxufH0+O1xuXG4vKipcbiAqIFRoaXMgaXMgYSBoZWxwZXIgZnVuY3Rpb24gZm9yIHdoZW4gYSBjb21wb25lbnQgbmVlZHMgdG8gYmUgYWJsZSB0byBmb3J3YXJkIGEgcmVmXG4gKiB0byBhIGNoaWxkIGNvbXBvbmVudCwgYnV0IHN0aWxsIG5lZWRzIHRvIGhhdmUgYWNjZXNzIHRvIHRoYXQgY29tcG9uZW50IGFzIHBhcnQgb2ZcbiAqIGl0cyBpbXBsZW1lbnRhdGlvbi5cbiAqXG4gKiBJdHMgbWFpbiB1c2UgY2FzZSBpcyBpbiB3cmFwcGVycyBmb3IgbmF0aXZlIGNvbXBvbmVudHMuXG4gKlxuICogVXNhZ2U6XG4gKlxuICogICBjbGFzcyBNeVZpZXcgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICogICAgIF9uYXRpdmVSZWYgPSBudWxsO1xuICpcbiAqICAgICBfc2V0TmF0aXZlUmVmID0gc2V0QW5kRm9yd2FyZFJlZih7XG4gKiAgICAgICBnZXRGb3J3YXJkZWRSZWY6ICgpID0+IHRoaXMucHJvcHMuZm9yd2FyZGVkUmVmLFxuICogICAgICAgc2V0TG9jYWxSZWY6IHJlZiA9PiB7XG4gKiAgICAgICAgIHRoaXMuX25hdGl2ZVJlZiA9IHJlZjtcbiAqICAgICAgIH0sXG4gKiAgICAgfSk7XG4gKlxuICogICAgIHJlbmRlcigpIHtcbiAqICAgICAgIHJldHVybiA8VmlldyByZWY9e3RoaXMuX3NldE5hdGl2ZVJlZn0gLz47XG4gKiAgICAgfVxuICogICB9XG4gKlxuICogICBjb25zdCBNeVZpZXdXaXRoUmVmID0gUmVhY3QuZm9yd2FyZFJlZigocHJvcHMsIHJlZikgPT4gKFxuICogICAgIDxNeVZpZXcgey4uLnByb3BzfSBmb3J3YXJkZWRSZWY9e3JlZn0gLz5cbiAqICAgKSk7XG4gKlxuICogICBtb2R1bGUuZXhwb3J0cyA9IE15Vmlld1dpdGhSZWY7XG4gKi9cblxuZnVuY3Rpb24gc2V0QW5kRm9yd2FyZFJlZih7XG4gIGdldEZvcndhcmRlZFJlZixcbiAgc2V0TG9jYWxSZWYsXG59OiBBcmdzKTogKHJlZjogRWxlbWVudFJlZjxhbnk+KSA9PiB2b2lkIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGZvcndhcmRSZWYocmVmOiBFbGVtZW50UmVmPGFueT4pIHtcbiAgICBjb25zdCBmb3J3YXJkZWRSZWYgPSBnZXRGb3J3YXJkZWRSZWYoKTtcblxuICAgIHNldExvY2FsUmVmKHJlZik7XG5cbiAgICAvLyBGb3J3YXJkIHRvIHVzZXIgcmVmIHByb3AgKGlmIG9uZSBoYXMgYmVlbiBzcGVjaWZpZWQpXG4gICAgaWYgKHR5cGVvZiBmb3J3YXJkZWRSZWYgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIC8vIEhhbmRsZSBmdW5jdGlvbi1iYXNlZCByZWZzLiBTdHJpbmctYmFzZWQgcmVmcyBhcmUgaGFuZGxlZCBhcyBmdW5jdGlvbnMuXG4gICAgICBmb3J3YXJkZWRSZWYocmVmKTtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBmb3J3YXJkZWRSZWYgPT09ICdvYmplY3QnICYmIGZvcndhcmRlZFJlZiAhPSBudWxsKSB7XG4gICAgICAvLyBIYW5kbGUgY3JlYXRlUmVmLWJhc2VkIHJlZnNcbiAgICAgIGZvcndhcmRlZFJlZi5jdXJyZW50ID0gcmVmO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzZXRBbmRGb3J3YXJkUmVmO1xuIl19