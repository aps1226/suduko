3cc9ba2da90b0b4fb60e42fb4530b11b
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _excluded = ["style", "theme"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _theming = require("../../core/theming");

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var Text = function Text(_ref, ref) {
  var style = _ref.style,
      theme = _ref.theme,
      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var root = React.useRef(null);
  React.useImperativeHandle(ref, function () {
    return {
      setNativeProps: function setNativeProps(args) {
        var _root$current;

        return (_root$current = root.current) === null || _root$current === void 0 ? void 0 : _root$current.setNativeProps(args);
      }
    };
  });
  return React.createElement(_reactNative.Text, _extends({}, rest, {
    ref: root,
    style: [_objectSpread(_objectSpread({}, theme.fonts.regular), {}, {
      color: theme.colors.text
    }), styles.text, style]
  }));
};

var styles = _reactNative.StyleSheet.create({
  text: {
    textAlign: 'left'
  }
});

var _default = (0, _theming.withTheme)(React.forwardRef(Text));

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRleHQudHN4Il0sIm5hbWVzIjpbIlRleHQiLCJyZXN0Iiwicm9vdCIsIlJlYWN0Iiwic2V0TmF0aXZlUHJvcHMiLCJhcmdzIiwidGhlbWUiLCJjb2xvciIsInRleHQiLCJzdHlsZXMiLCJ0ZXh0QWxpZ24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFBLEtBQUEsR0FBQSx1QkFBQSxDQUFBLE9BQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQTs7QUFDQSxJQUFBLFlBQUEsR0FBQSxPQUFBLENBQUEsY0FBQSxDQUFBOztBQU1BLElBQUEsUUFBQSxHQUFBLE9BQUEsc0JBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxJQUFNQSxJQUE2QyxHQUFHLFNBQWhEQSxJQUFnRCxPQUFBLEdBQUEsRUFHakQ7QUFBQSxNQUZILEtBRUcsUUFGSCxLQUVHO0FBQUEsTUFGSCxLQUVHLFFBRkgsS0FFRztBQUFBLE1BRmdCQyxJQUVoQjtBQUNILE1BQU1DLElBQUksR0FBR0MsS0FBSyxDQUFMQSxNQUFBQSxDQUFiLElBQWFBLENBQWI7QUFFQUEsRUFBQUEsS0FBSyxDQUFMQSxtQkFBQUEsQ0FBQUEsR0FBQUEsRUFBK0I7QUFBQSxXQUFPO0FBQ3BDQyxNQUFBQSxjQUFjLEVBQUdDLHdCQUFBQSxJQUFELEVBQUE7QUFBQSxZQUFBLGFBQUE7O0FBQUEsZUFBQSxDQUFBLGFBQUEsR0FBa0JILElBQUksQ0FBdEIsT0FBQSxNQUFBLElBQUEsSUFBQSxhQUFBLEtBQUEsS0FBQSxDQUFBLEdBQUEsS0FBQSxDQUFBLEdBQWtCQSxhQUFBQSxDQUFBQSxjQUFBQSxDQUFsQixJQUFrQkEsQ0FBbEI7QUFBQTtBQURvQixLQUFQO0FBQUEsR0FBL0JDO0FBSUEsU0FDRSxLQUFBLENBQUEsYUFBQSxDQUFDLFlBQUEsQ0FBRCxJQUFBLEVBQUEsUUFBQSxDQUFBLEVBQUEsRUFBQSxJQUFBLEVBQUE7QUFFRSxJQUFBLEdBQUcsRUFGTCxJQUFBO0FBR0UsSUFBQSxLQUFLLEVBQUUsaUNBRUFHLEtBQUssQ0FBTEEsS0FBQUEsQ0FETCxPQURLO0FBR0hDLE1BQUFBLEtBQUssRUFBRUQsS0FBSyxDQUFMQSxNQUFBQSxDQUFhRTtBQUhqQixRQUtMQyxNQUFNLENBTEQsSUFBQSxFQUFBLEtBQUE7QUFIVCxHQUFBLENBQUEsQ0FERjtBQVZGLENBQUE7O0FBMEJBLElBQU1BLE1BQU0sR0FBRyxZQUFBLENBQUEsVUFBQSxDQUFBLE1BQUEsQ0FBa0I7QUFDL0JELEVBQUFBLElBQUksRUFBRTtBQUNKRSxJQUFBQSxTQUFTLEVBQUU7QUFEUDtBQUR5QixDQUFsQixDQUFmOztlQU1lLENBQUEsR0FBQSxRQUFBLENBQUEsU0FBQSxFQUFVUCxLQUFLLENBQUxBLFVBQUFBLENBQVYsSUFBVUEsQ0FBVixDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtcbiAgVGV4dCBhcyBOYXRpdmVUZXh0LFxuICBUZXh0U3R5bGUsXG4gIFN0eWxlUHJvcCxcbiAgU3R5bGVTaGVldCxcbn0gZnJvbSAncmVhY3QtbmF0aXZlJztcbmltcG9ydCB7IHdpdGhUaGVtZSB9IGZyb20gJy4uLy4uL2NvcmUvdGhlbWluZyc7XG5cbnR5cGUgUHJvcHMgPSBSZWFjdC5Db21wb25lbnRQcm9wczx0eXBlb2YgTmF0aXZlVGV4dD4gJiB7XG4gIHN0eWxlPzogU3R5bGVQcm9wPFRleHRTdHlsZT47XG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICovXG4gIHRoZW1lOiBSZWFjdE5hdGl2ZVBhcGVyLlRoZW1lO1xufTtcblxuLy8gQGNvbXBvbmVudC1ncm91cCBUeXBvZ3JhcGh5XG5cbi8qKlxuICogVGV4dCBjb21wb25lbnQgd2hpY2ggZm9sbG93cyBzdHlsZXMgZnJvbSB0aGUgdGhlbWUuXG4gKlxuICogQGV4dGVuZHMgVGV4dCBwcm9wcyBodHRwczovL3JlYWN0bmF0aXZlLmRldi9kb2NzL3RleHQjcHJvcHNcbiAqL1xuY29uc3QgVGV4dDogUmVhY3QuUmVmRm9yd2FyZGluZ0NvbXBvbmVudDx7fSwgUHJvcHM+ID0gKFxuICB7IHN0eWxlLCB0aGVtZSwgLi4ucmVzdCB9OiBQcm9wcyxcbiAgcmVmXG4pID0+IHtcbiAgY29uc3Qgcm9vdCA9IFJlYWN0LnVzZVJlZjxOYXRpdmVUZXh0IHwgbnVsbD4obnVsbCk7XG5cbiAgUmVhY3QudXNlSW1wZXJhdGl2ZUhhbmRsZShyZWYsICgpID0+ICh7XG4gICAgc2V0TmF0aXZlUHJvcHM6IChhcmdzOiBPYmplY3QpID0+IHJvb3QuY3VycmVudD8uc2V0TmF0aXZlUHJvcHMoYXJncyksXG4gIH0pKTtcblxuICByZXR1cm4gKFxuICAgIDxOYXRpdmVUZXh0XG4gICAgICB7Li4ucmVzdH1cbiAgICAgIHJlZj17cm9vdH1cbiAgICAgIHN0eWxlPXtbXG4gICAgICAgIHtcbiAgICAgICAgICAuLi50aGVtZS5mb250cy5yZWd1bGFyLFxuICAgICAgICAgIGNvbG9yOiB0aGVtZS5jb2xvcnMudGV4dCxcbiAgICAgICAgfSxcbiAgICAgICAgc3R5bGVzLnRleHQsXG4gICAgICAgIHN0eWxlLFxuICAgICAgXX1cbiAgICAvPlxuICApO1xufTtcblxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICB0ZXh0OiB7XG4gICAgdGV4dEFsaWduOiAnbGVmdCcsXG4gIH0sXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgd2l0aFRoZW1lKFJlYWN0LmZvcndhcmRSZWYoVGV4dCkpO1xuIl19