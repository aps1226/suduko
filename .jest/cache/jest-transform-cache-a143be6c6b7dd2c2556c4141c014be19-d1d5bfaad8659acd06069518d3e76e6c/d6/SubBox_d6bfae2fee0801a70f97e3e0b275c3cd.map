{"version":3,"sources":["C:\\Users\\ashee\\Documents\\Javascript\\React\\React Native\\suduko\\components\\SubBox.tsx"],"names":[],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AAGc,SAAU,MAAV,CAAiB,KAAjB,EAA6B;AAGzC,MAAQ,GAAR,GAAqB,KAArB,CAAQ,GAAR;AAAA,MAAa,GAAb,GAAqB,KAArB,CAAa,GAAb;AAEA,SACE,eAAA,aAAA,CAAC,iBAAD,EAAK;AAAC,IAAA,KAAK,EAAE,MAAM,CAAC;AAAf,GAAL,EACE,eAAA,aAAA,CAAC,iBAAD,EAAK;AAAC,IAAA,KAAK,EAAI,MAAM,CAAC;AAAjB,GAAL,EACE,eAAA,aAAA,CAAC,mBAAD,EAAW;AACT,IAAA,GAAG,EAAI,IAAI,GADF;AAET,IAAA,GAAG,EAAI,IAAI;AAFF,GAAX,CADF,EAKE,eAAA,aAAA,CAAC,mBAAD,EAAW;AACT,IAAA,GAAG,EAAI,IAAI,GADF;AAET,IAAA,GAAG,EAAI,IAAI;AAFF,GAAX,CALF,EASE,eAAA,aAAA,CAAC,mBAAD,EAAW;AACT,IAAA,GAAG,EAAI,IAAI,GADF;AAET,IAAA,GAAG,EAAI,IAAI;AAFF,GAAX,CATF,CADF,EAeE,eAAA,aAAA,CAAC,iBAAD,EAAK;AAAC,IAAA,KAAK,EAAI,MAAM,CAAC;AAAjB,GAAL,EACE,eAAA,aAAA,CAAC,mBAAD,EAAW;AACT,IAAA,GAAG,EAAI,IAAI,GADF;AAET,IAAA,GAAG,EAAI,IAAI;AAFF,GAAX,CADF,EAKE,eAAA,aAAA,CAAC,mBAAD,EAAW;AACT,IAAA,GAAG,EAAI,IAAI,GADF;AAET,IAAA,GAAG,EAAI,IAAI;AAFF,GAAX,CALF,EASE,eAAA,aAAA,CAAC,mBAAD,EAAW;AACT,IAAA,GAAG,EAAI,IAAI,GADF;AAET,IAAA,GAAG,EAAI,IAAI;AAFF,GAAX,CATF,CAfF,EA6BE,eAAA,aAAA,CAAC,iBAAD,EAAK;AAAC,IAAA,KAAK,EAAI,MAAM,CAAC;AAAjB,GAAL,EACA,eAAA,aAAA,CAAC,mBAAD,EAAW;AACP,IAAA,GAAG,EAAI,IAAI,GADJ;AAEP,IAAA,GAAG,EAAI,IAAI;AAFJ,GAAX,CADA,EAKE,eAAA,aAAA,CAAC,mBAAD,EAAW;AACT,IAAA,GAAG,EAAI,IAAI,GADF;AAET,IAAA,GAAG,EAAI,IAAI;AAFF,GAAX,CALF,EASE,eAAA,aAAA,CAAC,mBAAD,EAAW;AACT,IAAA,GAAG,EAAI,IAAI,GADF;AAET,IAAA,GAAG,EAAI,IAAI;AAFF,GAAX,CATF,CA7BF,CADF;AA8CD;;AAED,IAAM,MAAM,GAAG,wBAAW,MAAX,CAAkB;AAC/B,EAAA,SAAS,EAAE;AACT,IAAA,UAAU,EAAE;AADH,GADoB;AAI/B,EAAA,GAAG,EAAE;AACH,IAAA,aAAa,EAAC;AADX;AAJ0B,CAAlB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, Text, View } from \"react-native\";\r\n\r\nimport GridSquare from \"./GridSquare\";\r\n\r\nimport {IProps} from '../types';\r\nexport default function SubBox(props:IProps) {\r\n  \r\n  //Passed props for respective row value and column value.\r\n  const { row, col } = props;\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style = {styles.row}>\r\n        <GridSquare\r\n          row = {0 + row}\r\n          col = {0 + col}\r\n        />\r\n        <GridSquare\r\n          row = {0 + row}\r\n          col = {1 + col}\r\n        />\r\n        <GridSquare\r\n          row = {0 + row}\r\n          col = {2 + col}\r\n        />\r\n      </View>\r\n      <View style = {styles.row}>\r\n        <GridSquare\r\n          row = {1 + row}\r\n          col = {0 + col}\r\n        />\r\n        <GridSquare\r\n          row = {1 + row}\r\n          col = {1 + col}\r\n        />\r\n        <GridSquare\r\n          row = {1 + row}\r\n          col = {2 + col}\r\n        />\r\n      </View>\r\n      <View style = {styles.row}>\r\n      <GridSquare\r\n          row = {2 + row}\r\n          col = {0 + col}\r\n        />\r\n        <GridSquare\r\n          row = {2 + row}\r\n          col = {1 + col}\r\n        />\r\n        <GridSquare\r\n          row = {2 + row}\r\n          col = {2 + col}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: 'center',\r\n  },\r\n  row: {\r\n    flexDirection:'row',\r\n  }\r\n});"]}