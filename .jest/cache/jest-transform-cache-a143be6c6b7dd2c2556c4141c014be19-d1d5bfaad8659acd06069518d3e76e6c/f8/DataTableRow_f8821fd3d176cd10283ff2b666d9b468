84e6bfe566f3548163f8d67923745230
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");

var _objectWithoutProperties2 = _interopRequireDefault2(require("@babel/runtime/helpers/objectWithoutProperties"));

var _excluded = ["onPress", "style", "theme", "children", "pointerEvents"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DataTableRow = exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _color = _interopRequireDefault(require("color"));

var _reactNative = require("react-native");

var _TouchableRipple = _interopRequireDefault(require("../TouchableRipple/TouchableRipple"));

var _colors = require("../../styles/colors");

var _theming = require("../../core/theming");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var DataTableRow = function DataTableRow(_ref) {
  var onPress = _ref.onPress,
      style = _ref.style,
      theme = _ref.theme,
      children = _ref.children,
      pointerEvents = _ref.pointerEvents,
      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var borderBottomColor = (0, _color.default)(theme.dark ? _colors.white : _colors.black).alpha(0.12).rgb().string();
  return React.createElement(_TouchableRipple.default, _extends({}, rest, {
    onPress: onPress,
    style: [styles.container, {
      borderBottomColor: borderBottomColor
    }, style]
  }), React.createElement(_reactNative.View, {
    style: styles.content,
    pointerEvents: pointerEvents
  }, children));
};

exports.DataTableRow = DataTableRow;

var styles = _reactNative.StyleSheet.create({
  container: {
    borderStyle: 'solid',
    borderBottomWidth: _reactNative.StyleSheet.hairlineWidth,
    minHeight: 48,
    paddingHorizontal: 16
  },
  content: {
    flex: 1,
    flexDirection: 'row'
  }
});

var _default = (0, _theming.withTheme)(DataTableRow);

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRhdGFUYWJsZVJvdy50c3giXSwibmFtZXMiOlsiRGF0YVRhYmxlUm93IiwicmVzdCIsImJvcmRlckJvdHRvbUNvbG9yIiwidGhlbWUiLCJ3aGl0ZSIsImJsYWNrIiwic3R5bGVzIiwicG9pbnRlckV2ZW50cyIsImNvbnRhaW5lciIsImJvcmRlclN0eWxlIiwiYm9yZGVyQm90dG9tV2lkdGgiLCJTdHlsZVNoZWV0IiwibWluSGVpZ2h0IiwicGFkZGluZ0hvcml6b250YWwiLCJjb250ZW50IiwiZmxleCIsImZsZXhEaXJlY3Rpb24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBLElBQUEsS0FBQSxHQUFBLHVCQUFBLENBQUEsT0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBOztBQUNBLElBQUEsTUFBQSxHQUFBLHNCQUFBLENBQUEsT0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBOztBQUNBLElBQUEsWUFBQSxHQUFBLE9BQUEsQ0FBQSxjQUFBLENBQUE7O0FBT0EsSUFBQSxnQkFBQSxHQUFBLHNCQUFBLENBQUEsT0FBQSxzQ0FBQSxDQUFBOztBQUNBLElBQUEsT0FBQSxHQUFBLE9BQUEsdUJBQUE7O0FBQ0EsSUFBQSxRQUFBLEdBQUEsT0FBQSxzQkFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBbURBLElBQU1BLFlBQVksR0FBRyxTQUFmQSxZQUFlLE9BT1I7QUFBQSxNQVBTLE9BT1QsUUFQUyxPQU9UO0FBQUEsTUFQUyxLQU9ULFFBUFMsS0FPVDtBQUFBLE1BUFMsS0FPVCxRQVBTLEtBT1Q7QUFBQSxNQVBTLFFBT1QsUUFQUyxRQU9UO0FBQUEsTUFQUyxhQU9ULFFBUFMsYUFPVDtBQUFBLE1BRFJDLElBQ1E7QUFDWCxNQUFNQyxpQkFBaUIsR0FBRyxDQUFBLEdBQUEsTUFBQSxDQUFBLE9BQUEsRUFBTUMsS0FBSyxDQUFMQSxJQUFBQSxHQUFhQyxPQUFBQSxDQUFiRCxLQUFBQSxHQUFxQkUsT0FBQUEsQ0FBM0IsS0FBQSxFQUFBLEtBQUEsQ0FBQSxJQUFBLEVBQUEsR0FBQSxHQUExQixNQUEwQixFQUExQjtBQUtBLFNBQ0UsS0FBQSxDQUFBLGFBQUEsQ0FBQyxnQkFBQSxDQUFELE9BQUEsRUFBQSxRQUFBLENBQUEsRUFBQSxFQUFBLElBQUEsRUFBQTtBQUVFLElBQUEsT0FBTyxFQUZULE9BQUE7QUFHRSxJQUFBLEtBQUssRUFBRSxDQUFDQyxNQUFNLENBQVAsU0FBQSxFQUFtQjtBQUFFSixNQUFBQSxpQkFBQUEsRUFBQUE7QUFBRixLQUFuQixFQUFBLEtBQUE7QUFIVCxHQUFBLENBQUEsRUFLRSxLQUFBLENBQUEsYUFBQSxDQUFDLFlBQUEsQ0FBRCxJQUFBLEVBQUE7QUFBTSxJQUFBLEtBQUssRUFBRUksTUFBTSxDQUFuQixPQUFBO0FBQTZCLElBQUEsYUFBYSxFQUFFQztBQUE1QyxHQUFBLEVBTkosUUFNSSxDQUxGLENBREY7QUFiRixDQUFBOzs7O0FBMEJBLElBQU1ELE1BQU0sR0FBRyxZQUFBLENBQUEsVUFBQSxDQUFBLE1BQUEsQ0FBa0I7QUFDL0JFLEVBQUFBLFNBQVMsRUFBRTtBQUNUQyxJQUFBQSxXQUFXLEVBREYsT0FBQTtBQUVUQyxJQUFBQSxpQkFBaUIsRUFBRUMsWUFBQUEsQ0FBQUEsVUFBQUEsQ0FGVixhQUFBO0FBR1RDLElBQUFBLFNBQVMsRUFIQSxFQUFBO0FBSVRDLElBQUFBLGlCQUFpQixFQUFFO0FBSlYsR0FEb0I7QUFPL0JDLEVBQUFBLE9BQU8sRUFBRTtBQUNQQyxJQUFBQSxJQUFJLEVBREcsQ0FBQTtBQUVQQyxJQUFBQSxhQUFhLEVBQUU7QUFGUjtBQVBzQixDQUFsQixDQUFmOztlQWFlLENBQUEsR0FBQSxRQUFBLENBQUEsU0FBQSxFQUFBLFlBQUEsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBjb2xvciBmcm9tICdjb2xvcic7XG5pbXBvcnQge1xuICBTdHlsZVNoZWV0LFxuICBTdHlsZVByb3AsXG4gIFZpZXcsXG4gIFZpZXdTdHlsZSxcbiAgVmlld1Byb3BzLFxufSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IFRvdWNoYWJsZVJpcHBsZSBmcm9tICcuLi9Ub3VjaGFibGVSaXBwbGUvVG91Y2hhYmxlUmlwcGxlJztcbmltcG9ydCB7IGJsYWNrLCB3aGl0ZSB9IGZyb20gJy4uLy4uL3N0eWxlcy9jb2xvcnMnO1xuaW1wb3J0IHsgd2l0aFRoZW1lIH0gZnJvbSAnLi4vLi4vY29yZS90aGVtaW5nJztcbmltcG9ydCB0eXBlIHsgJFJlbW92ZUNoaWxkcmVuIH0gZnJvbSAnLi4vLi4vdHlwZXMnO1xuXG50eXBlIFByb3BzID0gJFJlbW92ZUNoaWxkcmVuPHR5cGVvZiBUb3VjaGFibGVSaXBwbGU+ICYge1xuICAvKipcbiAgICogQ29udGVudCBvZiB0aGUgYERhdGFUYWJsZVJvd2AuXG4gICAqL1xuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlO1xuICAvKipcbiAgICogRnVuY3Rpb24gdG8gZXhlY3V0ZSBvbiBwcmVzcy5cbiAgICovXG4gIG9uUHJlc3M/OiAoKSA9PiB2b2lkO1xuICBzdHlsZT86IFN0eWxlUHJvcDxWaWV3U3R5bGU+O1xuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqL1xuICB0aGVtZTogUmVhY3ROYXRpdmVQYXBlci5UaGVtZTtcbiAgLyoqXG4gICAqIGBwb2ludGVyRXZlbnRzYCBwYXNzZWQgdG8gdGhlIGBWaWV3YCBjb250YWluZXIsIHdoaWNoIGlzIHdyYXBwaW5nIGNoaWxkcmVuIHdpdGhpbiBgVG91Y2hhYmxlUmlwcGxlYC5cbiAgICovXG4gIHBvaW50ZXJFdmVudHM/OiBWaWV3UHJvcHNbJ3BvaW50ZXJFdmVudHMnXTtcbn07XG5cbi8qKlxuICogQSBjb21wb25lbnQgdG8gc2hvdyBhIHNpbmdsZSByb3cgaW5zaWRlIG9mIGEgdGFibGUuXG4gKlxuICogPGRpdiBjbGFzcz1cInNjcmVlbnNob3RzXCI+XG4gKiAgIDxmaWd1cmU+XG4gKiAgICAgPGltZyBjbGFzcz1cIm1lZGl1bVwiIHNyYz1cInNjcmVlbnNob3RzL2RhdGEtdGFibGUtcm93LWNlbGwucG5nXCIgLz5cbiAqICAgPC9maWd1cmU+XG4gKiA8L2Rpdj5cbiAqXG4gKlxuICogIyMgVXNhZ2VcbiAqIGBgYGpzXG4gKiBpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG4gKiBpbXBvcnQgeyBEYXRhVGFibGUgfSBmcm9tICdyZWFjdC1uYXRpdmUtcGFwZXInO1xuICpcbiAqIGNvbnN0IE15Q29tcG9uZW50ID0gKCkgPT4gKFxuICogICAgICA8RGF0YVRhYmxlLlJvdz5cbiAqICAgICAgICA8RGF0YVRhYmxlLkNlbGwgbnVtZXJpYz4xPC9EYXRhVGFibGUuQ2VsbD5cbiAqICAgICAgICA8RGF0YVRhYmxlLkNlbGwgbnVtZXJpYz4yPC9EYXRhVGFibGUuQ2VsbD5cbiAqICAgICAgICA8RGF0YVRhYmxlLkNlbGwgbnVtZXJpYz4zPC9EYXRhVGFibGUuQ2VsbD5cbiAqICAgICAgICA8RGF0YVRhYmxlLkNlbGwgbnVtZXJpYz40PC9EYXRhVGFibGUuQ2VsbD5cbiAqICAgICAgPC9EYXRhVGFibGUuUm93PlxuICogKTtcbiAqXG4gKiBleHBvcnQgZGVmYXVsdCBNeUNvbXBvbmVudDtcbiAqIGBgYFxuICovXG5cbmNvbnN0IERhdGFUYWJsZVJvdyA9ICh7XG4gIG9uUHJlc3MsXG4gIHN0eWxlLFxuICB0aGVtZSxcbiAgY2hpbGRyZW4sXG4gIHBvaW50ZXJFdmVudHMsXG4gIC4uLnJlc3Rcbn06IFByb3BzKSA9PiB7XG4gIGNvbnN0IGJvcmRlckJvdHRvbUNvbG9yID0gY29sb3IodGhlbWUuZGFyayA/IHdoaXRlIDogYmxhY2spXG4gICAgLmFscGhhKDAuMTIpXG4gICAgLnJnYigpXG4gICAgLnN0cmluZygpO1xuXG4gIHJldHVybiAoXG4gICAgPFRvdWNoYWJsZVJpcHBsZVxuICAgICAgey4uLnJlc3R9XG4gICAgICBvblByZXNzPXtvblByZXNzfVxuICAgICAgc3R5bGU9e1tzdHlsZXMuY29udGFpbmVyLCB7IGJvcmRlckJvdHRvbUNvbG9yIH0sIHN0eWxlXX1cbiAgICA+XG4gICAgICA8VmlldyBzdHlsZT17c3R5bGVzLmNvbnRlbnR9IHBvaW50ZXJFdmVudHM9e3BvaW50ZXJFdmVudHN9PlxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICA8L1ZpZXc+XG4gICAgPC9Ub3VjaGFibGVSaXBwbGU+XG4gICk7XG59O1xuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIGNvbnRhaW5lcjoge1xuICAgIGJvcmRlclN0eWxlOiAnc29saWQnLFxuICAgIGJvcmRlckJvdHRvbVdpZHRoOiBTdHlsZVNoZWV0LmhhaXJsaW5lV2lkdGgsXG4gICAgbWluSGVpZ2h0OiA0OCxcbiAgICBwYWRkaW5nSG9yaXpvbnRhbDogMTYsXG4gIH0sXG4gIGNvbnRlbnQ6IHtcbiAgICBmbGV4OiAxLFxuICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICB9LFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhUaGVtZShEYXRhVGFibGVSb3cpO1xuXG4vLyBAY29tcG9uZW50LWRvY3MgaWdub3JlLW5leHQtbGluZVxuZXhwb3J0IHsgRGF0YVRhYmxlUm93IH07XG4iXX0=